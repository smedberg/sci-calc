{"version":3,"sources":["SciGrammar.js","UnitsGrammar.js","FormulaInput.js","ResultsDisplay.js","ConstantsDisplay.js","TypeSimplifier.js","Calculator.js","App.js","reportWebVitals.js","index.js"],"names":["peg$SyntaxError","message","expected","found","location","this","name","Error","captureStackTrace","child","parent","ctor","constructor","prototype","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","class","i","escapedParts","parts","length","Array","classEscape","inverted","any","end","other","description","hex","ch","charCodeAt","toString","toUpperCase","s","replace","j","descriptions","type","sort","slice","join","describeExpected","describeFound","module","exports","SyntaxError","parse","input","options","peg$result","peg$FAILED","peg$startRuleFunctions","Expression","peg$parseExpression","peg$startRuleFunction","peg$c0","peg$c1","peg$literalExpectation","peg$c2","peg$c3","peg$c4","head","tail","reduce","result","element","numLeft","numRight","unitLeft","units","UNTYPED","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","unitRight","peg$c10","peg$c11","peg$c12","Math","pow","peg$c13","peg$otherExpectation","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","expr","peg$c19","peg$c20","peg$c21","peg$classExpectation","peg$c22","peg$c23","peg$c24","func","close","funcName","value","sin","cos","tan","abs","acos","acosh","asin","asinh","atan","atanh","cbrt","ceil","clz32","cosh","exp","expm1","floor","fround","log","log1p","log10","log2","round","sinh","sqrt","tanh","trunc","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","peg$c30","chars","undefined","window","SCIPARSER_CONSTANTS","constName","has","constValue","get","peg$c31","peg$c32","peg$c33","peg$c34","num","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$c50","unit","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","parseInt","peg$c58","peg$c59","peg$c60","peg$c61","parseFloat","peg$c62","peg$c63","peg$c64","peg$c65","m","exec","peg$c66","peg$c67","peg$c68","peg$currPos","peg$savedPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","substring","peg$computeLocation","peg$buildStructuredError","ignoreCase","peg$computePosDetails","pos","p","details","startPos","endPos","startPosDetails","endPosDetails","start","offset","peg$fail","push","s0","s1","s2","s3","s4","s5","s6","s7","peg$parseTerm","peg$parsews","peg$parseExponent","peg$parseFactor","peg$parseGrouped","peg$parseNumber","test","charAt","peg$parseUngroupedUnits","peg$parseGroupedUnits","peg$parseUnits","peg$parseTypedNumber","s8","peg$parseUnaryFunc","peg$parseUntypedNumber","peg$parseConstant","peg$parseUnit","s9","s10","s11","peg$parseSci","peg$parseFloat","peg$parseInteger","Term","operator","leftUnits","rightUnits","concatted","concat","retval","reduceUnits","rightUnit","exponent","concatenated","power","resultItem","groupedOrUnits","groupOrUnit","ret","substr","peg$parseReciprocal","unitsArray","combined","Map","set","res","from","item","filter","Boolean","x","y","localeCompare","FormulaInput","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","onChange","_this2","react_default","a","createElement","formula","e","target","className","placeholder","rows","data-testid","React","Component","ResultDisplay","resultValue","isNaN","toExponential","ResultsDisplay","display","results","ResultsDisplay_ResultDisplay","key","ConstantDisplay","symbol","ConstantsDisplay","constants","currentConstants","currentConstantNames","toConsumableArray","keys","constantKey","constantInfo","constantValue","constantUnits","ConstantsDisplay_ConstantDisplay","colSpan","TypeSimplifier","parsed","UnitsParse","numerator","denominator","inNumerator","parsedItem","destination","absoluteExponent","PI","E","SETTER_LINE_REGEXP","Calculator","lines","split","trim","startsWith","setterMatch","parsedLine","SciParse","simplify","error","errorMessage","App","formulaFromHash","decodeURIComponent","URL","document","hash","onHashChange","bind","assertThisInitialized","addEventListener","removeEventListener","changedFormula","setState","url_ob","encodeURIComponent","href","calculated","calculate","src_FormulaInput_0","src_ResultsDisplay_0","src_ConstantsDisplay_0","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","container","getElementById","createRoot","render","src_App_0"],"mappings":"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","file":"static/js/main.ef1ccf40.chunk.js","sourcesContent":["/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { Expression: peg$parseExpression },\n      peg$startRuleFunction  = peg$parseExpression,\n\n      peg$c0 = \"+\",\n      peg$c1 = peg$literalExpectation(\"+\", false),\n      peg$c2 = \"-\",\n      peg$c3 = peg$literalExpectation(\"-\", false),\n      peg$c4 = function(head, tail) {\r\n            log(\"In SciGrammar add/subtract processing, head is \", head, \", tail is \", tail);\r\n            return tail.reduce(function(result, element) {\r\n              log(\"In SciGrammar add/subtract reduction, result is \", result, \", element is \", element);\r\n              const numLeft = result[0];\r\n              const numRight = element[3][0];\r\n              const unitLeft = result[1];\r\n              // TODO: Check if units of result[1] match units of element[3][1]\r\n              log(\"Handling addition, assuming that type \", result[1], \" matches type \", element[3][1]);\r\n              var units = unitLeft;\r\n              if (unitLeft == UNTYPED) {\r\n                units = element[3][1];\r\n              }\r\n              units = units.replace(/ /g, '⋅').replace(/\\*/g, '⋅');\r\n              if (element[1] === \"+\") {\r\n                return [numLeft + numRight, units];\r\n              }\r\n              if (element[1] === \"-\") {\r\n                return [numLeft - numRight, units];\r\n              }\r\n            }, head);\r\n          },\n      peg$c5 = \"*\",\n      peg$c6 = peg$literalExpectation(\"*\", false),\n      peg$c7 = \"/\",\n      peg$c8 = peg$literalExpectation(\"/\", false),\n      peg$c9 = function(head, tail) {\r\n            log(\"In SciGrammar multiply/divide processing, head is \", head, \", tail is \", tail);\r\n            return tail.reduce(function(result, element) {\r\n              log(\"In SciGrammar multiply/divide reduction, result is \", result, \", element is \", element);\r\n              const numLeft = result[0];\r\n              const numRight = element[3][0];\r\n              const unitLeft = result[1];\r\n              const unitRight = element[3][1];\r\n              if (element[1] === \"*\") {\r\n                var units;\r\n                if (unitLeft == UNTYPED) {\r\n                  units = unitRight;\r\n                } else if (unitRight == UNTYPED) {\r\n                  units = unitLeft;\r\n                } else {\r\n                  units = '(' + unitLeft + ')⋅(' + unitRight + ')';\r\n                }\r\n                units = units.replace(/ /g, '⋅').replace(/\\*/g, '⋅');\r\n                return [numLeft * numRight, units];\r\n              }\r\n              if (element[1] === \"/\") {\r\n                var units;\r\n                if (unitRight == UNTYPED) {\r\n                  units = unitLeft;\r\n                } else if (unitLeft == UNTYPED) {\r\n                  units = '(' + unitRight + ')^-1';\r\n                } else {\r\n                  units = '(' + unitLeft + ')/(' + unitRight + ')';\r\n                }\r\n                units = units.replace(/ /g, '⋅').replace(/\\*/g, '⋅');\r\n                return [numLeft / numRight, units];\r\n              }\r\n            }, head);\r\n          },\n      peg$c10 = \"^\",\n      peg$c11 = peg$literalExpectation(\"^\", false),\n      peg$c12 = function(head, tail) {\r\n            log(\"In SciGrammar exponent processing, head is \", head, \", tail is \", tail);\r\n            return tail.reduce(function(result, element) {\r\n              log(\"In SciGrammar exponent reduction, result is \", result, \", element is \", element);\r\n              const numLeft = result[0];\r\n              const numRight = element[3][0];\r\n              const unitLeft = result[1];\r\n              var units = UNTYPED;\r\n              if (unitLeft !== UNTYPED) {\r\n                units = '(' + unitLeft + ')^' + numRight\r\n              }\r\n              return [Math.pow(numLeft, numRight), units];\r\n            }, head);\r\n          },\n      peg$c13 = peg$otherExpectation(\"grouped\"),\n      peg$c14 = \"(\",\n      peg$c15 = peg$literalExpectation(\"(\", false),\n      peg$c16 = \")\",\n      peg$c17 = peg$literalExpectation(\")\", false),\n      peg$c18 = function(expr) {\r\n          log(\"In SciGrammar group processing, expr is \", expr);\r\n          return expr;\r\n        },\n      peg$c19 = peg$otherExpectation(\"unary function\"),\n      peg$c20 = /^[a-z]/,\n      peg$c21 = peg$classExpectation([[\"a\", \"z\"]], false, false),\n      peg$c22 = /^[a-z0-9]/,\n      peg$c23 = peg$classExpectation([[\"a\", \"z\"], [\"0\", \"9\"]], false, false),\n      peg$c24 = function(func, expr, close) {\r\n          log(\"In SciGrammar unary function processing, func is \", func, \", expr is \", expr);\r\n          const funcName = func[0] + func[1].join('');\r\n          const value = expr[0];\r\n\r\n          switch (funcName) {\r\n            case \"sin\":\r\n              return [Math.sin(value), UNTYPED];\r\n            case \"cos\":\r\n              return [Math.cos(value), UNTYPED];\r\n            case \"tan\":\r\n              return [Math.tan(value), UNTYPED];\r\n            case \"abs\":\r\n              return [Math.abs(value), UNTYPED];\r\n            case \"acos\":\r\n              return [Math.acos(value), UNTYPED];\r\n            case \"acosh\":\r\n              return [Math.acosh(value), UNTYPED];\r\n            case \"asin\":\r\n              return [Math.asin(value), UNTYPED];\r\n            case \"asinh\":\r\n              return [Math.asinh(value), UNTYPED];\r\n            case \"atan\":\r\n              return [Math.atan(value), UNTYPED];\r\n            case \"atanh\":\r\n              return [Math.atanh(value), UNTYPED];\r\n            case \"cbrt\":\r\n              return [Math.cbrt(value), UNTYPED];\r\n            case \"ceil\":\r\n              return [Math.ceil(value), UNTYPED];\r\n            case \"clz32\":\r\n              return [Math.clz32(value), UNTYPED];\r\n            case \"cos\":\r\n              return [Math.cos(value), UNTYPED];\r\n            case \"cosh\":\r\n              return [Math.cosh(value), UNTYPED];\r\n            case \"exp\":\r\n              return [Math.exp(value), UNTYPED];\r\n            case \"expm1\":\r\n              return [Math.expm1(value), UNTYPED];\r\n            case \"floor\":\r\n              return [Math.floor(value), UNTYPED];\r\n            case \"fround\":\r\n              return [Math.fround(value), UNTYPED];\r\n            case \"log\":\r\n              return [Math.log(value), UNTYPED];\r\n            case \"log1p\":\r\n              return [Math.log1p(value), UNTYPED];\r\n            case \"log10\":\r\n              return [Math.log10(value), UNTYPED];\r\n            case \"log2\":\r\n              return [Math.log2(value), UNTYPED];\r\n            case \"round\":\r\n              return [Math.round(value), UNTYPED];\r\n            case \"sin\":\r\n              return [Math.sin(value), UNTYPED];\r\n            case \"sinh\":\r\n              return [Math.sinh(value), UNTYPED];\r\n            case \"sqrt\":\r\n              return [Math.sqrt(value), UNTYPED];\r\n            case \"tan\":\r\n              return [Math.tan(value), UNTYPED];\r\n            case \"tanh\":\r\n              return [Math.tanh(value), UNTYPED];\r\n            case \"trunc\":\r\n              return [Math.trunc(value), UNTYPED];\r\n            default:\r\n              expected(\"unrecognized unary function '\" + funcName + \"'\");\r\n          }\r\n        },\n      peg$c25 = peg$otherExpectation(\"constant\"),\n      peg$c26 = /^[a-zA-Z]/,\n      peg$c27 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"]], false, false),\n      peg$c28 = /^[a-zA-Z0-9]/,\n      peg$c29 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"]], false, false),\n      peg$c30 = function(chars) {\r\n          log(\"In SciGrammar constant processing, chars is \", chars);\r\n          if (window.SCIPARSER_CONSTANTS == undefined) {\r\n            expected(\"predefined constant\");\r\n          } else {\r\n            const constName = chars[0] + chars[1].join('');\r\n\r\n            if (window.SCIPARSER_CONSTANTS.has(constName)) {\r\n              const constValue = window.SCIPARSER_CONSTANTS.get(constName)\r\n              log(\"Fount constant \" + constName + \" with value \", constValue);\r\n              return constValue;\r\n            }\r\n            log(\"Failed to find constant \" + constName);\r\n            expected(\"predefined constant\");\r\n          }\r\n        },\n      peg$c31 = peg$otherExpectation(\"typed number\"),\n      peg$c32 = /^[ \\t\\n\\r]/,\n      peg$c33 = peg$classExpectation([\" \", \"\\t\", \"\\n\", \"\\r\"], false, false),\n      peg$c34 = function(num, units) {\r\n          return [num, units];\r\n        },\n      peg$c35 = peg$otherExpectation(\"units\"),\n      peg$c36 = /^[*\\u22C5\\/]/,\n      peg$c37 = peg$classExpectation([\"*\", \"\\u22C5\", \"/\"], false, false),\n      peg$c38 = function(head, tail) {\r\n          return text();\r\n        },\n      peg$c39 = peg$otherExpectation(\"ungrouped units\"),\n      peg$c40 = peg$otherExpectation(\"grouped units\"),\n      peg$c41 = /^[*\\u22C5\\/ ]/,\n      peg$c42 = peg$classExpectation([\"*\", \"\\u22C5\", \"/\", \" \"], false, false),\n      peg$c43 = /^[\\S\\s]/,\n      peg$c44 = peg$classExpectation([], true, false),\n      peg$c45 = /^[+\\-]/,\n      peg$c46 = peg$classExpectation([\"+\", \"-\"], false, false),\n      peg$c47 = /^[0-9]/,\n      peg$c48 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c49 = peg$otherExpectation(\"unit\"),\n      peg$c50 = function(unit) {\r\n          return text();\r\n        },\n      peg$c51 = peg$otherExpectation(\"untyped number\"),\n      peg$c52 = function(num) {\r\n          log(\"In SciGrammar UntypedNumber processing, num is \", num);\r\n          return [num, UNTYPED];\r\n        },\n      peg$c53 = peg$otherExpectation(\"number\"),\n      peg$c54 = peg$otherExpectation(\"integer\"),\n      peg$c55 = /^[\\-+]/,\n      peg$c56 = peg$classExpectation([\"-\", \"+\"], false, false),\n      peg$c57 = function() {\r\n          log(\"In SciGrammar Integer processing, text is \", text());\r\n          return parseInt(text(), 10);\r\n        },\n      peg$c58 = peg$otherExpectation(\"float\"),\n      peg$c59 = \".\",\n      peg$c60 = peg$literalExpectation(\".\", false),\n      peg$c61 = function() {\r\n          log(\"In SciGrammar Float processing, text is \", text());\r\n          return parseFloat(text(), 10);\r\n        },\n      peg$c62 = peg$otherExpectation(\"scientific notation\"),\n      peg$c63 = \"e\",\n      peg$c64 = peg$literalExpectation(\"e\", false),\n      peg$c65 = function() {\r\n          log(\"In SciGrammar Sci processing, text is \", text());\r\n          const m = /([-+]?[0-9]+(.[0-9]+)?)[eE]([-+]?[0-9]+)/.exec(text());\r\n          return parseFloat(m[1], 10) * Math.pow(10, parseInt(m[3]));\r\n         },\n      peg$c66 = peg$otherExpectation(\"whitespace\"),\n      peg$c67 = /^[ \\t]/,\n      peg$c68 = peg$classExpectation([\" \", \"\\t\"], false, false),\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parseExpression() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseTerm();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parsews();\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 43) {\n          s5 = peg$c0;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c1); }\n        }\n        if (s5 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 45) {\n            s5 = peg$c2;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c3); }\n          }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsews();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseTerm();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parsews();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 43) {\n            s5 = peg$c0;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c1); }\n          }\n          if (s5 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 45) {\n              s5 = peg$c2;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c3); }\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsews();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseTerm();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c4(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTerm() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseExponent();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parsews();\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 42) {\n          s5 = peg$c5;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c6); }\n        }\n        if (s5 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 47) {\n            s5 = peg$c7;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c8); }\n          }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsews();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseExponent();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parsews();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 42) {\n            s5 = peg$c5;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c6); }\n          }\n          if (s5 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 47) {\n              s5 = peg$c7;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c8); }\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsews();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseExponent();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c9(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExponent() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseFactor();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parsews();\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 94) {\n          s5 = peg$c10;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c11); }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsews();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseFactor();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parsews();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 94) {\n            s5 = peg$c10;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c11); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsews();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseFactor();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c12(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseFactor() {\n    var s0;\n\n    s0 = peg$parseGrouped();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseTypedNumber();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseUnaryFunc();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseUntypedNumber();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseConstant();\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseGrouped() {\n    var s0, s1, s2, s3, s4, s5;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c14;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c15); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseExpression();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsews();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s5 = peg$c16;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c17); }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c18(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c13); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnaryFunc() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (peg$c20.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c21); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = [];\n      if (peg$c22.test(input.charAt(peg$currPos))) {\n        s4 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c23); }\n      }\n      if (s4 !== peg$FAILED) {\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          if (peg$c22.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c23); }\n          }\n        }\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s3 = peg$c14;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c15); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsews();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseExpression();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$currPos;\n              s7 = peg$parsews();\n              if (s7 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s8 = peg$c16;\n                  peg$currPos++;\n                } else {\n                  s8 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c17); }\n                }\n                if (s8 !== peg$FAILED) {\n                  s7 = [s7, s8];\n                  s6 = s7;\n                } else {\n                  peg$currPos = s6;\n                  s6 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s6;\n                s6 = peg$FAILED;\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c24(s1, s5, s6);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c19); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseConstant() {\n    var s0, s1, s2, s3, s4, s5;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      if (peg$c26.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c27); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        if (peg$c28.test(input.charAt(peg$currPos))) {\n          s5 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c29); }\n        }\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          if (peg$c28.test(input.charAt(peg$currPos))) {\n            s5 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c29); }\n          }\n        }\n        if (s4 !== peg$FAILED) {\n          s3 = [s3, s4];\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c30(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c25); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseTypedNumber() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseNumber();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c32.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c33); }\n      }\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c32.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c33); }\n          }\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseUnits();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c34(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c31); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnits() {\n    var s0, s1, s2, s3, s4, s5;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseUngroupedUnits();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseGroupedUnits();\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      if (peg$c36.test(input.charAt(peg$currPos))) {\n        s4 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c37); }\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseUngroupedUnits();\n        if (s5 === peg$FAILED) {\n          s5 = peg$parseGroupedUnits();\n        }\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        if (peg$c36.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c37); }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseUngroupedUnits();\n          if (s5 === peg$FAILED) {\n            s5 = peg$parseGroupedUnits();\n          }\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c38(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c35); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUngroupedUnits() {\n    var s0, s1, s2, s3, s4, s5;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseUnit();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      if (peg$c36.test(input.charAt(peg$currPos))) {\n        s4 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c37); }\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseUnit();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        if (peg$c36.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c37); }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseUnit();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c38(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c39); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseGroupedUnits() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c14;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c15); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseUnit();\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$currPos;\n          s6 = peg$parsews();\n          if (s6 !== peg$FAILED) {\n            if (peg$c41.test(input.charAt(peg$currPos))) {\n              s7 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c42); }\n            }\n            if (s7 !== peg$FAILED) {\n              s8 = peg$parsews();\n              if (s8 !== peg$FAILED) {\n                s9 = peg$parseUnit();\n                if (s9 !== peg$FAILED) {\n                  s6 = [s6, s7, s8, s9];\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$currPos;\n            s6 = peg$parsews();\n            if (s6 !== peg$FAILED) {\n              if (peg$c41.test(input.charAt(peg$currPos))) {\n                s7 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c42); }\n              }\n              if (s7 !== peg$FAILED) {\n                s8 = peg$parsews();\n                if (s8 !== peg$FAILED) {\n                  s9 = peg$parseUnit();\n                  if (s9 !== peg$FAILED) {\n                    s6 = [s6, s7, s8, s9];\n                    s5 = s6;\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsews();\n            if (s5 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s6 = peg$c16;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c17); }\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$currPos;\n                if (peg$c43.test(input.charAt(peg$currPos))) {\n                  s8 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s8 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c44); }\n                }\n                if (s8 !== peg$FAILED) {\n                  if (peg$c45.test(input.charAt(peg$currPos))) {\n                    s9 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s9 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c46); }\n                  }\n                  if (s9 === peg$FAILED) {\n                    s9 = null;\n                  }\n                  if (s9 !== peg$FAILED) {\n                    s10 = [];\n                    if (peg$c47.test(input.charAt(peg$currPos))) {\n                      s11 = input.charAt(peg$currPos);\n                      peg$currPos++;\n                    } else {\n                      s11 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c48); }\n                    }\n                    if (s11 !== peg$FAILED) {\n                      while (s11 !== peg$FAILED) {\n                        s10.push(s11);\n                        if (peg$c47.test(input.charAt(peg$currPos))) {\n                          s11 = input.charAt(peg$currPos);\n                          peg$currPos++;\n                        } else {\n                          s11 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c48); }\n                        }\n                      }\n                    } else {\n                      s10 = peg$FAILED;\n                    }\n                    if (s10 !== peg$FAILED) {\n                      s8 = [s8, s9, s10];\n                      s7 = s8;\n                    } else {\n                      peg$currPos = s7;\n                      s7 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s7;\n                    s7 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s7;\n                  s7 = peg$FAILED;\n                }\n                if (s7 === peg$FAILED) {\n                  s7 = null;\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c38(s3, s4);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c40); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnit() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = [];\n    if (peg$c26.test(input.charAt(peg$currPos))) {\n      s3 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s3 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c27); }\n    }\n    if (s3 !== peg$FAILED) {\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$c26.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c27); }\n        }\n      }\n    } else {\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$currPos;\n      if (peg$c43.test(input.charAt(peg$currPos))) {\n        s4 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c44); }\n      }\n      if (s4 !== peg$FAILED) {\n        if (peg$c45.test(input.charAt(peg$currPos))) {\n          s5 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c46); }\n        }\n        if (s5 === peg$FAILED) {\n          s5 = null;\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = [];\n          if (peg$c47.test(input.charAt(peg$currPos))) {\n            s7 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c48); }\n          }\n          if (s7 !== peg$FAILED) {\n            while (s7 !== peg$FAILED) {\n              s6.push(s7);\n              if (peg$c47.test(input.charAt(peg$currPos))) {\n                s7 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c48); }\n              }\n            }\n          } else {\n            s6 = peg$FAILED;\n          }\n          if (s6 !== peg$FAILED) {\n            s4 = [s4, s5, s6];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c50(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c49); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUntypedNumber() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseNumber();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c52(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c51); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseNumber() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = peg$parseSci();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseFloat();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseInteger();\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c53); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseInteger() {\n    var s0, s1, s2, s3, s4;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    if (s1 !== peg$FAILED) {\n      if (peg$c55.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c56); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (peg$c47.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c48); }\n        }\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            if (peg$c47.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c48); }\n            }\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c57();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c54); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseFloat() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    if (s1 !== peg$FAILED) {\n      if (peg$c55.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c56); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (peg$c47.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c48); }\n        }\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            if (peg$c47.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c48); }\n            }\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s4 = peg$c59;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c60); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            if (peg$c47.test(input.charAt(peg$currPos))) {\n              s6 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c48); }\n            }\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              if (peg$c47.test(input.charAt(peg$currPos))) {\n                s6 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c48); }\n              }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c61();\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c58); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseSci() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    if (s1 !== peg$FAILED) {\n      if (peg$c55.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c56); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (peg$c47.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c48); }\n        }\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            if (peg$c47.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c48); }\n            }\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s5 = peg$c59;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c60); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = [];\n            if (peg$c47.test(input.charAt(peg$currPos))) {\n              s7 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c48); }\n            }\n            while (s7 !== peg$FAILED) {\n              s6.push(s7);\n              if (peg$c47.test(input.charAt(peg$currPos))) {\n                s7 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c48); }\n              }\n            }\n            if (s6 !== peg$FAILED) {\n              s5 = [s5, s6];\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 101) {\n              s5 = peg$c63;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c64); }\n            }\n            if (s5 !== peg$FAILED) {\n              if (peg$c55.test(input.charAt(peg$currPos))) {\n                s6 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c56); }\n              }\n              if (s6 === peg$FAILED) {\n                s6 = null;\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = [];\n                if (peg$c47.test(input.charAt(peg$currPos))) {\n                  s8 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s8 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c48); }\n                }\n                if (s8 !== peg$FAILED) {\n                  while (s8 !== peg$FAILED) {\n                    s7.push(s8);\n                    if (peg$c47.test(input.charAt(peg$currPos))) {\n                      s8 = input.charAt(peg$currPos);\n                      peg$currPos++;\n                    } else {\n                      s8 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c48); }\n                    }\n                  }\n                } else {\n                  s7 = peg$FAILED;\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c65();\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c62); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsews() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    if (peg$c67.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c68); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c67.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c68); }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c66); }\n    }\n\n    return s0;\n  }\n\n\r\n    const UNTYPED = \"untyped\";\r\n\r\n    function log() {\r\n      //console.log(...arguments);\r\n    }\r\n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n","/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { Term: peg$parseTerm },\n      peg$startRuleFunction  = peg$parseTerm,\n\n      peg$c0 = \"*\",\n      peg$c1 = peg$literalExpectation(\"*\", false),\n      peg$c2 = \" \",\n      peg$c3 = peg$literalExpectation(\" \", false),\n      peg$c4 = \"\\u22C5\",\n      peg$c5 = peg$literalExpectation(\"\\u22C5\", false),\n      peg$c6 = \"/\",\n      peg$c7 = peg$literalExpectation(\"/\", false),\n      peg$c8 = function(head, tail) {\r\n            log(\"In UnitsGrammar multiply/divide processing, head is \", head, \", tail is \", tail);\r\n            return tail.reduce(function(result, element) {\r\n              log(\"In UnitsGrammar multiply/divide processing, result is \", result, \", element is \", element);\r\n              const operator = element[0];\r\n              const leftUnits = result;\r\n              const rightUnits = element[2];\r\n              log(\"In UnitsGrammar multiply/divide processing, operator is \", operator, \", leftUnits is \", leftUnits, \", rightUnits is \", rightUnits);\r\n              if (operator === \"*\" || operator === \" \" || operator === \"⋅\") {\r\n                log(\"In UnitsGrammar multiply/divide, multiplying\");\r\n                const concatted = leftUnits.concat(rightUnits);\r\n                log(\"In UnitsGrammar multiply/divide, returning reduction of \", concatted);\r\n                const retval = reduceUnits(concatted);\r\n                log(\"In UnitsGrammar multiply/divide processing, returning \", retval);\r\n                return retval;\r\n              } else {\r\n                // division\r\n                for (let i = 0; i < rightUnits.length; i++) {\r\n                  const rightUnit = rightUnits[i];\r\n                  rightUnit.exponent = -1 * rightUnit.exponent;\r\n                }\r\n                log(\"In UnitsGrammar multiply/divide processing, concatenating \", leftUnits, \" with \", rightUnits);\r\n                const concatenated = leftUnits.concat(rightUnits);\r\n                log(\"In UnitsGrammar multiply/divide processing, concatenated is \", concatenated);\r\n                const retval = reduceUnits(concatenated);\r\n                log(\"In UnitsGrammar multiply/divide processing, returning \", retval);\r\n                return reduceUnits(retval);\r\n              }\r\n            }, head);\r\n          },\n      peg$c9 = \"^\",\n      peg$c10 = peg$literalExpectation(\"^\", false),\n      peg$c11 = function(head, tail) {\r\n            log(\"In UnitsGrammar exponent processing, head is \", head, \", tail is \", tail);\r\n            return tail.reduce(function(result, element) {\r\n              log(\"In UnitsGrammar exponent processing, result is \", result, \", element is \", element, \", type: \", typeof(element[3]));\r\n              const power = element[3];\r\n              for (let i = 0; i < result.length; i++) {\r\n                const resultItem = result[i];\r\n                resultItem.exponent = resultItem.exponent * power;\r\n              }\r\n              log(\"In UnitsGrammar exponent processing, returning \", result);\r\n              return result;\r\n            }, head);\r\n          },\n      peg$c12 = \"1/\",\n      peg$c13 = peg$literalExpectation(\"1/\", false),\n      peg$c14 = function(groupedOrUnits) {\r\n          for (var i = 0; i < groupedOrUnits.length; i++) {\r\n            const groupOrUnit = groupedOrUnits[i];\r\n            groupOrUnit.exponent = -1 * groupOrUnit.exponent;\r\n          }\r\n          return groupedOrUnits;\r\n        },\n      peg$c15 = peg$otherExpectation(\"grouped\"),\n      peg$c16 = \"(\",\n      peg$c17 = peg$literalExpectation(\"(\", false),\n      peg$c18 = \")\",\n      peg$c19 = peg$literalExpectation(\")\", false),\n      peg$c20 = function(expr) {\r\n          log(\"In UnitsGrammar group processing, expr is \", expr);\r\n          return expr;\r\n        },\n      peg$c21 = peg$otherExpectation(\"units\"),\n      peg$c22 = /^[a-zA-Z]/,\n      peg$c23 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"]], false, false),\n      peg$c24 = function(units) {\r\n          log(\"In UnitsGrammar Units processing, text: \", text());\r\n          //const joinedUnits = units[0] + units[1].join('');\r\n          //log(\"In UnitsGrammar Units, joinedUnits: \", joinedUnits);\r\n          const ret = [{units: text(), exponent: 1}];\r\n          log(\"In UnitsGrammar Units processing, returning: \", ret);\r\n          return ret;\r\n        },\n      peg$c25 = peg$otherExpectation(\"integer\"),\n      peg$c26 = /^[\\-+]/,\n      peg$c27 = peg$classExpectation([\"-\", \"+\"], false, false),\n      peg$c28 = /^[0-9]/,\n      peg$c29 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c30 = function() {\r\n          log(\"In UnitsGrammar Integer processing, text is \", text());\r\n          return parseInt(text(), 10);\r\n        },\n      peg$c31 = peg$otherExpectation(\"whitespace\"),\n      peg$c32 = /^[ \\t]/,\n      peg$c33 = peg$classExpectation([\" \", \"\\t\"], false, false),\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parseTerm() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    s1 = peg$parseExponent();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 42) {\n        s4 = peg$c0;\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c1); }\n      }\n      if (s4 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 32) {\n          s4 = peg$c2;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c3); }\n        }\n        if (s4 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 8901) {\n            s4 = peg$c4;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c5); }\n          }\n          if (s4 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 47) {\n              s4 = peg$c6;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c7); }\n            }\n          }\n        }\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parsews();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parseExponent();\n          if (s6 !== peg$FAILED) {\n            s4 = [s4, s5, s6];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 42) {\n          s4 = peg$c0;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c1); }\n        }\n        if (s4 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 32) {\n            s4 = peg$c2;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c3); }\n          }\n          if (s4 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 8901) {\n              s4 = peg$c4;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c5); }\n            }\n            if (s4 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 47) {\n                s4 = peg$c6;\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c7); }\n              }\n            }\n          }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsews();\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parseExponent();\n            if (s6 !== peg$FAILED) {\n              s4 = [s4, s5, s6];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c8(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExponent() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseFactor();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parsews();\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 94) {\n          s5 = peg$c9;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c10); }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsews();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseInteger();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parsews();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 94) {\n            s5 = peg$c9;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c10); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsews();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseInteger();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c11(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseFactor() {\n    var s0;\n\n    s0 = peg$parseGrouped();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseUnits();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseReciprocal();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseReciprocal() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c12) {\n      s1 = peg$c12;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c13); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseGrouped();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parseUnits();\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c14(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseGrouped() {\n    var s0, s1, s2, s3, s4, s5;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c16;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c17); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseTerm();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsews();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s5 = peg$c18;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c19); }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c20(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c15); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnits() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c22.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c23); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c22.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c23); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c24(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c21); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseInteger() {\n    var s0, s1, s2, s3, s4;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    if (s1 !== peg$FAILED) {\n      if (peg$c26.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c27); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (peg$c28.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c29); }\n        }\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            if (peg$c28.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c29); }\n            }\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c30();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c25); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsews() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    if (peg$c32.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c33); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c32.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c33); }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c31); }\n    }\n\n    return s0;\n  }\n\n\r\n    function log() {\r\n      // This is for development/testing.  For prod, comment this line out.\r\n      //console.log(...arguments);\r\n    }\r\n\r\n    function reduceUnits(unitsArray) {\r\n      // We accept an array with units and powers, like [{units: 'm', exponent: 2}, {units: 's', exponent: 1}, {units: 'm', exponent: 2}].\r\n      // We combine any redundant units, to return something like [{units: 'm', exponent: 4}, {units: 's', exponent: 1}].\r\n      log(\"In reduceUnits, unitsArray is \", unitsArray);\r\n      const combined = new Map();\r\n\r\n      // Find duplicate units, combine them\r\n      for (let i = 0; i < unitsArray.length; ++i) {\r\n        const unit = unitsArray[i];\r\n        log(\"In reduceUnits, unit is \", unit);\r\n        if (combined.has(unit.units)) {\r\n          combined.set(unit.units, combined.get(unit.units) + unit.exponent);\r\n        } else {\r\n          combined.set(unit.units, unit.exponent);\r\n        }\r\n      }\r\n      const res = Array.from(combined, function (item) {\r\n        const exponent = item[1];\r\n        if (exponent !== 0) {\r\n          return { units: item[0], exponent: exponent };\r\n        } else {\r\n          return null;\r\n        }\r\n      }).filter(Boolean);\r\n\r\n      res.sort(function(x, y) {\r\n        if (x.exponent !== y.exponent) {\r\n          return y.exponent - x.exponent;\r\n        }\r\n        return x.units.localeCompare(y.units)\r\n      });\r\n      log(\"In reduceUnits, returning \", res);\r\n\r\n      return res;\r\n    }\r\n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n","import React from 'react';\r\nimport './FormulaInput.css';\r\n\r\nclass FormulaInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      onChange: props.onChange\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <textarea\r\n          value={this.props.formula}\r\n          onChange={e => this.state.onChange(e.target.value)}\r\n          className=\"FormulaInput\"\r\n          placeholder=\"Enter formula here, e.g.&#10;mass = 3 kg&#10;velocity = 0.5 * c&#10;energy = 1/2 * mass * velocity^2\"\r\n          rows=\"10\"\r\n          data-testid=\"formula-text-area\">\r\n        </textarea>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormulaInput;","import React from 'react';\r\nimport './ResultsDisplay.css';\r\n\r\nclass ResultDisplay extends React.Component {\r\n  render() {\r\n    let resultValue = this.props.resultValue;\r\n    if (!isNaN(resultValue) && '' !== resultValue) {\r\n      resultValue = resultValue.toExponential();\r\n    }\r\n    return (\r\n        <p className=\"Result\" data-testid=\"result-display-area\">\r\n          {resultValue} {this.props.units}\r\n        </p>\r\n    );\r\n  }\r\n}\r\n\r\nclass ResultsDisplay extends React.Component {\r\n  render() {\r\n\r\n    const display = [];\r\n\r\n    const results = this.props.results;\r\n    for (let i = 0; i < results.length; i++) {\r\n      display.push(<ResultDisplay resultValue={results[i][0]} units={results[i][1]} key={i}/>);\r\n    }\r\n\r\n\r\n    return (\r\n      <div data-testid=\"results-display-area\">\r\n        Results:\r\n        {display}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResultsDisplay;","import React from 'react';\r\nimport './ConstantsDisplay.css';\r\n\r\nclass ConstantDisplay extends React.Component {\r\n  render() {\r\n    return (\r\n        <tr className=\"Constant\">\r\n          <td>{this.props.symbol}</td><td>=</td><td>{this.props.value}</td><td>{this.props.units}</td>\r\n        </tr>\r\n    );\r\n  }\r\n}\r\n\r\nclass ConstantsDisplay extends React.Component {\r\n  render() {\r\n    const constants = [];\r\n    const currentConstants = this.props.constants;\r\n    const currentConstantNames = [...currentConstants.keys()].sort();\r\n    for (let i = 0; i < currentConstantNames.length; i++) {\r\n      const constantKey = currentConstantNames[i];\r\n      const constantInfo = currentConstants.get(constantKey);\r\n      const constantValue = constantInfo[0];\r\n      const constantUnits = constantInfo[1];\r\n      constants.push(<ConstantDisplay symbol={constantKey} value={constantValue} units={constantUnits} key={i}/>);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        Constants:\r\n        <table data-testid=\"constants-display-area\">\r\n          <thead><tr>\r\n            <th colSpan=\"2\">Symbol</th><th>value</th><th>units</th>\r\n          </tr></thead>\r\n          <tbody>\r\n            {constants}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ConstantsDisplay;","import { parse as UnitsParse } from './UnitsGrammar'\r\n\r\nclass TypeSimplifier {\r\n  static simplify(text) {\r\n    const parsed = UnitsParse(text);\r\n    let numerator = [];\r\n    let denominator = [];\r\n    let inNumerator = true;\r\n    for (let i = 0; i < parsed.length; ++i) {\r\n      let parsedItem = parsed[i];\r\n\r\n      if (parsedItem.exponent < 0 && inNumerator && i === 0) {\r\n        numerator = ['1'];\r\n      }\r\n\r\n      if (parsedItem.exponent < 0 && inNumerator) {\r\n        inNumerator = false;\r\n      }\r\n\r\n      let destination = numerator;\r\n      if (!inNumerator) {\r\n        destination = denominator;\r\n      }\r\n\r\n      const absoluteExponent = Math.abs(parsedItem.exponent);\r\n      if (1 === absoluteExponent) {\r\n        destination.push(parsedItem.units);\r\n      } else {\r\n        destination.push(parsedItem.units + '^' + absoluteExponent);\r\n      }\r\n    }\r\n\r\n    let retval;\r\n    if (inNumerator) {\r\n      retval = numerator.join('⋅');\r\n    } else {\r\n      retval = numerator.join('⋅') + '/' + denominator.join('⋅');\r\n    }\r\n    \r\n    return retval;\r\n  }\r\n}\r\n\r\nexport default TypeSimplifier\r\n","import { parse as SciParse } from './SciGrammar'\r\nimport TypeSimplifier from './TypeSimplifier'\r\n\r\n// A global used in SciGrammar.pegjs.  We can't pass in\r\n// arguments, but we share a global environment.\r\n// We can also dynamically modify this map, e.g.\r\n// by adding new constants at runtime.\r\nconst SCIPARSER_CONSTANTS =  new Map([\r\n  [\"Pi\", [Math.PI, \"untyped\"], \"Pi\"],\r\n  [\"E\", [Math.E, \"untyped\"], \"Euler's Constant\"],\r\n  [\"c\", [2.99792e8, \"m/s\"], \"Speed of Light\"],\r\n  [\"e\", [1.60218e-19, \"C\"], \"Elementary Charge\"],\r\n  [\"Me\", [9.10938e-31, \"kg\"], \"Electron Mass\"],\r\n  [\"Mp\", [1.67262e-27, \"kg\"], \"Proton Mass\"],\r\n  [\"Mn\", [1.67493e-27, \"kg\"], \"Neutron Mass\"],\r\n  [\"h\", [6.62607e-34, \"J⋅s\"], \"Planck's Constant\"],\r\n  [\"Na\", [6.02214e23, \"1/mol\"], \"Avogadro's Number\"],\r\n  [\"R\", [8.31446, \"J/(K⋅mol)\"], \"Gas Constant\"],\r\n  [\"kB\", [1.38065e-23, \"J/K\"], \"Boltzmann's Constant\"],\r\n  [\"a0\", [5.29177e-11, \"m\"], \"Bohr Radius\"],\r\n  [\"e0\", [8.85419e-12, \"C^2/(J⋅m)\"], \"Vacuum Permittivity\"],\r\n  [\"Rh\", [13.6057, \"eV\"], \"Rydberg Constant\"],\r\n  [\"amu\", [1.66054e-27, \"kg/amu\"], \"Atomic Mass\"],\r\n  [\"eV\", [1.60218e-19, \"J/eV\"], \"Electron Volt\"],\r\n  [\"D\", [3.336e-30, \"C⋅m\"], \"Debye\"]\r\n]);\r\n\r\nconst SETTER_LINE_REGEXP = /([a-zA-Z][a-zA-Z0-9]*) *= *(.*)/;\r\n\r\nclass Calculator {\r\n  static calculate(text) {\r\n    // Copy the constant set of constants into a map that we\r\n    // may modify. We do NOT want to modify the original.\r\n    // We're setting it on \"window\" so that the parser\r\n    // code can read it.\r\n    window.SCIPARSER_CONSTANTS = new Map(SCIPARSER_CONSTANTS);\r\n    let result = [];\r\n    const lines = text.split('\\n');\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const line = lines[i].trim();\r\n      if (line === '' || line.startsWith('//')) {\r\n        result.push(['(blank)', '']);\r\n      } else {\r\n        try {\r\n          const setterMatch = SETTER_LINE_REGEXP.exec(line);\r\n          let parsedLine = [];\r\n          if (setterMatch) {\r\n            // We found a line that's a \"setter\"\r\n            parsedLine = SciParse(setterMatch[2]);\r\n            // Copy the value of the line to the global set of constants,\r\n            // overwriting any existing value\r\n            window.SCIPARSER_CONSTANTS.set(setterMatch[1], parsedLine);\r\n          } else {\r\n            parsedLine = SciParse(line);\r\n          }\r\n\r\n          parsedLine[1] = TypeSimplifier.simplify(parsedLine[1]);\r\n          result.push(parsedLine);\r\n        } catch (error) {\r\n          var errorMessage = error.message;\r\n          if (error.location && error.location.start && error.location.start.column) {\r\n            errorMessage = errorMessage + ' (column ' + error.location.start.column + ')';\r\n          }\r\n          result.push([errorMessage, '']);\r\n        }\r\n      }\r\n    }\r\n    return [result, window.SCIPARSER_CONSTANTS];\r\n  }\r\n}\r\n\r\nexport {SCIPARSER_CONSTANTS, Calculator}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport FormulaInput from './FormulaInput';\r\nimport ResultsDisplay from './ResultsDisplay';\r\nimport ConstantsDisplay from './ConstantsDisplay';\r\nimport {Calculator, SCIPARSER_CONSTANTS} from './Calculator';\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    // If there was a formula in the hash when we were instantiated, use it.\r\n    // This supports sharing of formula via sharing URL.\r\n    const formulaFromHash = decodeURIComponent((new URL(document.URL).hash).substring(1));\r\n    this.state = {\r\n      formula: formulaFromHash || ''\r\n    };\r\n\r\n    this.onHashChange = this.onHashChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('hashchange', this.onHashChange);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('hashchange', this.onHashChange, false);\r\n  }\r\n\r\n  onHashChange() {\r\n    const changedFormula = decodeURIComponent((new URL(document.URL).hash).substring(1));\r\n    this.setState({formula: changedFormula })\r\n  }\r\n\r\n  render() {\r\n    let results = [];\r\n    let constants = SCIPARSER_CONSTANTS;\r\n    if (this.state.formula !== '') {\r\n\r\n      // Store the formula into the URL hash, so that it can be shared, etc.\r\n      const url_ob = new URL(document.URL);\r\n      url_ob.hash = '#' + encodeURIComponent(this.state.formula);\r\n      document.location.href = url_ob.href;\r\n\r\n      const calculated = Calculator.calculate(this.state.formula);\r\n      results = calculated[0];\r\n      constants = calculated[1];\r\n    }\r\n    return (\r\n      <span>\r\n        <FormulaInput formula={this.state.formula} onChange={ changedFormula => { this.setState({formula: changedFormula }) } } />\r\n        <ResultsDisplay results={results} />\r\n        <ConstantsDisplay constants={constants} />\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\nroot.render(<App />);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}