{"version":3,"sources":["SciGrammar.js","UnitsGrammar.js","FormulaInput.js","ResultsDisplay.js","TypeSimplifier.js","Calculator.js","ConstantsDisplay.js","VariablesDisplay.js","Footer.js","App.js","reportWebVitals.js","index.js"],"names":["peg$SyntaxError","message","expected","found","location","this","name","Error","captureStackTrace","child","parent","ctor","constructor","prototype","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","class","i","escapedParts","parts","length","Array","classEscape","inverted","any","end","other","description","hex","ch","charCodeAt","toString","toUpperCase","s","replace","j","descriptions","type","sort","slice","join","describeExpected","describeFound","module","exports","SyntaxError","parse","input","options","peg$result","peg$FAILED","peg$startRuleFunctions","Expression","peg$parseExpression","peg$startRuleFunction","peg$c0","peg$c1","peg$literalExpectation","peg$c2","peg$c3","peg$c4","head","tail","reduce","result","element","numLeft","numRight","unitLeft","undefined","window","SCIPARSER_UNITS_SIMPLIFIER","unitsLeft","unitsRight","units","UNTYPED","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","unitRight","peg$c10","peg$c11","peg$c12","Math","pow","peg$c13","peg$otherExpectation","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","expr","peg$c19","peg$c20","peg$c21","peg$classExpectation","peg$c22","peg$c23","peg$c24","func","close","funcName","value","sin","cos","tan","abs","acos","acosh","asin","asinh","atan","atanh","cbrt","ceil","clz32","cosh","exp","expm1","floor","fround","log","log1p","log10","log2","round","sinh","sqrt","tanh","trunc","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","peg$c30","chars","SCIPARSER_SYMBOLS_MAP","symbolName","has","constValue","get","peg$c31","peg$c32","peg$c33","peg$c34","num","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$c50","unit","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","parseInt","peg$c58","peg$c59","peg$c60","peg$c61","parseFloat","peg$c62","peg$c63","peg$c64","peg$c65","m","exec","peg$c66","peg$c67","peg$c68","peg$currPos","peg$savedPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","substring","peg$computeLocation","peg$buildStructuredError","ignoreCase","peg$computePosDetails","pos","p","details","startPos","endPos","startPosDetails","endPosDetails","start","offset","peg$fail","push","s0","s1","s2","s3","s4","s5","s6","s7","peg$parseTerm","peg$parsews","peg$parseExponent","peg$parseFactor","peg$parseGrouped","peg$parseNumber","test","charAt","peg$parseUnits","peg$parseTypedNumber","s8","peg$parseUnaryFunc","peg$parseUntypedNumber","peg$parseSymbol","peg$parseUngroupedUnits","peg$parseGroupedUnits","peg$parseUnit","s9","s10","peg$parseSci","peg$parseFloat","peg$parseInteger","Term","operator","leftUnits","rightUnits","concatted","concat","retval","reduceUnits","rightUnit","exponent","concatenated","power","resultItem","groupedOrUnits","groupOrUnit","ret","substr","peg$parseReciprocal","unitsArray","combined","Map","newExponent","delete","set","res","from","item","filter","Boolean","x","y","localeCompare","FormulaInput","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","onChange","resultsRef","React","createRef","formulaRef","event","target","current","scrollTop","ResizeObserver","entries","style","height","contentRect","observe","_this2","results","countsText","react_default","a","createElement","className","data-testid","formula","e","onTextChange","onScroll","onScrollChange","placeholder","rows","nowrap","autoComplete","autoCorrect","autoCapitalize","spellCheck","wrap","ref","readOnly","Component","ResultsDisplay","valueClass","id","TypeSimplifier","parsed","UnitsParse","numerator","denominator","inNumerator","parsedItem","destination","absoluteExponent","numeratorStr","denominatorStr","SCIPARSER_CONSTANTS","PI","E","SETTER_LINE_REGEXP","Calculator","simplify","variables","lines","split","trim","startsWith","setterMatch","parsedLine","SciParse","variableName","variable","idx","findIndex","error","errorMessage","ConstantDisplay","symbol","ConstantsDisplay","constants","constantInfo","constantSymbol","constantValue","constantUnits","constantName","ConstantsDisplay_ConstantDisplay","key","VariableDisplay","VariablesDisplay","variableDisplays","variableKey","variableInfo","variableValue","variableUnits","VariablesDisplay_VariableDisplay","Footer","href","App","formulaFromHash","decodeURIComponent","URL","document","hash","onHashChange","bind","assertThisInitialized","addEventListener","removeEventListener","changedFormula","setState","url_ob","encodeURIComponent","calculated","calculate","src_FormulaInput_0","src_ResultsDisplay_0","src_VariablesDisplay_0","src_ConstantsDisplay_0","src_Footer_0","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","container","getElementById","createRoot","render","src_App_0"],"mappings":"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","file":"static/js/main.249884be.chunk.js","sourcesContent":["/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { Expression: peg$parseExpression },\n      peg$startRuleFunction  = peg$parseExpression,\n\n      peg$c0 = \"+\",\n      peg$c1 = peg$literalExpectation(\"+\", false),\n      peg$c2 = \"-\",\n      peg$c3 = peg$literalExpectation(\"-\", false),\n      peg$c4 = function(head, tail) {\r\n            log(\"In SciGrammar add/subtract processing, head is \", head, \", tail is \", tail);\r\n            return tail.reduce(function(result, element) {\r\n              log(\"In SciGrammar add/subtract reduction, result is \", result, \", element is \", element);\r\n              const numLeft = result[0];\r\n              const numRight = element[3][0];\r\n              const unitLeft = result[1];\r\n\r\n              // The logic is somewhat circuitous here.  We're generally just combining units\r\n              // syntactically in this file, e.g. \"3 m * 4 m/s\" becomes \"12 m*m/s\".  We're NOT\r\n              // simplifying to \"12 m^2/s\"- that's done later, outside this grammar.\r\n              //  However, for addition and subtraction, we want to check if units match.  To\r\n              // do so, we'll call an external helper that has to simplify anyway, and it returns\r\n              // the simplified units so that we can display a good error message.  We COULD use\r\n              // the simplified units instead of the more complex \"raw\" units.\r\n              if (window.SCIPARSER_UNITS_SIMPLIFIER !== undefined) {\r\n                const unitsLeft = window.SCIPARSER_UNITS_SIMPLIFIER(result[1]);\r\n                const unitsRight = window.SCIPARSER_UNITS_SIMPLIFIER(element[3][1]);\r\n                if (unitsLeft !== unitsRight) {\r\n                  expected(\"units '\" + unitsLeft + \"' to match units '\" + unitsRight + \"'\");\r\n                }\r\n              }\r\n              var units = unitLeft;\r\n              if (unitLeft == UNTYPED) {\r\n                units = element[3][1];\r\n              }\r\n              units = units.replace(/ /g, '⋅').replace(/\\*/g, '⋅');\r\n              if (element[1] === \"+\") {\r\n                return [numLeft + numRight, units];\r\n              }\r\n              if (element[1] === \"-\") {\r\n                return [numLeft - numRight, units];\r\n              }\r\n            }, head);\r\n          },\n      peg$c5 = \"*\",\n      peg$c6 = peg$literalExpectation(\"*\", false),\n      peg$c7 = \"/\",\n      peg$c8 = peg$literalExpectation(\"/\", false),\n      peg$c9 = function(head, tail) {\r\n            log(\"In SciGrammar multiply/divide processing, head is \", head, \", tail is \", tail);\r\n            return tail.reduce(function(result, element) {\r\n              log(\"In SciGrammar multiply/divide reduction, result is \", result, \", element is \", element);\r\n              const numLeft = result[0];\r\n              const numRight = element[3][0];\r\n              const unitLeft = result[1];\r\n              const unitRight = element[3][1];\r\n              if (element[1] === \"*\") {\r\n                var units;\r\n                if (unitLeft == UNTYPED) {\r\n                  units = unitRight;\r\n                } else if (unitRight == UNTYPED) {\r\n                  units = unitLeft;\r\n                } else {\r\n                  units = '(' + unitLeft + ')⋅(' + unitRight + ')';\r\n                }\r\n                units = units.replace(/ /g, '⋅').replace(/\\*/g, '⋅');\r\n                return [numLeft * numRight, units];\r\n              }\r\n              if (element[1] === \"/\") {\r\n                var units;\r\n                if (unitRight == UNTYPED) {\r\n                  units = unitLeft;\r\n                } else if (unitLeft == UNTYPED) {\r\n                  units = '(' + unitRight + ')^-1';\r\n                } else {\r\n                  units = '(' + unitLeft + ')/(' + unitRight + ')';\r\n                }\r\n                units = units.replace(/ /g, '⋅').replace(/\\*/g, '⋅');\r\n                return [numLeft / numRight, units];\r\n              }\r\n            }, head);\r\n          },\n      peg$c10 = \"^\",\n      peg$c11 = peg$literalExpectation(\"^\", false),\n      peg$c12 = function(head, tail) {\r\n            log(\"In SciGrammar exponent processing, head is \", head, \", tail is \", tail);\r\n            return tail.reduce(function(result, element) {\r\n              log(\"In SciGrammar exponent reduction, result is \", result, \", element is \", element);\r\n              const numLeft = result[0];\r\n              const numRight = element[3][0];\r\n              const unitLeft = result[1];\r\n              var units = UNTYPED;\r\n              if (unitLeft !== UNTYPED) {\r\n                units = '(' + unitLeft + ')^' + numRight\r\n              }\r\n              return [Math.pow(numLeft, numRight), units];\r\n            }, head);\r\n          },\n      peg$c13 = peg$otherExpectation(\"grouped\"),\n      peg$c14 = \"(\",\n      peg$c15 = peg$literalExpectation(\"(\", false),\n      peg$c16 = \")\",\n      peg$c17 = peg$literalExpectation(\")\", false),\n      peg$c18 = function(expr) {\r\n          log(\"In SciGrammar group processing, expr is \", expr);\r\n          return expr;\r\n        },\n      peg$c19 = peg$otherExpectation(\"unary function\"),\n      peg$c20 = /^[a-z]/,\n      peg$c21 = peg$classExpectation([[\"a\", \"z\"]], false, false),\n      peg$c22 = /^[a-z0-9]/,\n      peg$c23 = peg$classExpectation([[\"a\", \"z\"], [\"0\", \"9\"]], false, false),\n      peg$c24 = function(func, expr, close) {\r\n          log(\"In SciGrammar unary function processing, func is \", func, \", expr is \", expr);\r\n          const funcName = func[0] + func[1].join('');\r\n          const value = expr[0];\r\n          const units = expr[1];\r\n\r\n          // TODO: Should we verify that value is unitless for most of these cases?\r\n          switch (funcName) {\r\n            case \"sin\":\r\n              return [Math.sin(value), UNTYPED];\r\n            case \"cos\":\r\n              return [Math.cos(value), UNTYPED];\r\n            case \"tan\":\r\n              return [Math.tan(value), UNTYPED];\r\n            case \"abs\":\r\n              return [Math.abs(value), units];\r\n            case \"acos\":\r\n              return [Math.acos(value), UNTYPED];\r\n            case \"acosh\":\r\n              return [Math.acosh(value), UNTYPED];\r\n            case \"asin\":\r\n              return [Math.asin(value), UNTYPED];\r\n            case \"asinh\":\r\n              return [Math.asinh(value), UNTYPED];\r\n            case \"atan\":\r\n              return [Math.atan(value), UNTYPED];\r\n            case \"atanh\":\r\n              return [Math.atanh(value), UNTYPED];\r\n            case \"cbrt\":\r\n              return [Math.cbrt(value), '(' + units + ')^' + (1/3)];\r\n            case \"ceil\":\r\n              return [Math.ceil(value), units];\r\n            case \"clz32\":\r\n              return [Math.clz32(value), UNTYPED];\r\n            case \"cos\":\r\n              return [Math.cos(value), UNTYPED];\r\n            case \"cosh\":\r\n              return [Math.cosh(value), UNTYPED];\r\n            case \"exp\":\r\n              return [Math.exp(value), UNTYPED];\r\n            case \"expm1\":\r\n              return [Math.expm1(value), UNTYPED];\r\n            case \"floor\":\r\n              return [Math.floor(value), units];\r\n            case \"fround\":\r\n              return [Math.fround(value), units];\r\n            case \"log\":\r\n              return [Math.log(value), UNTYPED];\r\n            case \"log1p\":\r\n              return [Math.log1p(value), UNTYPED];\r\n            case \"log10\":\r\n              return [Math.log10(value), UNTYPED];\r\n            case \"log2\":\r\n              return [Math.log2(value), UNTYPED];\r\n            case \"round\":\r\n              return [Math.round(value), units];\r\n            case \"sin\":\r\n              return [Math.sin(value), UNTYPED];\r\n            case \"sinh\":\r\n              return [Math.sinh(value), UNTYPED];\r\n            case \"sqrt\":\r\n              return [Math.sqrt(value), '(' + units + ')^0.5'];\r\n            case \"tan\":\r\n              return [Math.tan(value), UNTYPED];\r\n            case \"tanh\":\r\n              return [Math.tanh(value), UNTYPED];\r\n            case \"trunc\":\r\n              return [Math.trunc(value), units];\r\n            default:\r\n              expected(\"unrecognized unary function '\" + funcName + \"'\");\r\n          }\r\n        },\n      peg$c25 = peg$otherExpectation(\"symbol\"),\n      peg$c26 = /^[a-zA-Z]/,\n      peg$c27 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"]], false, false),\n      peg$c28 = /^[a-zA-Z0-9]/,\n      peg$c29 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"]], false, false),\n      peg$c30 = function(chars) {\r\n          log(\"In SciGrammar symbol processing, chars is \", chars);\r\n          if (window.SCIPARSER_SYMBOLS_MAP == undefined) {\r\n            expected(\"predefined symbol\");\r\n          } else {\r\n            const symbolName = chars[0] + chars[1].join('');\r\n\r\n            if (window.SCIPARSER_SYMBOLS_MAP.has(symbolName)) {\r\n              const constValue = window.SCIPARSER_SYMBOLS_MAP.get(symbolName)\r\n              log(\"Found symbol \" + symbolName + \" with value \", constValue);\r\n              return constValue;\r\n            }\r\n            log(\"In SciGrammar symbol processing, failed to find symbol \" + symbolName);\r\n            expected(\"predefined symbol\");\r\n          }\r\n        },\n      peg$c31 = peg$otherExpectation(\"typed number\"),\n      peg$c32 = /^[ \\t\\n\\r]/,\n      peg$c33 = peg$classExpectation([\" \", \"\\t\", \"\\n\", \"\\r\"], false, false),\n      peg$c34 = function(num, units) {\r\n          log(\"In SciGrammar TypedNumber, \", text());\r\n          return [num, units];\r\n        },\n      peg$c35 = peg$otherExpectation(\"units\"),\n      peg$c36 = /^[*\\u22C5\\/]/,\n      peg$c37 = peg$classExpectation([\"*\", \"\\u22C5\", \"/\"], false, false),\n      peg$c38 = function(head, tail) {\r\n          log(\"In SciGrammar Units, \", text());\r\n          return text();\r\n        },\n      peg$c39 = peg$otherExpectation(\"ungrouped units\"),\n      peg$c40 = function(head, tail) {\r\n          log(\"In SciGrammar UngroupedUnits, \", text());\r\n          return text();\r\n        },\n      peg$c41 = peg$otherExpectation(\"grouped units\"),\n      peg$c42 = /^[\\S\\s]/,\n      peg$c43 = peg$classExpectation([], true, false),\n      peg$c44 = /^[+\\-]/,\n      peg$c45 = peg$classExpectation([\"+\", \"-\"], false, false),\n      peg$c46 = /^[0-9]/,\n      peg$c47 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c48 = function() {\r\n          log(\"In SciGrammar GroupedUnits, \", text());\r\n          return text();\r\n        },\n      peg$c49 = peg$otherExpectation(\"unit\"),\n      peg$c50 = function(unit) {\r\n          log(\"In SciGrammar Unit, \", text());\r\n          return text();\r\n        },\n      peg$c51 = peg$otherExpectation(\"untyped number\"),\n      peg$c52 = function(num) {\r\n          log(\"In SciGrammar UntypedNumber processing, num is \", num);\r\n          return [num, UNTYPED];\r\n        },\n      peg$c53 = peg$otherExpectation(\"number\"),\n      peg$c54 = peg$otherExpectation(\"integer\"),\n      peg$c55 = /^[\\-+]/,\n      peg$c56 = peg$classExpectation([\"-\", \"+\"], false, false),\n      peg$c57 = function() {\r\n          log(\"In SciGrammar Integer processing, text is \", text());\r\n          return parseInt(text(), 10);\r\n        },\n      peg$c58 = peg$otherExpectation(\"float\"),\n      peg$c59 = \".\",\n      peg$c60 = peg$literalExpectation(\".\", false),\n      peg$c61 = function() {\r\n          log(\"In SciGrammar Float processing, text is \", text());\r\n          return parseFloat(text(), 10);\r\n        },\n      peg$c62 = peg$otherExpectation(\"scientific notation\"),\n      peg$c63 = \"e\",\n      peg$c64 = peg$literalExpectation(\"e\", false),\n      peg$c65 = function() {\r\n          log(\"In SciGrammar Sci processing, text is \", text());\r\n          const m = /([-+]?[0-9]+(.[0-9]+)?)[eE]([-+]?[0-9]+)/.exec(text());\r\n          return parseFloat(m[1], 10) * Math.pow(10, parseInt(m[3]));\r\n         },\n      peg$c66 = peg$otherExpectation(\"whitespace\"),\n      peg$c67 = /^[ \\t]/,\n      peg$c68 = peg$classExpectation([\" \", \"\\t\"], false, false),\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parseExpression() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseTerm();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parsews();\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 43) {\n          s5 = peg$c0;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c1); }\n        }\n        if (s5 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 45) {\n            s5 = peg$c2;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c3); }\n          }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsews();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseTerm();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parsews();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 43) {\n            s5 = peg$c0;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c1); }\n          }\n          if (s5 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 45) {\n              s5 = peg$c2;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c3); }\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsews();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseTerm();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c4(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTerm() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseExponent();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parsews();\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 42) {\n          s5 = peg$c5;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c6); }\n        }\n        if (s5 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 47) {\n            s5 = peg$c7;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c8); }\n          }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsews();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseExponent();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parsews();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 42) {\n            s5 = peg$c5;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c6); }\n          }\n          if (s5 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 47) {\n              s5 = peg$c7;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c8); }\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsews();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseExponent();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c9(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExponent() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseFactor();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parsews();\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 94) {\n          s5 = peg$c10;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c11); }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsews();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseFactor();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parsews();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 94) {\n            s5 = peg$c10;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c11); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsews();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseFactor();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c12(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseFactor() {\n    var s0;\n\n    s0 = peg$parseGrouped();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseTypedNumber();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseUnaryFunc();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseUntypedNumber();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseSymbol();\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseGrouped() {\n    var s0, s1, s2, s3, s4, s5;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c14;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c15); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseExpression();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsews();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s5 = peg$c16;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c17); }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c18(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c13); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnaryFunc() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (peg$c20.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c21); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = [];\n      if (peg$c22.test(input.charAt(peg$currPos))) {\n        s4 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c23); }\n      }\n      if (s4 !== peg$FAILED) {\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          if (peg$c22.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c23); }\n          }\n        }\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s3 = peg$c14;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c15); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsews();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseExpression();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$currPos;\n              s7 = peg$parsews();\n              if (s7 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s8 = peg$c16;\n                  peg$currPos++;\n                } else {\n                  s8 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c17); }\n                }\n                if (s8 !== peg$FAILED) {\n                  s7 = [s7, s8];\n                  s6 = s7;\n                } else {\n                  peg$currPos = s6;\n                  s6 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s6;\n                s6 = peg$FAILED;\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c24(s1, s5, s6);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c19); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseSymbol() {\n    var s0, s1, s2, s3, s4, s5;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      if (peg$c26.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c27); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        if (peg$c28.test(input.charAt(peg$currPos))) {\n          s5 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c29); }\n        }\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          if (peg$c28.test(input.charAt(peg$currPos))) {\n            s5 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c29); }\n          }\n        }\n        if (s4 !== peg$FAILED) {\n          s3 = [s3, s4];\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c30(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c25); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseTypedNumber() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseNumber();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c32.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c33); }\n      }\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c32.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c33); }\n          }\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseUnits();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c34(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c31); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnits() {\n    var s0, s1, s2, s3, s4, s5;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseUngroupedUnits();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseGroupedUnits();\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      if (peg$c36.test(input.charAt(peg$currPos))) {\n        s4 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c37); }\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseUngroupedUnits();\n        if (s5 === peg$FAILED) {\n          s5 = peg$parseGroupedUnits();\n        }\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        if (peg$c36.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c37); }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseUngroupedUnits();\n          if (s5 === peg$FAILED) {\n            s5 = peg$parseGroupedUnits();\n          }\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c38(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c35); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUngroupedUnits() {\n    var s0, s1, s2, s3, s4, s5;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseUnit();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      if (peg$c36.test(input.charAt(peg$currPos))) {\n        s4 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c37); }\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseUnit();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        if (peg$c36.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c37); }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseUnit();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c40(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c39); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseGroupedUnits() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c14;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c15); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseUnits();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsews();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s5 = peg$c16;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c17); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$currPos;\n              if (peg$c42.test(input.charAt(peg$currPos))) {\n                s7 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c43); }\n              }\n              if (s7 !== peg$FAILED) {\n                if (peg$c44.test(input.charAt(peg$currPos))) {\n                  s8 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s8 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c45); }\n                }\n                if (s8 === peg$FAILED) {\n                  s8 = null;\n                }\n                if (s8 !== peg$FAILED) {\n                  s9 = [];\n                  if (peg$c46.test(input.charAt(peg$currPos))) {\n                    s10 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s10 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c47); }\n                  }\n                  if (s10 !== peg$FAILED) {\n                    while (s10 !== peg$FAILED) {\n                      s9.push(s10);\n                      if (peg$c46.test(input.charAt(peg$currPos))) {\n                        s10 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                      } else {\n                        s10 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c47); }\n                      }\n                    }\n                  } else {\n                    s9 = peg$FAILED;\n                  }\n                  if (s9 !== peg$FAILED) {\n                    s7 = [s7, s8, s9];\n                    s6 = s7;\n                  } else {\n                    peg$currPos = s6;\n                    s6 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s6;\n                  s6 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s6;\n                s6 = peg$FAILED;\n              }\n              if (s6 === peg$FAILED) {\n                s6 = null;\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c48();\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c41); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnit() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = [];\n    if (peg$c26.test(input.charAt(peg$currPos))) {\n      s3 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s3 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c27); }\n    }\n    if (s3 !== peg$FAILED) {\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$c26.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c27); }\n        }\n      }\n    } else {\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$currPos;\n      if (peg$c42.test(input.charAt(peg$currPos))) {\n        s4 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c43); }\n      }\n      if (s4 !== peg$FAILED) {\n        if (peg$c44.test(input.charAt(peg$currPos))) {\n          s5 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c45); }\n        }\n        if (s5 === peg$FAILED) {\n          s5 = null;\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = [];\n          if (peg$c46.test(input.charAt(peg$currPos))) {\n            s7 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c47); }\n          }\n          if (s7 !== peg$FAILED) {\n            while (s7 !== peg$FAILED) {\n              s6.push(s7);\n              if (peg$c46.test(input.charAt(peg$currPos))) {\n                s7 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c47); }\n              }\n            }\n          } else {\n            s6 = peg$FAILED;\n          }\n          if (s6 !== peg$FAILED) {\n            s4 = [s4, s5, s6];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c50(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c49); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUntypedNumber() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseNumber();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c52(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c51); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseNumber() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = peg$parseSci();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseFloat();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseInteger();\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c53); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseInteger() {\n    var s0, s1, s2, s3, s4;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    if (s1 !== peg$FAILED) {\n      if (peg$c55.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c56); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (peg$c46.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c47); }\n        }\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            if (peg$c46.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c47); }\n            }\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c57();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c54); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseFloat() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    if (s1 !== peg$FAILED) {\n      if (peg$c55.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c56); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (peg$c46.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c47); }\n        }\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            if (peg$c46.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c47); }\n            }\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s4 = peg$c59;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c60); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            if (peg$c46.test(input.charAt(peg$currPos))) {\n              s6 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c47); }\n            }\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              if (peg$c46.test(input.charAt(peg$currPos))) {\n                s6 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c47); }\n              }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c61();\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c58); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseSci() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    if (s1 !== peg$FAILED) {\n      if (peg$c55.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c56); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (peg$c46.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c47); }\n        }\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            if (peg$c46.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c47); }\n            }\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s5 = peg$c59;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c60); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = [];\n            if (peg$c46.test(input.charAt(peg$currPos))) {\n              s7 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c47); }\n            }\n            while (s7 !== peg$FAILED) {\n              s6.push(s7);\n              if (peg$c46.test(input.charAt(peg$currPos))) {\n                s7 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c47); }\n              }\n            }\n            if (s6 !== peg$FAILED) {\n              s5 = [s5, s6];\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 101) {\n              s5 = peg$c63;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c64); }\n            }\n            if (s5 !== peg$FAILED) {\n              if (peg$c55.test(input.charAt(peg$currPos))) {\n                s6 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c56); }\n              }\n              if (s6 === peg$FAILED) {\n                s6 = null;\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = [];\n                if (peg$c46.test(input.charAt(peg$currPos))) {\n                  s8 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s8 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c47); }\n                }\n                if (s8 !== peg$FAILED) {\n                  while (s8 !== peg$FAILED) {\n                    s7.push(s8);\n                    if (peg$c46.test(input.charAt(peg$currPos))) {\n                      s8 = input.charAt(peg$currPos);\n                      peg$currPos++;\n                    } else {\n                      s8 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c47); }\n                    }\n                  }\n                } else {\n                  s7 = peg$FAILED;\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c65();\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c62); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsews() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    if (peg$c67.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c68); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c67.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c68); }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c66); }\n    }\n\n    return s0;\n  }\n\n\r\n    const UNTYPED = \"untyped\";\r\n\r\n    function log() {\r\n      //console.log(...arguments);\r\n    }\r\n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n","/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { Term: peg$parseTerm },\n      peg$startRuleFunction  = peg$parseTerm,\n\n      peg$c0 = \"*\",\n      peg$c1 = peg$literalExpectation(\"*\", false),\n      peg$c2 = \" \",\n      peg$c3 = peg$literalExpectation(\" \", false),\n      peg$c4 = \"\\u22C5\",\n      peg$c5 = peg$literalExpectation(\"\\u22C5\", false),\n      peg$c6 = \"/\",\n      peg$c7 = peg$literalExpectation(\"/\", false),\n      peg$c8 = function(head, tail) {\r\n            log(\"In UnitsGrammar multiply/divide processing, head is \", head, \", tail is \", tail);\r\n            return tail.reduce(function(result, element) {\r\n              log(\"In UnitsGrammar multiply/divide processing, result is \", result, \", element is \", element);\r\n              const operator = element[0];\r\n              const leftUnits = result;\r\n              const rightUnits = element[2];\r\n              log(\"In UnitsGrammar multiply/divide processing, operator is \", operator, \", leftUnits is \", leftUnits, \", rightUnits is \", rightUnits);\r\n              if (operator === \"*\" || operator === \" \" || operator === \"⋅\") {\r\n                log(\"In UnitsGrammar multiply/divide, multiplying\");\r\n                const concatted = leftUnits.concat(rightUnits);\r\n                log(\"In UnitsGrammar multiply/divide, returning reduction of \", concatted);\r\n                const retval = reduceUnits(concatted);\r\n                log(\"In UnitsGrammar multiply/divide processing, returning \", retval);\r\n                return retval;\r\n              } else {\r\n                // division\r\n                for (let i = 0; i < rightUnits.length; i++) {\r\n                  const rightUnit = rightUnits[i];\r\n                  rightUnit.exponent = -1 * rightUnit.exponent;\r\n                }\r\n                log(\"In UnitsGrammar multiply/divide processing, concatenating \", leftUnits, \" with \", rightUnits);\r\n                const concatenated = leftUnits.concat(rightUnits);\r\n                log(\"In UnitsGrammar multiply/divide processing, concatenated is \", concatenated);\r\n                const retval = reduceUnits(concatenated);\r\n                log(\"In UnitsGrammar multiply/divide processing, returning \", retval);\r\n                return reduceUnits(retval);\r\n              }\r\n            }, head);\r\n          },\n      peg$c9 = \"^\",\n      peg$c10 = peg$literalExpectation(\"^\", false),\n      peg$c11 = function(head, tail) {\r\n            log(\"In UnitsGrammar exponent processing, head is \", head, \", tail is \", tail);\r\n            return tail.reduce(function(result, element) {\r\n              log(\"In UnitsGrammar exponent processing, result is \", result, \", element is \", element, \", type: \", typeof(element[3]));\r\n              const power = element[3];\r\n              for (let i = 0; i < result.length; i++) {\r\n                const resultItem = result[i];\r\n                resultItem.exponent = resultItem.exponent * power;\r\n              }\r\n              log(\"In UnitsGrammar exponent processing, returning \", result);\r\n              return result;\r\n            }, head);\r\n          },\n      peg$c12 = \"1/\",\n      peg$c13 = peg$literalExpectation(\"1/\", false),\n      peg$c14 = function(groupedOrUnits) {\r\n          for (var i = 0; i < groupedOrUnits.length; i++) {\r\n            const groupOrUnit = groupedOrUnits[i];\r\n            groupOrUnit.exponent = -1 * groupOrUnit.exponent;\r\n          }\r\n          return groupedOrUnits;\r\n        },\n      peg$c15 = peg$otherExpectation(\"grouped\"),\n      peg$c16 = \"(\",\n      peg$c17 = peg$literalExpectation(\"(\", false),\n      peg$c18 = \")\",\n      peg$c19 = peg$literalExpectation(\")\", false),\n      peg$c20 = function(expr) {\r\n          log(\"In UnitsGrammar group processing, expr is \", expr);\r\n          return expr;\r\n        },\n      peg$c21 = peg$otherExpectation(\"units\"),\n      peg$c22 = /^[a-zA-Z]/,\n      peg$c23 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"]], false, false),\n      peg$c24 = function(units) {\r\n          log(\"In UnitsGrammar Units processing, text: \", text());\r\n          //const joinedUnits = units[0] + units[1].join('');\r\n          //log(\"In UnitsGrammar Units, joinedUnits: \", joinedUnits);\r\n          const ret = [{units: text(), exponent: 1}];\r\n          log(\"In UnitsGrammar Units processing, returning: \", ret);\r\n          return ret;\r\n        },\n      peg$c25 = peg$otherExpectation(\"number\"),\n      peg$c26 = peg$otherExpectation(\"integer\"),\n      peg$c27 = /^[\\-+]/,\n      peg$c28 = peg$classExpectation([\"-\", \"+\"], false, false),\n      peg$c29 = /^[0-9]/,\n      peg$c30 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c31 = function() {\r\n          log(\"In UnitsGrammar Integer processing, text is \", text());\r\n          return parseInt(text(), 10);\r\n        },\n      peg$c32 = peg$otherExpectation(\"float\"),\n      peg$c33 = \".\",\n      peg$c34 = peg$literalExpectation(\".\", false),\n      peg$c35 = function() {\r\n          log(\"In UnitsGrammar Float processing, text is \", text());\r\n          return parseFloat(text(), 10);\r\n        },\n      peg$c36 = peg$otherExpectation(\"whitespace\"),\n      peg$c37 = /^[ \\t]/,\n      peg$c38 = peg$classExpectation([\" \", \"\\t\"], false, false),\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parseTerm() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    s1 = peg$parseExponent();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 42) {\n        s4 = peg$c0;\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c1); }\n      }\n      if (s4 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 32) {\n          s4 = peg$c2;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c3); }\n        }\n        if (s4 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 8901) {\n            s4 = peg$c4;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c5); }\n          }\n          if (s4 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 47) {\n              s4 = peg$c6;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c7); }\n            }\n          }\n        }\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parsews();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parseExponent();\n          if (s6 !== peg$FAILED) {\n            s4 = [s4, s5, s6];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 42) {\n          s4 = peg$c0;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c1); }\n        }\n        if (s4 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 32) {\n            s4 = peg$c2;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c3); }\n          }\n          if (s4 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 8901) {\n              s4 = peg$c4;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c5); }\n            }\n            if (s4 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 47) {\n                s4 = peg$c6;\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c7); }\n              }\n            }\n          }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsews();\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parseExponent();\n            if (s6 !== peg$FAILED) {\n              s4 = [s4, s5, s6];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c8(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExponent() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseFactor();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parsews();\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 94) {\n          s5 = peg$c9;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c10); }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsews();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseNumber();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parsews();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 94) {\n            s5 = peg$c9;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c10); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsews();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseNumber();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c11(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseFactor() {\n    var s0;\n\n    s0 = peg$parseGrouped();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseUnits();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseReciprocal();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseReciprocal() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c12) {\n      s1 = peg$c12;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c13); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseGrouped();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parseUnits();\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c14(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseGrouped() {\n    var s0, s1, s2, s3, s4, s5;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c16;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c17); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseTerm();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsews();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s5 = peg$c18;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c19); }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c20(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c15); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnits() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c22.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c23); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c22.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c23); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c24(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c21); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseNumber() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = peg$parseFloat();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseInteger();\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c25); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseInteger() {\n    var s0, s1, s2, s3, s4;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    if (s1 !== peg$FAILED) {\n      if (peg$c27.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c28); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (peg$c29.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c30); }\n        }\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            if (peg$c29.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c30); }\n            }\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c31();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c26); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseFloat() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    if (s1 !== peg$FAILED) {\n      if (peg$c27.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c28); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (peg$c29.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c30); }\n        }\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            if (peg$c29.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c30); }\n            }\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s4 = peg$c33;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c34); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            if (peg$c29.test(input.charAt(peg$currPos))) {\n              s6 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c30); }\n            }\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              if (peg$c29.test(input.charAt(peg$currPos))) {\n                s6 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c30); }\n              }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c35();\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c32); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsews() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    if (peg$c37.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c38); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c37.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c38); }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c36); }\n    }\n\n    return s0;\n  }\n\n\r\n    function log() {\r\n      // This is for development/testing.  For prod, comment this line out.\r\n      //console.log(...arguments);\r\n    }\r\n\r\n    function reduceUnits(unitsArray) {\r\n      // We accept an array with units and powers, like [{units: 'm', exponent: 2}, {units: 's', exponent: 1}, {units: 'm', exponent: 2}].\r\n      // We combine any redundant units, to return something like [{units: 'm', exponent: 4}, {units: 's', exponent: 1}].\r\n      log(\"In reduceUnits, unitsArray is \", unitsArray);\r\n      const combined = new Map();\r\n\r\n      // Find duplicate units, combine them\r\n      for (let i = 0; i < unitsArray.length; ++i) {\r\n        const unit = unitsArray[i];\r\n        log(\"In reduceUnits, unit is \", unit);\r\n        if (combined.has(unit.units)) {\r\n          const newExponent = combined.get(unit.units) + unit.exponent;\r\n          if (0 === newExponent) {\r\n            combined.delete(unit.units);\r\n          } else {\r\n            combined.set(unit.units, newExponent);\r\n          }\r\n        } else {\r\n          combined.set(unit.units, unit.exponent);\r\n        }\r\n      }\r\n      const res = Array.from(combined, function (item) {\r\n        const exponent = item[1];\r\n        if (exponent !== 0) {\r\n          return { units: item[0], exponent: exponent };\r\n        } else {\r\n          return null;\r\n        }\r\n      }).filter(Boolean);\r\n\r\n      res.sort(function(x, y) {\r\n        if (x.exponent !== y.exponent) {\r\n          return y.exponent - x.exponent;\r\n        }\r\n        return x.units.localeCompare(y.units)\r\n      });\r\n      log(\"In reduceUnits, returning \", res);\r\n\r\n      return res;\r\n    }\r\n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n","import React from 'react';\r\nimport './FormulaInput.css';\r\n\r\nclass FormulaInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      onChange: props.onChange\r\n    };\r\n\r\n    this.resultsRef= React.createRef();\r\n    this.formulaRef= React.createRef();\r\n  }\r\n\r\n  onTextChange(event) {\r\n    this.state.onChange(event.target.value);\r\n  }\r\n\r\n  onScrollChange() {\r\n    this.resultsRef.current.scrollTop = this.formulaRef.current.scrollTop;\r\n  }\r\n\r\n  componentDidMount() {\r\n    // const formulaInput = this;\r\n    const resultsRef = this.resultsRef;\r\n    // Observe resize events on the input textarea, and resize the output\r\n    // textarea to match.\r\n    // Test env doesn't have a ResizeObserver :(\r\n    if (typeof(ResizeObserver) !== 'undefined') {\r\n      const resizeOb = new ResizeObserver(function(entries) {\r\n        // We're observing one element, but entries is an array- grab the first\r\n        // item\r\n        resultsRef.current.style.height = entries[0].contentRect.height + 'px';\r\n      });\r\n\r\n      // start observing for resize of the formula input\r\n      resizeOb.observe(this.formulaRef.current);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let results = [];\r\n    for (let i = 0; i < this.props.results.length; i++) {\r\n      results.push(this.props.results[i][0] + ' ' + this.props.results[i][1]);\r\n    }\r\n    let countsText = results.join('\\n');\r\n\r\n    return (\r\n        <div className=\"InputAndResults\" data-testid=\"formula-input\">\r\n          <textarea\r\n            value={this.props.formula}\r\n            onChange={e => this.onTextChange(e)}\r\n            onScroll={e => this.onScrollChange(e)}\r\n            className=\"FormulaInput\"\r\n            placeholder=\"Enter formula here, e.g.&#10;mass = 3 kg&#10;velocity = 4 m/s&#10;jouleConv = 1 (kg*(m/s)^2)/joule&#10;energy = 1/2 * mass * velocity^2 / jouleConv\"\r\n            rows=\"10\"\r\n            nowrap=\"nowrap\"\r\n            autoComplete=\"off\"\r\n            autoCorrect=\"off\"\r\n            autoCapitalize=\"off\"\r\n            spellCheck=\"false\"\r\n            wrap=\"off\"\r\n            data-testid=\"formula-text-area\"\r\n            ref={this.formulaRef} />\r\n          <textarea\r\n            value={countsText}\r\n            className=\"Results\"\r\n            rows=\"10\"\r\n            wrap=\"off\"\r\n            readOnly\r\n            ref={this.resultsRef} />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormulaInput;","import React from 'react';\r\nimport './ResultsDisplay.css';\r\n\r\nclass ResultsDisplay extends React.Component {\r\n  render() {\r\n    const results = this.props.results;\r\n\r\n    let result = null;\r\n    // Display the last result- either a calculated value or\r\n    // an error.  Do not display blank lines, comments, etc.\r\n    for (let i = results.length - 1; i >= 0; i--) {\r\n      if (typeof(results[i][0]) =='number' || results[i][2] !== null) {\r\n        result = results[i];\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (result === null) {\r\n      return (<span />);\r\n    }\r\n\r\n    let valueClass = 'value';\r\n    if (result[2] !== null) {\r\n      // There is an error\r\n      valueClass = 'error';\r\n    }\r\n    return (\r\n      <div id='results' data-testid='results-display-area'>\r\n        <span className={valueClass}>{result[0]} {result[1]}</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResultsDisplay;","import { parse as UnitsParse } from './UnitsGrammar'\r\nimport { UNTYPED } from './Calculator'\r\n\r\nclass TypeSimplifier {\r\n  static simplify(text) {\r\n    const parsed = UnitsParse(text);\r\n    let numerator = [];\r\n    let denominator = [];\r\n    let inNumerator = true;\r\n    for (let i = 0; i < parsed.length; ++i) {\r\n      let parsedItem = parsed[i];\r\n\r\n      if (parsedItem.exponent < 0 && inNumerator && i === 0) {\r\n        numerator = ['1'];\r\n      }\r\n\r\n      if (parsedItem.exponent < 0 && inNumerator) {\r\n        inNumerator = false;\r\n      }\r\n\r\n      let destination = numerator;\r\n      if (!inNumerator) {\r\n        destination = denominator;\r\n      }\r\n\r\n      const absoluteExponent = Math.abs(parsedItem.exponent);\r\n      if (UNTYPED === parsedItem.units) {\r\n        // Don't include untyped items, e.g. \"untyped^0.5\"\r\n      } else if (1 === absoluteExponent) {\r\n        destination.push(parsedItem.units);\r\n      } else {\r\n        destination.push(parsedItem.units + '^' + absoluteExponent);\r\n      }\r\n    }\r\n\r\n    if (0 === numerator.length && 0 === denominator.length) {\r\n      return UNTYPED;\r\n    }\r\n\r\n    let retval;\r\n    if (inNumerator) {\r\n      retval = numerator.join('⋅');\r\n    } else {\r\n      let numeratorStr = numerator.join('⋅');\r\n      if (1 < numerator.length) {\r\n        numeratorStr = '(' + numeratorStr + ')';\r\n      }\r\n      let denominatorStr = denominator.join('⋅');\r\n      if (1 < denominator.length) {\r\n        denominatorStr = '(' + denominatorStr + ')';\r\n      }\r\n      retval = numeratorStr + '/' + denominatorStr;\r\n    }\r\n    \r\n    return retval;\r\n  }\r\n}\r\n\r\nexport default TypeSimplifier\r\n","import { parse as SciParse } from './SciGrammar'\r\nimport TypeSimplifier from './TypeSimplifier'\r\n\r\nconst UNTYPED = \"untyped\";\r\n\r\n// A global used in SciGrammar.pegjs.  We can't pass in\r\n// arguments, but we share a global environment.\r\n// We can also dynamically modify this map, e.g.\r\n// by adding new constants at runtime.\r\nconst SCIPARSER_CONSTANTS = [\r\n  [\"Pi\", [Math.PI, UNTYPED], \"Pi\"],\r\n  [\"E\", [Math.E, UNTYPED], \"Euler's Constant\"],\r\n  [\"c\", [2.99792e8, \"m/s\"], \"Speed of Light\"],\r\n  [\"e\", [1.60218e-19, \"C\"], \"Elementary Charge\"],\r\n  [\"Me\", [9.10938e-31, \"kg\"], \"Electron Mass\"],\r\n  [\"Mp\", [1.67262e-27, \"kg\"], \"Proton Mass\"],\r\n  [\"Mn\", [1.67493e-27, \"kg\"], \"Neutron Mass\"],\r\n  [\"h\", [6.62607e-34, \"J⋅s\"], \"Planck's Constant\"],\r\n  [\"Na\", [6.02214e23, \"1/mol\"], \"Avogadro's Number\"],\r\n  [\"R\", [8.31446, \"J/(K⋅mol)\"], \"Gas Constant\"],\r\n  [\"kB\", [1.38065e-23, \"J/K\"], \"Boltzmann's Constant\"],\r\n  [\"a0\", [5.29177e-11, \"m\"], \"Bohr Radius\"],\r\n  [\"e0\", [8.85419e-12, \"C^2/(J⋅m)\"], \"Vacuum Permittivity\"],\r\n  [\"Rh\", [13.6057, \"eV\"], \"Rydberg Constant\"],\r\n  [\"amu\", [1.66054e-27, \"kg/amu\"], \"Atomic Mass\"],\r\n  [\"eV\", [1.60218e-19, \"J/eV\"], \"Electron Volt\"],\r\n  [\"D\", [3.336e-30, \"C⋅m/D\"], \"Debye\"]\r\n];\r\n\r\nconst SETTER_LINE_REGEXP = /([a-zA-Z][a-zA-Z0-9]*) *= *(.*)/;\r\n\r\nclass Calculator {\r\n  static calculate(text) {\r\n    // Copy the constant set of constants into a map that we\r\n    // may modify. We do NOT want to modify the original.\r\n    // We're setting it on \"window\" so that the parser\r\n    // code can read it.\r\n    window.SCIPARSER_SYMBOLS_MAP = new Map(SCIPARSER_CONSTANTS);\r\n    window.SCIPARSER_UNITS_SIMPLIFIER = TypeSimplifier.simplify;\r\n    const variables = [];\r\n    let result = [];\r\n    const lines = text.split('\\n');\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const line = lines[i].trim();\r\n      if (line === '') {\r\n        result.push(['', '', null]);\r\n      } else if (line.startsWith('//')) {\r\n        result.push([line, '', null]);\r\n      } else {\r\n        try {\r\n          const setterMatch = SETTER_LINE_REGEXP.exec(line);\r\n          let parsedLine = [];\r\n          if (setterMatch) {\r\n            // We found a line that's a \"setter\"\r\n            parsedLine = SciParse(setterMatch[2]);\r\n            // Copy the value of the line to the global set of symbols,\r\n            // overwriting any existing value.\r\n            // Also keep an array of ONLY the updated symbols, to display\r\n            // to users.\r\n            const variableName = setterMatch[1];\r\n            window.SCIPARSER_SYMBOLS_MAP.set(variableName, parsedLine);\r\n            const variable = [variableName, parsedLine];\r\n            // If we've seen this variable before, replace the value\r\n            const matchesVariable = (element) => element[0] === variableName;\r\n            const idx = variables.findIndex(matchesVariable);\r\n            if (-1 === idx) {\r\n              // Variable not seen, record it\r\n              variables.push(variable);\r\n            } else {\r\n              // Variable previously seen, replace it\r\n              variables[idx] = variable;\r\n            }\r\n          } else {\r\n            parsedLine = SciParse(line);\r\n          }\r\n\r\n          parsedLine[1] = TypeSimplifier.simplify(parsedLine[1]);\r\n          parsedLine[2] = null;\r\n          result.push(parsedLine);\r\n        } catch (error) {\r\n          var errorMessage = error.message;\r\n          if (error.location && error.location.start && error.location.start.column) {\r\n            errorMessage = errorMessage + ' (column ' + error.location.start.column + ')';\r\n          }\r\n          result.push([errorMessage, '', error]);\r\n        }\r\n      }\r\n    }\r\n    return [result, variables];\r\n  }\r\n}\r\n\r\nexport default Calculator\r\nexport {SCIPARSER_CONSTANTS, UNTYPED}\r\n","import React from 'react';\r\nimport './ConstantsDisplay.css';\r\nimport {SCIPARSER_CONSTANTS} from './Calculator';\r\n\r\nclass ConstantDisplay extends React.Component {\r\n  render() {\r\n    return (\r\n        <tr className=\"Constant\">\r\n          <td>{this.props.symbol}</td><td>{this.props.value}</td><td>{this.props.units}</td><td>{this.props.name}</td>\r\n        </tr>\r\n    );\r\n  }\r\n}\r\n\r\nclass ConstantsDisplay extends React.Component {\r\n  render() {\r\n    const constants = [];\r\n    for (let i = 0; i < SCIPARSER_CONSTANTS.length; i++) {\r\n      const constantInfo = SCIPARSER_CONSTANTS[i];\r\n      const constantSymbol = constantInfo[0];\r\n      const constantValue = constantInfo[1][0];\r\n      const constantUnits = constantInfo[1][1];\r\n      const constantName = constantInfo[2];\r\n      constants.push(<ConstantDisplay symbol={constantSymbol} value={constantValue} units={constantUnits} name={constantName} key={constantSymbol}/>);\r\n    }\r\n\r\n    return (\r\n      <span id='constants'>\r\n        <h1>Constants</h1>\r\n        <table data-testid=\"constants-display-area\">\r\n          <thead><tr>\r\n            <th>constant</th><th>value</th><th>units</th><th>description</th>\r\n          </tr></thead>\r\n          <tbody>\r\n            {constants}\r\n          </tbody>\r\n        </table>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ConstantsDisplay;","import React from 'react';\r\nimport './VariablesDisplay.css';\r\n\r\nclass VariableDisplay extends React.Component {\r\n  render() {\r\n    return (\r\n        <tr className=\"Variable\">\r\n          <td>{this.props.symbol}</td><td>{this.props.value}</td><td>{this.props.units}</td>\r\n        </tr>\r\n    );\r\n  }\r\n}\r\n\r\nclass VariablesDisplay extends React.Component {\r\n  render() {\r\n    const variables = this.props.variables;\r\n\r\n    if (0 === variables.length) {\r\n      return (<span />);\r\n    }\r\n\r\n    const variableDisplays = [];\r\n    for (let i = 0; i < variables.length; i++) {\r\n      const variable = variables[i];\r\n      const variableKey = variable[0];\r\n      const variableInfo = variable[1];\r\n      const variableValue = variableInfo[0];\r\n      const variableUnits = variableInfo[1];\r\n      variableDisplays.push(<VariableDisplay symbol={variableKey} value={variableValue} units={variableUnits} key={variableKey}/>);\r\n    }\r\n\r\n    return (\r\n      <span id='variables'>\r\n        <h1>Variables</h1>\r\n        <table data-testid=\"variables-display-area\">\r\n          <thead><tr>\r\n            <th>name</th><th>value</th><th>units</th>\r\n          </tr></thead>\r\n          <tbody>\r\n            {variableDisplays}\r\n          </tbody>\r\n        </table>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VariablesDisplay;","import React from 'react';\r\nimport './Footer.css';\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <div id='footer' data-testid='footer-display-area'>\r\n        <a href='https://github.com/smedberg/sci-calc'>Source</a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport FormulaInput from './FormulaInput';\r\nimport ResultsDisplay from './ResultsDisplay';\r\nimport ConstantsDisplay from './ConstantsDisplay';\r\nimport VariablesDisplay from './VariablesDisplay';\r\nimport Footer from './Footer';\r\nimport Calculator from './Calculator';\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    // If there was a formula in the hash when we were instantiated, use it.\r\n    // This supports sharing of formula via sharing URL.\r\n    const formulaFromHash = decodeURIComponent((new URL(document.URL).hash).substring(1));\r\n    this.state = {\r\n      formula: formulaFromHash || ''\r\n    };\r\n\r\n    this.onHashChange = this.onHashChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('hashchange', this.onHashChange);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('hashchange', this.onHashChange, false);\r\n  }\r\n\r\n  onHashChange() {\r\n    const changedFormula = decodeURIComponent((new URL(document.URL).hash).substring(1));\r\n    this.setState({formula: changedFormula })\r\n  }\r\n\r\n  render() {\r\n    let results = [];\r\n    let variables = [];\r\n    if (this.state.formula !== '') {\r\n\r\n      // Store the formula into the URL hash, so that it can be shared, etc.\r\n      const url_ob = new URL(document.URL);\r\n      url_ob.hash = '#' + encodeURIComponent(this.state.formula);\r\n      document.location.href = url_ob.href;\r\n\r\n      const calculated = Calculator.calculate(this.state.formula);\r\n      results = calculated[0];\r\n      variables = calculated[1];\r\n    }\r\n    return (\r\n      <span>\r\n        <FormulaInput formula={this.state.formula} results={results} onChange={ changedFormula => { this.setState({formula: changedFormula }) } } />\r\n        <ResultsDisplay results={results} />\r\n        <VariablesDisplay variables={variables} />\r\n        <ConstantsDisplay/>\r\n        <Footer/>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\nroot.render(<App />);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}