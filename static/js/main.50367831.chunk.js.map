{"version":3,"sources":["SciGrammar.js","FormulaInput.js","ResultsDisplay.js","ConstantsDisplay.js","Calculator.js","App.js","reportWebVitals.js","index.js"],"names":["peg$SyntaxError","message","expected","found","location","this","name","Error","captureStackTrace","child","parent","ctor","constructor","prototype","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","class","i","escapedParts","parts","length","Array","classEscape","inverted","any","end","other","description","hex","ch","charCodeAt","toString","toUpperCase","s","replace","j","descriptions","type","sort","slice","join","describeExpected","describeFound","module","exports","SyntaxError","parse","input","options","peg$result","peg$FAILED","peg$startRuleFunctions","Expression","peg$parseExpression","peg$startRuleFunction","peg$c0","peg$c1","peg$literalExpectation","peg$c2","peg$c3","peg$c4","head","tail","reduce","result","element","numLeft","numRight","unitLeft","console","log","units","UNTYPED","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","unitRight","peg$c10","peg$c11","peg$c12","Math","pow","peg$c13","peg$otherExpectation","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","expr","peg$c19","peg$c20","peg$c21","peg$classExpectation","peg$c22","peg$c23","peg$c24","func","close","funcName","value","sin","cos","tan","abs","acos","acosh","asin","asinh","atan","atanh","cbrt","ceil","clz32","cosh","exp","expm1","floor","fround","log1p","log10","log2","round","sinh","sqrt","tanh","trunc","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","peg$c30","chars","undefined","window","SCIPARSER_CONSTANTS","constName","has","get","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","num","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","parseInt","peg$c46","peg$c47","peg$c48","peg$c49","parseFloat","peg$c50","peg$c51","peg$c52","peg$c53","m","exec","peg$c54","peg$c55","peg$c56","peg$currPos","peg$savedPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","substring","peg$computeLocation","peg$buildStructuredError","ignoreCase","peg$computePosDetails","pos","p","details","startPos","endPos","startPosDetails","endPosDetails","start","offset","peg$fail","push","s0","s1","s2","s3","s4","s5","s6","s7","peg$parseTerm","peg$parsews","peg$parseExponent","peg$parseFactor","s8","test","charAt","peg$parseUnaryFunc","peg$parseGrouped","peg$parseNumber","peg$parseTypedNumber","peg$parseUntypedNumber","peg$parseConstant","peg$parseSci","peg$parseFloat","peg$parseInteger","FormulaInput","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","onChange","_this2","react_default","a","createElement","formula","e","target","className","placeholder","rows","data-testid","React","Component","ResultDisplay","resultValue","isNaN","toExponential","ResultsDisplay","display","results","ResultsDisplay_ResultDisplay","key","ConstantDisplay","symbol","ConstantsDisplay","constants","currentConstants","currentConstantNames","toConsumableArray","keys","constantKey","constantInfo","constantValue","constantUnits","ConstantsDisplay_ConstantDisplay","colSpan","Map","PI","E","SETTER_LINE_REGEXP","Calculator","lines","split","trim","startsWith","match","parsedLine","SciParse","set","error","errorMessage","FORMULA_STORAGE_KEY","App","localStorage","getItem","setItem","calculated","calculate","src_FormulaInput_0","changedFormula","setState","src_ResultsDisplay_0","src_ConstantsDisplay_0","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","container","document","getElementById","createRoot","render","src_App_0"],"mappings":"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","file":"static/js/main.50367831.chunk.js","sourcesContent":["/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { Expression: peg$parseExpression },\n      peg$startRuleFunction  = peg$parseExpression,\n\n      peg$c0 = \"+\",\n      peg$c1 = peg$literalExpectation(\"+\", false),\n      peg$c2 = \"-\",\n      peg$c3 = peg$literalExpectation(\"-\", false),\n      peg$c4 = function(head, tail) {\r\n            return tail.reduce(function(result, element) {\r\n              const numLeft = result[0];\r\n              const numRight = element[3][0];\r\n              const unitLeft = result[1];\r\n              // TODO: Check if units of result[1] match units of element[3][1]\r\n              console.log(\"Handling addition, assuming that type \", result[1], \" matches type \", element[3][1]);\r\n              var units = unitLeft;\r\n              if (unitLeft == UNTYPED) {\r\n                units = element[3][1];\r\n              }\r\n              if (element[1] === \"+\") {\r\n                return [numLeft + numRight, units];\r\n              }\r\n              if (element[1] === \"-\") {\r\n                return [numLeft - numRight, units];\r\n              }\r\n            }, head);\r\n          },\n      peg$c5 = \"*\",\n      peg$c6 = peg$literalExpectation(\"*\", false),\n      peg$c7 = \"/\",\n      peg$c8 = peg$literalExpectation(\"/\", false),\n      peg$c9 = function(head, tail) {\r\n            return tail.reduce(function(result, element) {\r\n              const numLeft = result[0];\r\n              const numRight = element[3][0];\r\n              const unitLeft = result[1];\r\n              const unitRight = element[3][1];\r\n              if (element[1] === \"*\") {\r\n                var units;\r\n                if (unitLeft == UNTYPED) {\r\n                  units = unitRight;\r\n                } else if (unitRight == UNTYPED) {\r\n                  units = unitLeft;\r\n                } else {\r\n                  units = unitLeft + '⋅(' + unitRight + ')';\r\n                }\r\n                return [numLeft * numRight, units];\r\n              }\r\n              if (element[1] === \"/\") {\r\n                var units;\r\n                if (unitRight == UNTYPED) {\r\n                  units = unitLeft;\r\n                } else if (unitLeft == UNTYPED) {\r\n                  units = '1/(' + unitRight + ')';\r\n                } else {\r\n                  units = '(' + unitLeft + ')/(' + unitRight + ')';\r\n                }\r\n                return [numLeft / numRight, units];\r\n              }\r\n            }, head);\r\n          },\n      peg$c10 = \"^\",\n      peg$c11 = peg$literalExpectation(\"^\", false),\n      peg$c12 = function(head, tail) {\r\n            return tail.reduce(function(result, element) {\r\n              const numLeft = result[0];\r\n              const numRight = element[3][0];\r\n              const unitLeft = result[1];\r\n              var units = UNTYPED;\r\n              if (unitLeft !== UNTYPED) {\r\n                units = '(' + unitLeft + ')^' + numRight\r\n              }\r\n              return [Math.pow(numLeft, numRight), units];\r\n            }, head);\r\n          },\n      peg$c13 = peg$otherExpectation(\"grouped\"),\n      peg$c14 = \"(\",\n      peg$c15 = peg$literalExpectation(\"(\", false),\n      peg$c16 = \")\",\n      peg$c17 = peg$literalExpectation(\")\", false),\n      peg$c18 = function(expr) {\r\n          return expr;\r\n        },\n      peg$c19 = peg$otherExpectation(\"unary function\"),\n      peg$c20 = /^[a-z]/,\n      peg$c21 = peg$classExpectation([[\"a\", \"z\"]], false, false),\n      peg$c22 = /^[a-z0-9]/,\n      peg$c23 = peg$classExpectation([[\"a\", \"z\"], [\"0\", \"9\"]], false, false),\n      peg$c24 = function(func, expr, close) {\r\n          const funcName = func[0] + func[1].join('');\r\n          const value = expr[0];\r\n\r\n          switch (funcName) {\r\n            case \"sin\":\r\n              return [Math.sin(value), UNTYPED];\r\n            case \"cos\":\r\n              return [Math.cos(value), UNTYPED];\r\n            case \"tan\":\r\n              return [Math.tan(value), UNTYPED];\r\n            case \"abs\":\r\n              return [Math.abs(value), UNTYPED];\r\n            case \"acos\":\r\n              return [Math.acos(value), UNTYPED];\r\n            case \"acosh\":\r\n              return [Math.acosh(value), UNTYPED];\r\n            case \"asin\":\r\n              return [Math.asin(value), UNTYPED];\r\n            case \"asinh\":\r\n              return [Math.asinh(value), UNTYPED];\r\n            case \"atan\":\r\n              return [Math.atan(value), UNTYPED];\r\n            case \"atanh\":\r\n              return [Math.atanh(value), UNTYPED];\r\n            case \"cbrt\":\r\n              return [Math.cbrt(value), UNTYPED];\r\n            case \"ceil\":\r\n              return [Math.ceil(value), UNTYPED];\r\n            case \"clz32\":\r\n              return [Math.clz32(value), UNTYPED];\r\n            case \"cos\":\r\n              return [Math.cos(value), UNTYPED];\r\n            case \"cosh\":\r\n              return [Math.cosh(value), UNTYPED];\r\n            case \"exp\":\r\n              return [Math.exp(value), UNTYPED];\r\n            case \"expm1\":\r\n              return [Math.expm1(value), UNTYPED];\r\n            case \"floor\":\r\n              return [Math.floor(value), UNTYPED];\r\n            case \"fround\":\r\n              return [Math.fround(value), UNTYPED];\r\n            case \"log\":\r\n              return [Math.log(value), UNTYPED];\r\n            case \"log1p\":\r\n              return [Math.log1p(value), UNTYPED];\r\n            case \"log10\":\r\n              return [Math.log10(value), UNTYPED];\r\n            case \"log2\":\r\n              return [Math.log2(value), UNTYPED];\r\n            case \"round\":\r\n              return [Math.round(value), UNTYPED];\r\n            case \"sin\":\r\n              return [Math.sin(value), UNTYPED];\r\n            case \"sinh\":\r\n              return [Math.sinh(value), UNTYPED];\r\n            case \"sqrt\":\r\n              return [Math.sqrt(value), UNTYPED];\r\n            case \"tan\":\r\n              return [Math.tan(value), UNTYPED];\r\n            case \"tanh\":\r\n              return [Math.tanh(value), UNTYPED];\r\n            case \"trunc\":\r\n              return [Math.trunc(value), UNTYPED];\r\n            default:\r\n              expected(\"unrecognized unary function '\" + funcName + \"'\");\r\n          }\r\n        },\n      peg$c25 = peg$otherExpectation(\"constant\"),\n      peg$c26 = /^[a-zA-Z]/,\n      peg$c27 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"]], false, false),\n      peg$c28 = /^[a-zA-Z0-9]/,\n      peg$c29 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"]], false, false),\n      peg$c30 = function(chars) {\r\n          if (window.SCIPARSER_CONSTANTS == undefined) {\r\n            expected(\"predefined constant\");\r\n          } else {\r\n            const constName = chars[0] + chars[1].join('');\r\n\r\n            if (window.SCIPARSER_CONSTANTS.has(constName)) {\r\n              const constValue = window.SCIPARSER_CONSTANTS.get(constName)\r\n              return constValue;\r\n            }\r\n            expected(\"predefined constant\");\r\n          }\r\n        },\n      peg$c31 = peg$otherExpectation(\"typed number\"),\n      peg$c32 = /^[ \\t\\n\\r]/,\n      peg$c33 = peg$classExpectation([\" \", \"\\t\", \"\\n\", \"\\r\"], false, false),\n      peg$c34 = /^[a-zA-Z\\/0-9\\-\\^]/,\n      peg$c35 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], \"/\", [\"0\", \"9\"], \"-\", \"^\"], false, false),\n      peg$c36 = function(num, units) {\r\n          const joinedUnits = units[0] + units[1].join('');\r\n          return [num, joinedUnits];\r\n        },\n      peg$c37 = peg$otherExpectation(\"untyped number\"),\n      peg$c38 = function(num) {\r\n          return [num, UNTYPED];\r\n        },\n      peg$c39 = peg$otherExpectation(\"number\"),\n      peg$c40 = peg$otherExpectation(\"integer\"),\n      peg$c41 = /^[\\-+]/,\n      peg$c42 = peg$classExpectation([\"-\", \"+\"], false, false),\n      peg$c43 = /^[0-9]/,\n      peg$c44 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c45 = function() {\r\n          return parseInt(text(), 10);\r\n        },\n      peg$c46 = peg$otherExpectation(\"float\"),\n      peg$c47 = \".\",\n      peg$c48 = peg$literalExpectation(\".\", false),\n      peg$c49 = function() {\r\n          return parseFloat(text(), 10);\r\n        },\n      peg$c50 = peg$otherExpectation(\"scientific notation\"),\n      peg$c51 = \"e\",\n      peg$c52 = peg$literalExpectation(\"e\", false),\n      peg$c53 = function() {\r\n          const m = /([-+]?[0-9]+(.[0-9]+)?)[eE]([-+]?[0-9]+)/.exec(text());\r\n          return parseFloat(m[1], 10) * Math.pow(10, parseInt(m[3]));\r\n         },\n      peg$c54 = peg$otherExpectation(\"whitespace\"),\n      peg$c55 = /^[ \\t]/,\n      peg$c56 = peg$classExpectation([\" \", \"\\t\"], false, false),\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parseExpression() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseTerm();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parsews();\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 43) {\n          s5 = peg$c0;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c1); }\n        }\n        if (s5 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 45) {\n            s5 = peg$c2;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c3); }\n          }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsews();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseTerm();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parsews();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 43) {\n            s5 = peg$c0;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c1); }\n          }\n          if (s5 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 45) {\n              s5 = peg$c2;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c3); }\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsews();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseTerm();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c4(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTerm() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseExponent();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parsews();\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 42) {\n          s5 = peg$c5;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c6); }\n        }\n        if (s5 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 47) {\n            s5 = peg$c7;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c8); }\n          }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsews();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseExponent();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parsews();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 42) {\n            s5 = peg$c5;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c6); }\n          }\n          if (s5 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 47) {\n              s5 = peg$c7;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c8); }\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsews();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseExponent();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c9(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExponent() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseFactor();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parsews();\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 94) {\n          s5 = peg$c10;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c11); }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsews();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseFactor();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parsews();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 94) {\n            s5 = peg$c10;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c11); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsews();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseFactor();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c12(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseFactor() {\n    var s0;\n\n    s0 = peg$parseUnaryFunc();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseGrouped();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseTypedNumber();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseUntypedNumber();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseConstant();\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseGrouped() {\n    var s0, s1, s2, s3, s4, s5;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c14;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c15); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseExpression();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsews();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s5 = peg$c16;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c17); }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c18(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c13); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnaryFunc() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (peg$c20.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c21); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = [];\n      if (peg$c22.test(input.charAt(peg$currPos))) {\n        s4 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c23); }\n      }\n      if (s4 !== peg$FAILED) {\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          if (peg$c22.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c23); }\n          }\n        }\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s3 = peg$c14;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c15); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsews();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseExpression();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$currPos;\n              s7 = peg$parsews();\n              if (s7 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s8 = peg$c16;\n                  peg$currPos++;\n                } else {\n                  s8 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c17); }\n                }\n                if (s8 !== peg$FAILED) {\n                  s7 = [s7, s8];\n                  s6 = s7;\n                } else {\n                  peg$currPos = s6;\n                  s6 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s6;\n                s6 = peg$FAILED;\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c24(s1, s5, s6);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c19); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseConstant() {\n    var s0, s1, s2, s3, s4, s5;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      if (peg$c26.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c27); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        if (peg$c28.test(input.charAt(peg$currPos))) {\n          s5 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c29); }\n        }\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          if (peg$c28.test(input.charAt(peg$currPos))) {\n            s5 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c29); }\n          }\n        }\n        if (s4 !== peg$FAILED) {\n          s3 = [s3, s4];\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c30(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c25); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseTypedNumber() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseNumber();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c32.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c33); }\n      }\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c32.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c33); }\n          }\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        if (peg$c26.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c27); }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = [];\n          if (peg$c34.test(input.charAt(peg$currPos))) {\n            s6 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c35); }\n          }\n          while (s6 !== peg$FAILED) {\n            s5.push(s6);\n            if (peg$c34.test(input.charAt(peg$currPos))) {\n              s6 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c35); }\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c36(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c31); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUntypedNumber() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseNumber();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c38(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c37); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseNumber() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = peg$parseSci();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseFloat();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseInteger();\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c39); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseInteger() {\n    var s0, s1, s2, s3, s4;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    if (s1 !== peg$FAILED) {\n      if (peg$c41.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c42); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (peg$c43.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c44); }\n        }\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            if (peg$c43.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c44); }\n            }\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c45();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c40); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseFloat() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    if (s1 !== peg$FAILED) {\n      if (peg$c41.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c42); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (peg$c43.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c44); }\n        }\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            if (peg$c43.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c44); }\n            }\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s4 = peg$c47;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c48); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            if (peg$c43.test(input.charAt(peg$currPos))) {\n              s6 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c44); }\n            }\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              if (peg$c43.test(input.charAt(peg$currPos))) {\n                s6 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c44); }\n              }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c49();\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c46); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseSci() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    if (s1 !== peg$FAILED) {\n      if (peg$c41.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c42); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (peg$c43.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c44); }\n        }\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            if (peg$c43.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c44); }\n            }\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s5 = peg$c47;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c48); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = [];\n            if (peg$c43.test(input.charAt(peg$currPos))) {\n              s7 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c44); }\n            }\n            while (s7 !== peg$FAILED) {\n              s6.push(s7);\n              if (peg$c43.test(input.charAt(peg$currPos))) {\n                s7 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c44); }\n              }\n            }\n            if (s6 !== peg$FAILED) {\n              s5 = [s5, s6];\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 101) {\n              s5 = peg$c51;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c52); }\n            }\n            if (s5 !== peg$FAILED) {\n              if (peg$c41.test(input.charAt(peg$currPos))) {\n                s6 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c42); }\n              }\n              if (s6 === peg$FAILED) {\n                s6 = null;\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = [];\n                if (peg$c43.test(input.charAt(peg$currPos))) {\n                  s8 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s8 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c44); }\n                }\n                if (s8 !== peg$FAILED) {\n                  while (s8 !== peg$FAILED) {\n                    s7.push(s8);\n                    if (peg$c43.test(input.charAt(peg$currPos))) {\n                      s8 = input.charAt(peg$currPos);\n                      peg$currPos++;\n                    } else {\n                      s8 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c44); }\n                    }\n                  }\n                } else {\n                  s7 = peg$FAILED;\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c53();\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c50); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsews() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    if (peg$c55.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c56); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c55.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c56); }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c54); }\n    }\n\n    return s0;\n  }\n\n\r\n    const UNTYPED = \"untyped\";\r\n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n","import React from 'react';\r\nimport './FormulaInput.css';\r\n\r\nclass FormulaInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      onChange: props.onChange\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <textarea\r\n          value={this.props.formula}\r\n          onChange={e => this.state.onChange(e.target.value)}\r\n          className=\"FormulaInput\"\r\n          placeholder=\"Enter formula here, e.g.&#10;mass = 3 kg&#10;velocity = 0.5 * c&#10;energy = 1/2 * mass * velocity^2\"\r\n          rows=\"10\"\r\n          data-testid=\"formula-text-area\">\r\n        </textarea>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormulaInput;","import React from 'react';\r\nimport './ResultsDisplay.css';\r\n\r\nclass ResultDisplay extends React.Component {\r\n  render() {\r\n    let resultValue = this.props.resultValue;\r\n    if (!isNaN(resultValue) && '' !== resultValue) {\r\n      resultValue = resultValue.toExponential();\r\n    }\r\n    return (\r\n        <p className=\"Result\" data-testid=\"result-display-area\">\r\n          {resultValue} {this.props.units}\r\n        </p>\r\n    );\r\n  }\r\n}\r\n\r\nclass ResultsDisplay extends React.Component {\r\n  render() {\r\n\r\n    const display = [];\r\n\r\n    const results = this.props.results;\r\n    for (let i = 0; i < results.length; i++) {\r\n      display.push(<ResultDisplay resultValue={results[i][0]} units={results[i][1]} key={i}/>);\r\n    }\r\n\r\n\r\n    return (\r\n      <div data-testid=\"results-display-area\">\r\n        Results:\r\n        {display}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResultsDisplay;","import React from 'react';\r\nimport './ConstantsDisplay.css';\r\n\r\nclass ConstantDisplay extends React.Component {\r\n  render() {\r\n    return (\r\n        <tr className=\"Constant\">\r\n          <td>{this.props.symbol}</td><td>=</td><td>{this.props.value}</td><td>{this.props.units}</td>\r\n        </tr>\r\n    );\r\n  }\r\n}\r\n\r\nclass ConstantsDisplay extends React.Component {\r\n  render() {\r\n    const constants = [];\r\n    const currentConstants = this.props.constants;\r\n    const currentConstantNames = [...currentConstants.keys()].sort();\r\n    for (let i = 0; i < currentConstantNames.length; i++) {\r\n      const constantKey = currentConstantNames[i];\r\n      const constantInfo = currentConstants.get(constantKey);\r\n      const constantValue = constantInfo[0];\r\n      const constantUnits = constantInfo[1];\r\n      constants.push(<ConstantDisplay symbol={constantKey} value={constantValue} units={constantUnits} key={i}/>);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        Constants:\r\n        <table data-testid=\"constants-display-area\">\r\n          <thead><tr>\r\n            <th colSpan=\"2\">Symbol</th><th>value</th><th>units</th>\r\n          </tr></thead>\r\n          <tbody>\r\n            {constants}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ConstantsDisplay;","import { parse as SciParse } from './SciGrammar'\r\n\r\n// A global used in SciGrammar.pegjs.  We can't pass in\r\n// arguments, but we share a global environment.\r\n// We can also dynamically modify this map, e.g.\r\n// by adding new constants at runtime.\r\nconst SCIPARSER_CONSTANTS =  new Map([\r\n  [\"Pi\", [Math.PI, \"untyped\"], \"Pi\"],\r\n  [\"E\", [Math.E, \"untyped\"], \"Euler's Constant\"],\r\n  [\"c\", [2.99792e8, \"m/s\"], \"Speed of Light\"],\r\n  [\"e\", [1.60218e-19, \"C\"], \"Elementary Charge\"],\r\n  [\"Me\", [9.10938e-31, \"kg\"], \"Electron Mass\"],\r\n  [\"Mp\", [1.67262e-27, \"kg\"], \"Proton Mass\"],\r\n  [\"Mn\", [1.67493e-27, \"kg\"], \"Neutron Mass\"],\r\n  [\"h\", [6.62607e-34, \"Js\"], \"Planck's Constant\"],\r\n  [\"Na\", [6.02214e23, \"1/mol\"], \"Avogadro's Number\"],\r\n  [\"R\", [8.31446, \"J/Kmol\"], \"Gas Constant\"],\r\n  [\"kB\", [1.38065e-23, \"J/K\"], \"Boltzmann's Constant\"],\r\n  [\"a0\", [5.29177e-11, \"m\"], \"Bohr Radius\"],\r\n  [\"e0\", [8.85419e-12, \"C^2/Jm\"], \"Vacuum Permittivity\"],\r\n  [\"Rh\", [13.6057, \"eV\"], \"Rydberg Constant\"],\r\n  [\"amu\", [1.66054e-27, \"kg/amu\"], \"Atomic Mass\"],\r\n  [\"eV\", [1.60218e-19, \"J/eV\"], \"Electron Volt\"],\r\n  [\"D\", [3.336e-30, \"Cm\"], \"Debye\"]\r\n]);\r\n\r\nconst SETTER_LINE_REGEXP = /([a-zA-Z][a-zA-Z0-9]*) *= *(.*)/;\r\n\r\nclass Calculator {\r\n  static calculate(text) {\r\n    // Copy the constant set of constants into a map that we\r\n    // may modify. We do NOT want to modify the original.\r\n    // We're setting it on \"window\" so that the parser\r\n    // code can read it.\r\n    window.SCIPARSER_CONSTANTS = new Map(SCIPARSER_CONSTANTS);\r\n    let result = [];\r\n    const lines = text.split('\\n');\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const line = lines[i].trim();\r\n      if (line === '' || line.startsWith('//')) {\r\n        result.push(['(blank)', '']);\r\n      } else {\r\n        try {\r\n          const match = SETTER_LINE_REGEXP.exec(line);\r\n          let parsedLine = [];\r\n          if (match) {\r\n            // We found a line that's a \"setter\"\r\n            parsedLine = SciParse(match[2]);\r\n            // Copy the value of the line to the global set of constants,\r\n            // overwriting any existing value\r\n            window.SCIPARSER_CONSTANTS.set(match[1], parsedLine);\r\n          } else {\r\n            parsedLine = SciParse(line);\r\n          }\r\n          result.push(parsedLine);\r\n        } catch (error) {\r\n          var errorMessage = error.message;\r\n          if (error.location && error.location.start && error.location.start.column) {\r\n            errorMessage = errorMessage + ' (column ' + error.location.start.column + ')';\r\n          }\r\n          result.push([errorMessage, '']);\r\n        }\r\n      }\r\n    }\r\n    return [result, window.SCIPARSER_CONSTANTS];\r\n  }\r\n}\r\n\r\nexport {SCIPARSER_CONSTANTS, Calculator}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport FormulaInput from './FormulaInput';\r\nimport ResultsDisplay from './ResultsDisplay';\r\nimport ConstantsDisplay from './ConstantsDisplay';\r\nimport {Calculator, SCIPARSER_CONSTANTS} from './Calculator';\r\n\r\nconst FORMULA_STORAGE_KEY = 'SciCalcFormula';\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      formula: localStorage.getItem(FORMULA_STORAGE_KEY) || ''\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let results = [];\r\n    let constants = SCIPARSER_CONSTANTS;\r\n    if (this.state.formula !== '') {\r\n      localStorage.setItem(FORMULA_STORAGE_KEY, this.state.formula );\r\n      const calculated = Calculator.calculate(this.state.formula);\r\n      results = calculated[0];\r\n      constants = calculated[1];\r\n    }\r\n    return (\r\n      <span>\r\n        <FormulaInput formula={this.state.formula} onChange={ changedFormula => { this.setState({formula: changedFormula }) } } />\r\n        <ResultsDisplay results={results} />\r\n        <ConstantsDisplay constants={constants} />\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\nroot.render(<App />);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}