{"version":3,"sources":["FormulaInput.js","ResultsDisplay.js","ConstantsDisplay.js","Calculator.js","App.js","reportWebVitals.js","index.js","SciGrammar.js"],"names":["FormulaInput","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","onChange","_this2","react_default","a","createElement","value","formula","e","target","className","placeholder","rows","data-testid","React","Component","ResultDisplay","resultValue","isNaN","toExponential","units","ResultsDisplay","display","results","i","length","push","ResultsDisplay_ResultDisplay","key","ConstantDisplay","symbol","ConstantsDisplay","constants","currentConstants","currentConstantNames","toConsumableArray","keys","sort","constantKey","constantInfo","get","constantValue","constantUnits","ConstantsDisplay_ConstantDisplay","colSpan","SCIPARSER_CONSTANTS","Map","Math","PI","E","SETTER_LINE_REGEXP","Calculator","text","window","result","lines","split","line","trim","startsWith","match","exec","parsedLine","SciParse","set","error","errorMessage","message","location","start","column","App","formulaFromHash","decodeURIComponent","URL","document","hash","substring","onHashChange","bind","assertThisInitialized","addEventListener","removeEventListener","changedFormula","setState","url_ob","encodeURIComponent","href","calculated","calculate","src_FormulaInput_0","src_ResultsDisplay_0","src_ConstantsDisplay_0","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","container","getElementById","createRoot","render","src_App_0","peg$SyntaxError","expected","found","name","Error","captureStackTrace","child","parent","ctor","constructor","prototype","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","class","escapedParts","parts","Array","classEscape","inverted","any","end","other","description","hex","ch","charCodeAt","toString","toUpperCase","s","replace","j","descriptions","type","slice","join","describeExpected","describeFound","module","exports","SyntaxError","parse","input","options","peg$result","peg$FAILED","peg$startRuleFunctions","Expression","peg$parseExpression","peg$startRuleFunction","peg$c0","peg$c1","peg$literalExpectation","peg$c2","peg$c3","peg$c4","head","tail","reduce","element","numLeft","numRight","unitLeft","console","log","UNTYPED","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","unitRight","peg$c10","peg$c11","peg$c12","pow","peg$c13","peg$otherExpectation","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","expr","peg$c19","peg$c20","peg$c21","peg$classExpectation","peg$c22","peg$c23","peg$c24","func","close","funcName","sin","cos","tan","abs","acos","acosh","asin","asinh","atan","atanh","cbrt","ceil","clz32","cosh","exp","expm1","floor","fround","log1p","log10","log2","round","sinh","sqrt","tanh","trunc","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","peg$c30","chars","undefined","constName","has","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","num","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","parseInt","peg$c46","peg$c47","peg$c48","peg$c49","parseFloat","peg$c50","peg$c51","peg$c52","peg$c53","m","peg$c54","peg$c55","peg$c56","peg$currPos","peg$savedPos","peg$posDetailsCache","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","peg$computeLocation","peg$buildStructuredError","ignoreCase","peg$computePosDetails","pos","p","details","startPos","endPos","startPosDetails","endPosDetails","offset","peg$fail","s0","s1","s2","s3","s4","s5","s6","s7","peg$parseTerm","peg$parsews","peg$parseExponent","peg$parseFactor","s8","test","charAt","peg$parseUnaryFunc","peg$parseGrouped","peg$parseNumber","peg$parseTypedNumber","peg$parseUntypedNumber","peg$parseConstant","peg$parseSci","peg$parseFloat","peg$parseInteger"],"mappings":"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","file":"static/js/main.5ebde74b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './FormulaInput.css';\r\n\r\nclass FormulaInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      onChange: props.onChange\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <textarea\r\n          value={this.props.formula}\r\n          onChange={e => this.state.onChange(e.target.value)}\r\n          className=\"FormulaInput\"\r\n          placeholder=\"Enter formula here, e.g.&#10;mass = 3 kg&#10;velocity = 0.5 * c&#10;energy = 1/2 * mass * velocity^2\"\r\n          rows=\"10\"\r\n          data-testid=\"formula-text-area\">\r\n        </textarea>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormulaInput;","import React from 'react';\r\nimport './ResultsDisplay.css';\r\n\r\nclass ResultDisplay extends React.Component {\r\n  render() {\r\n    let resultValue = this.props.resultValue;\r\n    if (!isNaN(resultValue) && '' !== resultValue) {\r\n      resultValue = resultValue.toExponential();\r\n    }\r\n    return (\r\n        <p className=\"Result\" data-testid=\"result-display-area\">\r\n          {resultValue} {this.props.units}\r\n        </p>\r\n    );\r\n  }\r\n}\r\n\r\nclass ResultsDisplay extends React.Component {\r\n  render() {\r\n\r\n    const display = [];\r\n\r\n    const results = this.props.results;\r\n    for (let i = 0; i < results.length; i++) {\r\n      display.push(<ResultDisplay resultValue={results[i][0]} units={results[i][1]} key={i}/>);\r\n    }\r\n\r\n\r\n    return (\r\n      <div data-testid=\"results-display-area\">\r\n        Results:\r\n        {display}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResultsDisplay;","import React from 'react';\r\nimport './ConstantsDisplay.css';\r\n\r\nclass ConstantDisplay extends React.Component {\r\n  render() {\r\n    return (\r\n        <tr className=\"Constant\">\r\n          <td>{this.props.symbol}</td><td>=</td><td>{this.props.value}</td><td>{this.props.units}</td>\r\n        </tr>\r\n    );\r\n  }\r\n}\r\n\r\nclass ConstantsDisplay extends React.Component {\r\n  render() {\r\n    const constants = [];\r\n    const currentConstants = this.props.constants;\r\n    const currentConstantNames = [...currentConstants.keys()].sort();\r\n    for (let i = 0; i < currentConstantNames.length; i++) {\r\n      const constantKey = currentConstantNames[i];\r\n      const constantInfo = currentConstants.get(constantKey);\r\n      const constantValue = constantInfo[0];\r\n      const constantUnits = constantInfo[1];\r\n      constants.push(<ConstantDisplay symbol={constantKey} value={constantValue} units={constantUnits} key={i}/>);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        Constants:\r\n        <table data-testid=\"constants-display-area\">\r\n          <thead><tr>\r\n            <th colSpan=\"2\">Symbol</th><th>value</th><th>units</th>\r\n          </tr></thead>\r\n          <tbody>\r\n            {constants}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ConstantsDisplay;","import { parse as SciParse } from './SciGrammar'\r\n\r\n// A global used in SciGrammar.pegjs.  We can't pass in\r\n// arguments, but we share a global environment.\r\n// We can also dynamically modify this map, e.g.\r\n// by adding new constants at runtime.\r\nconst SCIPARSER_CONSTANTS =  new Map([\r\n  [\"Pi\", [Math.PI, \"untyped\"], \"Pi\"],\r\n  [\"E\", [Math.E, \"untyped\"], \"Euler's Constant\"],\r\n  [\"c\", [2.99792e8, \"m/s\"], \"Speed of Light\"],\r\n  [\"e\", [1.60218e-19, \"C\"], \"Elementary Charge\"],\r\n  [\"Me\", [9.10938e-31, \"kg\"], \"Electron Mass\"],\r\n  [\"Mp\", [1.67262e-27, \"kg\"], \"Proton Mass\"],\r\n  [\"Mn\", [1.67493e-27, \"kg\"], \"Neutron Mass\"],\r\n  [\"h\", [6.62607e-34, \"Js\"], \"Planck's Constant\"],\r\n  [\"Na\", [6.02214e23, \"1/mol\"], \"Avogadro's Number\"],\r\n  [\"R\", [8.31446, \"J/Kmol\"], \"Gas Constant\"],\r\n  [\"kB\", [1.38065e-23, \"J/K\"], \"Boltzmann's Constant\"],\r\n  [\"a0\", [5.29177e-11, \"m\"], \"Bohr Radius\"],\r\n  [\"e0\", [8.85419e-12, \"C^2/Jm\"], \"Vacuum Permittivity\"],\r\n  [\"Rh\", [13.6057, \"eV\"], \"Rydberg Constant\"],\r\n  [\"amu\", [1.66054e-27, \"kg/amu\"], \"Atomic Mass\"],\r\n  [\"eV\", [1.60218e-19, \"J/eV\"], \"Electron Volt\"],\r\n  [\"D\", [3.336e-30, \"Cm\"], \"Debye\"]\r\n]);\r\n\r\nconst SETTER_LINE_REGEXP = /([a-zA-Z][a-zA-Z0-9]*) *= *(.*)/;\r\n\r\nclass Calculator {\r\n  static calculate(text) {\r\n    // Copy the constant set of constants into a map that we\r\n    // may modify. We do NOT want to modify the original.\r\n    // We're setting it on \"window\" so that the parser\r\n    // code can read it.\r\n    window.SCIPARSER_CONSTANTS = new Map(SCIPARSER_CONSTANTS);\r\n    let result = [];\r\n    const lines = text.split('\\n');\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const line = lines[i].trim();\r\n      if (line === '' || line.startsWith('//')) {\r\n        result.push(['(blank)', '']);\r\n      } else {\r\n        try {\r\n          const match = SETTER_LINE_REGEXP.exec(line);\r\n          let parsedLine = [];\r\n          if (match) {\r\n            // We found a line that's a \"setter\"\r\n            parsedLine = SciParse(match[2]);\r\n            // Copy the value of the line to the global set of constants,\r\n            // overwriting any existing value\r\n            window.SCIPARSER_CONSTANTS.set(match[1], parsedLine);\r\n          } else {\r\n            parsedLine = SciParse(line);\r\n          }\r\n          result.push(parsedLine);\r\n        } catch (error) {\r\n          var errorMessage = error.message;\r\n          if (error.location && error.location.start && error.location.start.column) {\r\n            errorMessage = errorMessage + ' (column ' + error.location.start.column + ')';\r\n          }\r\n          result.push([errorMessage, '']);\r\n        }\r\n      }\r\n    }\r\n    return [result, window.SCIPARSER_CONSTANTS];\r\n  }\r\n}\r\n\r\nexport {SCIPARSER_CONSTANTS, Calculator}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport FormulaInput from './FormulaInput';\r\nimport ResultsDisplay from './ResultsDisplay';\r\nimport ConstantsDisplay from './ConstantsDisplay';\r\nimport {Calculator, SCIPARSER_CONSTANTS} from './Calculator';\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    // If there was a formula in the hash when we were instantiated, use it.\r\n    // This supports sharing of formula via sharing URL.\r\n    const formulaFromHash = decodeURIComponent((new URL(document.URL).hash).substring(1));\r\n    this.state = {\r\n      formula: formulaFromHash || ''\r\n    };\r\n\r\n    this.onHashChange = this.onHashChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('hashchange', this.onHashChange);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('hashchange', this.onHashChange, false);\r\n  }\r\n\r\n  onHashChange() {\r\n    const changedFormula = decodeURIComponent((new URL(document.URL).hash).substring(1));\r\n    this.setState({formula: changedFormula })\r\n  }\r\n\r\n  render() {\r\n    let results = [];\r\n    let constants = SCIPARSER_CONSTANTS;\r\n    if (this.state.formula !== '') {\r\n\r\n      // Store the formula into the URL hash, so that it can be shared, etc.\r\n      const url_ob = new URL(document.URL);\r\n      url_ob.hash = '#' + encodeURIComponent(this.state.formula);\r\n      document.location.href = url_ob.href;\r\n\r\n      const calculated = Calculator.calculate(this.state.formula);\r\n      results = calculated[0];\r\n      constants = calculated[1];\r\n    }\r\n    return (\r\n      <span>\r\n        <FormulaInput formula={this.state.formula} onChange={ changedFormula => { this.setState({formula: changedFormula }) } } />\r\n        <ResultsDisplay results={results} />\r\n        <ConstantsDisplay constants={constants} />\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\nroot.render(<App />);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { Expression: peg$parseExpression },\n      peg$startRuleFunction  = peg$parseExpression,\n\n      peg$c0 = \"+\",\n      peg$c1 = peg$literalExpectation(\"+\", false),\n      peg$c2 = \"-\",\n      peg$c3 = peg$literalExpectation(\"-\", false),\n      peg$c4 = function(head, tail) {\r\n            return tail.reduce(function(result, element) {\r\n              const numLeft = result[0];\r\n              const numRight = element[3][0];\r\n              const unitLeft = result[1];\r\n              // TODO: Check if units of result[1] match units of element[3][1]\r\n              console.log(\"Handling addition, assuming that type \", result[1], \" matches type \", element[3][1]);\r\n              var units = unitLeft;\r\n              if (unitLeft == UNTYPED) {\r\n                units = element[3][1];\r\n              }\r\n              if (element[1] === \"+\") {\r\n                return [numLeft + numRight, units];\r\n              }\r\n              if (element[1] === \"-\") {\r\n                return [numLeft - numRight, units];\r\n              }\r\n            }, head);\r\n          },\n      peg$c5 = \"*\",\n      peg$c6 = peg$literalExpectation(\"*\", false),\n      peg$c7 = \"/\",\n      peg$c8 = peg$literalExpectation(\"/\", false),\n      peg$c9 = function(head, tail) {\r\n            return tail.reduce(function(result, element) {\r\n              const numLeft = result[0];\r\n              const numRight = element[3][0];\r\n              const unitLeft = result[1];\r\n              const unitRight = element[3][1];\r\n              if (element[1] === \"*\") {\r\n                var units;\r\n                if (unitLeft == UNTYPED) {\r\n                  units = unitRight;\r\n                } else if (unitRight == UNTYPED) {\r\n                  units = unitLeft;\r\n                } else {\r\n                  units = unitLeft + '⋅(' + unitRight + ')';\r\n                }\r\n                return [numLeft * numRight, units];\r\n              }\r\n              if (element[1] === \"/\") {\r\n                var units;\r\n                if (unitRight == UNTYPED) {\r\n                  units = unitLeft;\r\n                } else if (unitLeft == UNTYPED) {\r\n                  units = '1/(' + unitRight + ')';\r\n                } else {\r\n                  units = '(' + unitLeft + ')/(' + unitRight + ')';\r\n                }\r\n                return [numLeft / numRight, units];\r\n              }\r\n            }, head);\r\n          },\n      peg$c10 = \"^\",\n      peg$c11 = peg$literalExpectation(\"^\", false),\n      peg$c12 = function(head, tail) {\r\n            return tail.reduce(function(result, element) {\r\n              const numLeft = result[0];\r\n              const numRight = element[3][0];\r\n              const unitLeft = result[1];\r\n              var units = UNTYPED;\r\n              if (unitLeft !== UNTYPED) {\r\n                units = '(' + unitLeft + ')^' + numRight\r\n              }\r\n              return [Math.pow(numLeft, numRight), units];\r\n            }, head);\r\n          },\n      peg$c13 = peg$otherExpectation(\"grouped\"),\n      peg$c14 = \"(\",\n      peg$c15 = peg$literalExpectation(\"(\", false),\n      peg$c16 = \")\",\n      peg$c17 = peg$literalExpectation(\")\", false),\n      peg$c18 = function(expr) {\r\n          return expr;\r\n        },\n      peg$c19 = peg$otherExpectation(\"unary function\"),\n      peg$c20 = /^[a-z]/,\n      peg$c21 = peg$classExpectation([[\"a\", \"z\"]], false, false),\n      peg$c22 = /^[a-z0-9]/,\n      peg$c23 = peg$classExpectation([[\"a\", \"z\"], [\"0\", \"9\"]], false, false),\n      peg$c24 = function(func, expr, close) {\r\n          const funcName = func[0] + func[1].join('');\r\n          const value = expr[0];\r\n\r\n          switch (funcName) {\r\n            case \"sin\":\r\n              return [Math.sin(value), UNTYPED];\r\n            case \"cos\":\r\n              return [Math.cos(value), UNTYPED];\r\n            case \"tan\":\r\n              return [Math.tan(value), UNTYPED];\r\n            case \"abs\":\r\n              return [Math.abs(value), UNTYPED];\r\n            case \"acos\":\r\n              return [Math.acos(value), UNTYPED];\r\n            case \"acosh\":\r\n              return [Math.acosh(value), UNTYPED];\r\n            case \"asin\":\r\n              return [Math.asin(value), UNTYPED];\r\n            case \"asinh\":\r\n              return [Math.asinh(value), UNTYPED];\r\n            case \"atan\":\r\n              return [Math.atan(value), UNTYPED];\r\n            case \"atanh\":\r\n              return [Math.atanh(value), UNTYPED];\r\n            case \"cbrt\":\r\n              return [Math.cbrt(value), UNTYPED];\r\n            case \"ceil\":\r\n              return [Math.ceil(value), UNTYPED];\r\n            case \"clz32\":\r\n              return [Math.clz32(value), UNTYPED];\r\n            case \"cos\":\r\n              return [Math.cos(value), UNTYPED];\r\n            case \"cosh\":\r\n              return [Math.cosh(value), UNTYPED];\r\n            case \"exp\":\r\n              return [Math.exp(value), UNTYPED];\r\n            case \"expm1\":\r\n              return [Math.expm1(value), UNTYPED];\r\n            case \"floor\":\r\n              return [Math.floor(value), UNTYPED];\r\n            case \"fround\":\r\n              return [Math.fround(value), UNTYPED];\r\n            case \"log\":\r\n              return [Math.log(value), UNTYPED];\r\n            case \"log1p\":\r\n              return [Math.log1p(value), UNTYPED];\r\n            case \"log10\":\r\n              return [Math.log10(value), UNTYPED];\r\n            case \"log2\":\r\n              return [Math.log2(value), UNTYPED];\r\n            case \"round\":\r\n              return [Math.round(value), UNTYPED];\r\n            case \"sin\":\r\n              return [Math.sin(value), UNTYPED];\r\n            case \"sinh\":\r\n              return [Math.sinh(value), UNTYPED];\r\n            case \"sqrt\":\r\n              return [Math.sqrt(value), UNTYPED];\r\n            case \"tan\":\r\n              return [Math.tan(value), UNTYPED];\r\n            case \"tanh\":\r\n              return [Math.tanh(value), UNTYPED];\r\n            case \"trunc\":\r\n              return [Math.trunc(value), UNTYPED];\r\n            default:\r\n              expected(\"unrecognized unary function '\" + funcName + \"'\");\r\n          }\r\n        },\n      peg$c25 = peg$otherExpectation(\"constant\"),\n      peg$c26 = /^[a-zA-Z]/,\n      peg$c27 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"]], false, false),\n      peg$c28 = /^[a-zA-Z0-9]/,\n      peg$c29 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"]], false, false),\n      peg$c30 = function(chars) {\r\n          if (window.SCIPARSER_CONSTANTS == undefined) {\r\n            expected(\"predefined constant\");\r\n          } else {\r\n            const constName = chars[0] + chars[1].join('');\r\n\r\n            if (window.SCIPARSER_CONSTANTS.has(constName)) {\r\n              const constValue = window.SCIPARSER_CONSTANTS.get(constName)\r\n              return constValue;\r\n            }\r\n            expected(\"predefined constant\");\r\n          }\r\n        },\n      peg$c31 = peg$otherExpectation(\"typed number\"),\n      peg$c32 = /^[ \\t\\n\\r]/,\n      peg$c33 = peg$classExpectation([\" \", \"\\t\", \"\\n\", \"\\r\"], false, false),\n      peg$c34 = /^[a-zA-Z\\/0-9\\-\\^]/,\n      peg$c35 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], \"/\", [\"0\", \"9\"], \"-\", \"^\"], false, false),\n      peg$c36 = function(num, units) {\r\n          const joinedUnits = units[0] + units[1].join('');\r\n          return [num, joinedUnits];\r\n        },\n      peg$c37 = peg$otherExpectation(\"untyped number\"),\n      peg$c38 = function(num) {\r\n          return [num, UNTYPED];\r\n        },\n      peg$c39 = peg$otherExpectation(\"number\"),\n      peg$c40 = peg$otherExpectation(\"integer\"),\n      peg$c41 = /^[\\-+]/,\n      peg$c42 = peg$classExpectation([\"-\", \"+\"], false, false),\n      peg$c43 = /^[0-9]/,\n      peg$c44 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c45 = function() {\r\n          return parseInt(text(), 10);\r\n        },\n      peg$c46 = peg$otherExpectation(\"float\"),\n      peg$c47 = \".\",\n      peg$c48 = peg$literalExpectation(\".\", false),\n      peg$c49 = function() {\r\n          return parseFloat(text(), 10);\r\n        },\n      peg$c50 = peg$otherExpectation(\"scientific notation\"),\n      peg$c51 = \"e\",\n      peg$c52 = peg$literalExpectation(\"e\", false),\n      peg$c53 = function() {\r\n          const m = /([-+]?[0-9]+(.[0-9]+)?)[eE]([-+]?[0-9]+)/.exec(text());\r\n          return parseFloat(m[1], 10) * Math.pow(10, parseInt(m[3]));\r\n         },\n      peg$c54 = peg$otherExpectation(\"whitespace\"),\n      peg$c55 = /^[ \\t]/,\n      peg$c56 = peg$classExpectation([\" \", \"\\t\"], false, false),\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parseExpression() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseTerm();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parsews();\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 43) {\n          s5 = peg$c0;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c1); }\n        }\n        if (s5 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 45) {\n            s5 = peg$c2;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c3); }\n          }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsews();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseTerm();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parsews();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 43) {\n            s5 = peg$c0;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c1); }\n          }\n          if (s5 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 45) {\n              s5 = peg$c2;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c3); }\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsews();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseTerm();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c4(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTerm() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseExponent();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parsews();\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 42) {\n          s5 = peg$c5;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c6); }\n        }\n        if (s5 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 47) {\n            s5 = peg$c7;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c8); }\n          }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsews();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseExponent();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parsews();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 42) {\n            s5 = peg$c5;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c6); }\n          }\n          if (s5 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 47) {\n              s5 = peg$c7;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c8); }\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsews();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseExponent();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c9(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExponent() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseFactor();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parsews();\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 94) {\n          s5 = peg$c10;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c11); }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsews();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseFactor();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parsews();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 94) {\n            s5 = peg$c10;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c11); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsews();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseFactor();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c12(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseFactor() {\n    var s0;\n\n    s0 = peg$parseUnaryFunc();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseGrouped();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseTypedNumber();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseUntypedNumber();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseConstant();\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseGrouped() {\n    var s0, s1, s2, s3, s4, s5;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c14;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c15); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseExpression();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsews();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s5 = peg$c16;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c17); }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c18(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c13); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnaryFunc() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (peg$c20.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c21); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = [];\n      if (peg$c22.test(input.charAt(peg$currPos))) {\n        s4 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c23); }\n      }\n      if (s4 !== peg$FAILED) {\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          if (peg$c22.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c23); }\n          }\n        }\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s3 = peg$c14;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c15); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsews();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseExpression();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$currPos;\n              s7 = peg$parsews();\n              if (s7 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s8 = peg$c16;\n                  peg$currPos++;\n                } else {\n                  s8 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c17); }\n                }\n                if (s8 !== peg$FAILED) {\n                  s7 = [s7, s8];\n                  s6 = s7;\n                } else {\n                  peg$currPos = s6;\n                  s6 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s6;\n                s6 = peg$FAILED;\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c24(s1, s5, s6);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c19); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseConstant() {\n    var s0, s1, s2, s3, s4, s5;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      if (peg$c26.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c27); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        if (peg$c28.test(input.charAt(peg$currPos))) {\n          s5 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c29); }\n        }\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          if (peg$c28.test(input.charAt(peg$currPos))) {\n            s5 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c29); }\n          }\n        }\n        if (s4 !== peg$FAILED) {\n          s3 = [s3, s4];\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c30(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c25); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseTypedNumber() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseNumber();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c32.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c33); }\n      }\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c32.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c33); }\n          }\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        if (peg$c26.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c27); }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = [];\n          if (peg$c34.test(input.charAt(peg$currPos))) {\n            s6 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c35); }\n          }\n          while (s6 !== peg$FAILED) {\n            s5.push(s6);\n            if (peg$c34.test(input.charAt(peg$currPos))) {\n              s6 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c35); }\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c36(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c31); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUntypedNumber() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseNumber();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c38(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c37); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseNumber() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = peg$parseSci();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseFloat();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseInteger();\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c39); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseInteger() {\n    var s0, s1, s2, s3, s4;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    if (s1 !== peg$FAILED) {\n      if (peg$c41.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c42); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (peg$c43.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c44); }\n        }\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            if (peg$c43.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c44); }\n            }\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c45();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c40); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseFloat() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    if (s1 !== peg$FAILED) {\n      if (peg$c41.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c42); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (peg$c43.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c44); }\n        }\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            if (peg$c43.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c44); }\n            }\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s4 = peg$c47;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c48); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            if (peg$c43.test(input.charAt(peg$currPos))) {\n              s6 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c44); }\n            }\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              if (peg$c43.test(input.charAt(peg$currPos))) {\n                s6 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c44); }\n              }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c49();\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c46); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseSci() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    if (s1 !== peg$FAILED) {\n      if (peg$c41.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c42); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (peg$c43.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c44); }\n        }\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            if (peg$c43.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c44); }\n            }\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s5 = peg$c47;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c48); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = [];\n            if (peg$c43.test(input.charAt(peg$currPos))) {\n              s7 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c44); }\n            }\n            while (s7 !== peg$FAILED) {\n              s6.push(s7);\n              if (peg$c43.test(input.charAt(peg$currPos))) {\n                s7 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c44); }\n              }\n            }\n            if (s6 !== peg$FAILED) {\n              s5 = [s5, s6];\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 101) {\n              s5 = peg$c51;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c52); }\n            }\n            if (s5 !== peg$FAILED) {\n              if (peg$c41.test(input.charAt(peg$currPos))) {\n                s6 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c42); }\n              }\n              if (s6 === peg$FAILED) {\n                s6 = null;\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = [];\n                if (peg$c43.test(input.charAt(peg$currPos))) {\n                  s8 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s8 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c44); }\n                }\n                if (s8 !== peg$FAILED) {\n                  while (s8 !== peg$FAILED) {\n                    s7.push(s8);\n                    if (peg$c43.test(input.charAt(peg$currPos))) {\n                      s8 = input.charAt(peg$currPos);\n                      peg$currPos++;\n                    } else {\n                      s8 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c44); }\n                    }\n                  }\n                } else {\n                  s7 = peg$FAILED;\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c53();\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c50); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsews() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    if (peg$c55.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c56); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c55.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c56); }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c54); }\n    }\n\n    return s0;\n  }\n\n\r\n    const UNTYPED = \"untyped\";\r\n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n"],"sourceRoot":""}