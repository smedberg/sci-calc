{"version":3,"sources":["SciGrammar.js","UnitsGrammar.js","FormulaInput.js","ResultsDisplay.js","TypeSimplifier.js","Calculator.js","ConstantsDisplay.js","VariablesDisplay.js","Footer.js","App.js","reportWebVitals.js","index.js"],"names":["peg$SyntaxError","message","expected","found","location","this","name","Error","captureStackTrace","child","parent","ctor","constructor","prototype","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","class","i","escapedParts","parts","length","Array","classEscape","inverted","any","end","other","description","hex","ch","charCodeAt","toString","toUpperCase","s","replace","j","descriptions","type","sort","slice","join","describeExpected","describeFound","module","exports","SyntaxError","parse","input","options","peg$result","peg$FAILED","peg$startRuleFunctions","Expression","peg$parseExpression","peg$startRuleFunction","peg$c0","peg$c1","peg$literalExpectation","peg$c2","peg$c3","peg$c4","head","tail","reduce","result","element","numLeft","numRight","unitLeft","undefined","window","SCIPARSER_UNITS_MATCHER","unitsMatch","units","UNTYPED","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","unitRight","peg$c10","peg$c11","peg$c12","Math","pow","peg$c13","peg$otherExpectation","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","expr","peg$c19","peg$c20","peg$c21","peg$classExpectation","peg$c22","peg$c23","peg$c24","func","close","funcName","value","sin","cos","tan","abs","acos","acosh","asin","asinh","atan","atanh","cbrt","ceil","clz32","cosh","exp","expm1","floor","fround","log","log1p","log10","log2","round","sinh","sqrt","tanh","trunc","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","peg$c30","chars","SCIPARSER_SYMBOLS_MAP","symbolName","has","constValue","get","peg$c31","peg$c32","peg$c33","peg$c34","num","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$c50","unit","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","parseInt","peg$c58","peg$c59","peg$c60","peg$c61","parseFloat","peg$c62","peg$c63","peg$c64","peg$c65","m","exec","peg$c66","peg$c67","peg$c68","peg$currPos","peg$savedPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","substring","peg$computeLocation","peg$buildStructuredError","ignoreCase","peg$computePosDetails","pos","p","details","startPos","endPos","startPosDetails","endPosDetails","start","offset","peg$fail","push","s0","s1","s2","s3","s4","s5","s6","s7","peg$parseTerm","peg$parsews","peg$parseExponent","peg$parseFactor","peg$parseGrouped","peg$parseNumber","test","charAt","peg$parseUnits","peg$parseTypedNumber","s8","peg$parseUnaryFunc","peg$parseUntypedNumber","peg$parseSymbol","peg$parseUngroupedUnits","peg$parseGroupedUnits","peg$parseUnit","s9","s10","peg$parseSci","peg$parseFloat","peg$parseInteger","Term","operator","leftUnits","rightUnits","concatted","concat","retval","reduceUnits","rightUnit","exponent","concatenated","power","resultItem","groupedOrUnits","groupOrUnit","ret","substr","peg$parseReciprocal","unitsArray","combined","Map","set","res","from","item","filter","Boolean","x","y","localeCompare","FormulaInput","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","onChange","resultsRef","React","createRef","formulaRef","event","target","current","scrollTop","ResizeObserver","entries","style","height","contentRect","observe","_this2","results","countsText","react_default","a","createElement","className","data-testid","formula","e","onTextChange","onScroll","onScrollChange","placeholder","rows","nowrap","autoComplete","autoCorrect","autoCapitalize","spellCheck","wrap","ref","readOnly","Component","ResultsDisplay","valueClass","id","TypeSimplifier","parsed","UnitsParse","numerator","denominator","inNumerator","parsedItem","destination","absoluteExponent","numeratorStr","denominatorStr","SCIPARSER_CONSTANTS","PI","E","SETTER_LINE_REGEXP","Calculator","variables","lines","split","trim","startsWith","setterMatch","parsedLine","SciParse","variableName","variable","idx","findIndex","simplify","error","errorMessage","left","right","ConstantDisplay","symbol","ConstantsDisplay","constants","constantInfo","constantSymbol","constantValue","constantUnits","constantName","ConstantsDisplay_ConstantDisplay","key","VariableDisplay","VariablesDisplay","variableDisplays","variableKey","variableInfo","variableValue","variableUnits","VariablesDisplay_VariableDisplay","Footer","href","App","formulaFromHash","decodeURIComponent","URL","document","hash","onHashChange","bind","assertThisInitialized","addEventListener","removeEventListener","changedFormula","setState","url_ob","encodeURIComponent","calculated","calculate","src_FormulaInput_0","src_ResultsDisplay_0","src_VariablesDisplay_0","src_ConstantsDisplay_0","src_Footer_0","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","container","getElementById","createRoot","render","src_App_0"],"mappings":"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","file":"static/js/main.65ca8191.chunk.js","sourcesContent":["/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { Expression: peg$parseExpression },\n      peg$startRuleFunction  = peg$parseExpression,\n\n      peg$c0 = \"+\",\n      peg$c1 = peg$literalExpectation(\"+\", false),\n      peg$c2 = \"-\",\n      peg$c3 = peg$literalExpectation(\"-\", false),\n      peg$c4 = function(head, tail) {\r\n            log(\"In SciGrammar add/subtract processing, head is \", head, \", tail is \", tail);\r\n            return tail.reduce(function(result, element) {\r\n              log(\"In SciGrammar add/subtract reduction, result is \", result, \", element is \", element);\r\n              const numLeft = result[0];\r\n              const numRight = element[3][0];\r\n              const unitLeft = result[1];\r\n\r\n              // The logic is somewhat circuitous here.  We're generally just combining units\r\n              // syntactically in this file, e.g. \"3 m * 4 m/s\" becomes \"12 m*m/s\".  We're NOT\r\n              // simplifying to \"12 m^2/s\"- that's done later, outside this grammar.\r\n              //  However, for addition and subtraction, we want to check if units match.  To\r\n              // do so, we'll call an external helper that has to simplify anyway, and it returns\r\n              // the simplified units so that we can display a good error message.  We COULD use\r\n              // the simplified units instead of the more complex \"raw\" units.\r\n              if (window.SCIPARSER_UNITS_MATCHER !== undefined) {\r\n                const unitsMatch = window.SCIPARSER_UNITS_MATCHER(result[1], element[3][1]);\r\n                if (!unitsMatch[0]) {\r\n                  expected(\"units '\" + unitsMatch[1] + \"' to match units '\" + unitsMatch[2] + \"'\");\r\n                }\r\n              }\r\n              var units = unitLeft;\r\n              if (unitLeft == UNTYPED) {\r\n                units = element[3][1];\r\n              }\r\n              units = units.replace(/ /g, '⋅').replace(/\\*/g, '⋅');\r\n              if (element[1] === \"+\") {\r\n                return [numLeft + numRight, units];\r\n              }\r\n              if (element[1] === \"-\") {\r\n                return [numLeft - numRight, units];\r\n              }\r\n            }, head);\r\n          },\n      peg$c5 = \"*\",\n      peg$c6 = peg$literalExpectation(\"*\", false),\n      peg$c7 = \"/\",\n      peg$c8 = peg$literalExpectation(\"/\", false),\n      peg$c9 = function(head, tail) {\r\n            log(\"In SciGrammar multiply/divide processing, head is \", head, \", tail is \", tail);\r\n            return tail.reduce(function(result, element) {\r\n              log(\"In SciGrammar multiply/divide reduction, result is \", result, \", element is \", element);\r\n              const numLeft = result[0];\r\n              const numRight = element[3][0];\r\n              const unitLeft = result[1];\r\n              const unitRight = element[3][1];\r\n              if (element[1] === \"*\") {\r\n                var units;\r\n                if (unitLeft == UNTYPED) {\r\n                  units = unitRight;\r\n                } else if (unitRight == UNTYPED) {\r\n                  units = unitLeft;\r\n                } else {\r\n                  units = '(' + unitLeft + ')⋅(' + unitRight + ')';\r\n                }\r\n                units = units.replace(/ /g, '⋅').replace(/\\*/g, '⋅');\r\n                return [numLeft * numRight, units];\r\n              }\r\n              if (element[1] === \"/\") {\r\n                var units;\r\n                if (unitRight == UNTYPED) {\r\n                  units = unitLeft;\r\n                } else if (unitLeft == UNTYPED) {\r\n                  units = '(' + unitRight + ')^-1';\r\n                } else {\r\n                  units = '(' + unitLeft + ')/(' + unitRight + ')';\r\n                }\r\n                units = units.replace(/ /g, '⋅').replace(/\\*/g, '⋅');\r\n                return [numLeft / numRight, units];\r\n              }\r\n            }, head);\r\n          },\n      peg$c10 = \"^\",\n      peg$c11 = peg$literalExpectation(\"^\", false),\n      peg$c12 = function(head, tail) {\r\n            log(\"In SciGrammar exponent processing, head is \", head, \", tail is \", tail);\r\n            return tail.reduce(function(result, element) {\r\n              log(\"In SciGrammar exponent reduction, result is \", result, \", element is \", element);\r\n              const numLeft = result[0];\r\n              const numRight = element[3][0];\r\n              const unitLeft = result[1];\r\n              var units = UNTYPED;\r\n              if (unitLeft !== UNTYPED) {\r\n                units = '(' + unitLeft + ')^' + numRight\r\n              }\r\n              return [Math.pow(numLeft, numRight), units];\r\n            }, head);\r\n          },\n      peg$c13 = peg$otherExpectation(\"grouped\"),\n      peg$c14 = \"(\",\n      peg$c15 = peg$literalExpectation(\"(\", false),\n      peg$c16 = \")\",\n      peg$c17 = peg$literalExpectation(\")\", false),\n      peg$c18 = function(expr) {\r\n          log(\"In SciGrammar group processing, expr is \", expr);\r\n          return expr;\r\n        },\n      peg$c19 = peg$otherExpectation(\"unary function\"),\n      peg$c20 = /^[a-z]/,\n      peg$c21 = peg$classExpectation([[\"a\", \"z\"]], false, false),\n      peg$c22 = /^[a-z0-9]/,\n      peg$c23 = peg$classExpectation([[\"a\", \"z\"], [\"0\", \"9\"]], false, false),\n      peg$c24 = function(func, expr, close) {\r\n          log(\"In SciGrammar unary function processing, func is \", func, \", expr is \", expr);\r\n          const funcName = func[0] + func[1].join('');\r\n          const value = expr[0];\r\n\r\n          switch (funcName) {\r\n            case \"sin\":\r\n              return [Math.sin(value), UNTYPED];\r\n            case \"cos\":\r\n              return [Math.cos(value), UNTYPED];\r\n            case \"tan\":\r\n              return [Math.tan(value), UNTYPED];\r\n            case \"abs\":\r\n              return [Math.abs(value), UNTYPED];\r\n            case \"acos\":\r\n              return [Math.acos(value), UNTYPED];\r\n            case \"acosh\":\r\n              return [Math.acosh(value), UNTYPED];\r\n            case \"asin\":\r\n              return [Math.asin(value), UNTYPED];\r\n            case \"asinh\":\r\n              return [Math.asinh(value), UNTYPED];\r\n            case \"atan\":\r\n              return [Math.atan(value), UNTYPED];\r\n            case \"atanh\":\r\n              return [Math.atanh(value), UNTYPED];\r\n            case \"cbrt\":\r\n              return [Math.cbrt(value), UNTYPED];\r\n            case \"ceil\":\r\n              return [Math.ceil(value), UNTYPED];\r\n            case \"clz32\":\r\n              return [Math.clz32(value), UNTYPED];\r\n            case \"cos\":\r\n              return [Math.cos(value), UNTYPED];\r\n            case \"cosh\":\r\n              return [Math.cosh(value), UNTYPED];\r\n            case \"exp\":\r\n              return [Math.exp(value), UNTYPED];\r\n            case \"expm1\":\r\n              return [Math.expm1(value), UNTYPED];\r\n            case \"floor\":\r\n              return [Math.floor(value), UNTYPED];\r\n            case \"fround\":\r\n              return [Math.fround(value), UNTYPED];\r\n            case \"log\":\r\n              return [Math.log(value), UNTYPED];\r\n            case \"log1p\":\r\n              return [Math.log1p(value), UNTYPED];\r\n            case \"log10\":\r\n              return [Math.log10(value), UNTYPED];\r\n            case \"log2\":\r\n              return [Math.log2(value), UNTYPED];\r\n            case \"round\":\r\n              return [Math.round(value), UNTYPED];\r\n            case \"sin\":\r\n              return [Math.sin(value), UNTYPED];\r\n            case \"sinh\":\r\n              return [Math.sinh(value), UNTYPED];\r\n            case \"sqrt\":\r\n              return [Math.sqrt(value), UNTYPED];\r\n            case \"tan\":\r\n              return [Math.tan(value), UNTYPED];\r\n            case \"tanh\":\r\n              return [Math.tanh(value), UNTYPED];\r\n            case \"trunc\":\r\n              return [Math.trunc(value), UNTYPED];\r\n            default:\r\n              expected(\"unrecognized unary function '\" + funcName + \"'\");\r\n          }\r\n        },\n      peg$c25 = peg$otherExpectation(\"symbol\"),\n      peg$c26 = /^[a-zA-Z]/,\n      peg$c27 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"]], false, false),\n      peg$c28 = /^[a-zA-Z0-9]/,\n      peg$c29 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"]], false, false),\n      peg$c30 = function(chars) {\r\n          log(\"In SciGrammar symbol processing, chars is \", chars);\r\n          if (window.SCIPARSER_SYMBOLS_MAP == undefined) {\r\n            expected(\"predefined symbol\");\r\n          } else {\r\n            const symbolName = chars[0] + chars[1].join('');\r\n\r\n            if (window.SCIPARSER_SYMBOLS_MAP.has(symbolName)) {\r\n              const constValue = window.SCIPARSER_SYMBOLS_MAP.get(symbolName)\r\n              log(\"Found symbol \" + symbolName + \" with value \", constValue);\r\n              return constValue;\r\n            }\r\n            log(\"In SciGrammar symbol processing, failed to find symbol \" + symbolName);\r\n            expected(\"predefined symbol\");\r\n          }\r\n        },\n      peg$c31 = peg$otherExpectation(\"typed number\"),\n      peg$c32 = /^[ \\t\\n\\r]/,\n      peg$c33 = peg$classExpectation([\" \", \"\\t\", \"\\n\", \"\\r\"], false, false),\n      peg$c34 = function(num, units) {\r\n          log(\"In SciGrammar TypedNumber, \", text());\r\n          return [num, units];\r\n        },\n      peg$c35 = peg$otherExpectation(\"units\"),\n      peg$c36 = /^[*\\u22C5\\/]/,\n      peg$c37 = peg$classExpectation([\"*\", \"\\u22C5\", \"/\"], false, false),\n      peg$c38 = function(head, tail) {\r\n          log(\"In SciGrammar Units, \", text());\r\n          return text();\r\n        },\n      peg$c39 = peg$otherExpectation(\"ungrouped units\"),\n      peg$c40 = function(head, tail) {\r\n          log(\"In SciGrammar UngroupedUnits, \", text());\r\n          return text();\r\n        },\n      peg$c41 = peg$otherExpectation(\"grouped units\"),\n      peg$c42 = /^[\\S\\s]/,\n      peg$c43 = peg$classExpectation([], true, false),\n      peg$c44 = /^[+\\-]/,\n      peg$c45 = peg$classExpectation([\"+\", \"-\"], false, false),\n      peg$c46 = /^[0-9]/,\n      peg$c47 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c48 = function() {\r\n          log(\"In SciGrammar GroupedUnits, \", text());\r\n          return text();\r\n        },\n      peg$c49 = peg$otherExpectation(\"unit\"),\n      peg$c50 = function(unit) {\r\n          log(\"In SciGrammar Unit, \", text());\r\n          return text();\r\n        },\n      peg$c51 = peg$otherExpectation(\"untyped number\"),\n      peg$c52 = function(num) {\r\n          log(\"In SciGrammar UntypedNumber processing, num is \", num);\r\n          return [num, UNTYPED];\r\n        },\n      peg$c53 = peg$otherExpectation(\"number\"),\n      peg$c54 = peg$otherExpectation(\"integer\"),\n      peg$c55 = /^[\\-+]/,\n      peg$c56 = peg$classExpectation([\"-\", \"+\"], false, false),\n      peg$c57 = function() {\r\n          log(\"In SciGrammar Integer processing, text is \", text());\r\n          return parseInt(text(), 10);\r\n        },\n      peg$c58 = peg$otherExpectation(\"float\"),\n      peg$c59 = \".\",\n      peg$c60 = peg$literalExpectation(\".\", false),\n      peg$c61 = function() {\r\n          log(\"In SciGrammar Float processing, text is \", text());\r\n          return parseFloat(text(), 10);\r\n        },\n      peg$c62 = peg$otherExpectation(\"scientific notation\"),\n      peg$c63 = \"e\",\n      peg$c64 = peg$literalExpectation(\"e\", false),\n      peg$c65 = function() {\r\n          log(\"In SciGrammar Sci processing, text is \", text());\r\n          const m = /([-+]?[0-9]+(.[0-9]+)?)[eE]([-+]?[0-9]+)/.exec(text());\r\n          return parseFloat(m[1], 10) * Math.pow(10, parseInt(m[3]));\r\n         },\n      peg$c66 = peg$otherExpectation(\"whitespace\"),\n      peg$c67 = /^[ \\t]/,\n      peg$c68 = peg$classExpectation([\" \", \"\\t\"], false, false),\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parseExpression() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseTerm();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parsews();\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 43) {\n          s5 = peg$c0;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c1); }\n        }\n        if (s5 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 45) {\n            s5 = peg$c2;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c3); }\n          }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsews();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseTerm();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parsews();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 43) {\n            s5 = peg$c0;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c1); }\n          }\n          if (s5 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 45) {\n              s5 = peg$c2;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c3); }\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsews();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseTerm();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c4(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTerm() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseExponent();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parsews();\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 42) {\n          s5 = peg$c5;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c6); }\n        }\n        if (s5 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 47) {\n            s5 = peg$c7;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c8); }\n          }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsews();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseExponent();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parsews();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 42) {\n            s5 = peg$c5;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c6); }\n          }\n          if (s5 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 47) {\n              s5 = peg$c7;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c8); }\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsews();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseExponent();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c9(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExponent() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseFactor();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parsews();\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 94) {\n          s5 = peg$c10;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c11); }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsews();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseFactor();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parsews();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 94) {\n            s5 = peg$c10;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c11); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsews();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseFactor();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c12(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseFactor() {\n    var s0;\n\n    s0 = peg$parseGrouped();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseTypedNumber();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseUnaryFunc();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseUntypedNumber();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseSymbol();\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseGrouped() {\n    var s0, s1, s2, s3, s4, s5;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c14;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c15); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseExpression();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsews();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s5 = peg$c16;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c17); }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c18(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c13); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnaryFunc() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (peg$c20.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c21); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = [];\n      if (peg$c22.test(input.charAt(peg$currPos))) {\n        s4 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c23); }\n      }\n      if (s4 !== peg$FAILED) {\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          if (peg$c22.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c23); }\n          }\n        }\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s3 = peg$c14;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c15); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsews();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseExpression();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$currPos;\n              s7 = peg$parsews();\n              if (s7 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s8 = peg$c16;\n                  peg$currPos++;\n                } else {\n                  s8 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c17); }\n                }\n                if (s8 !== peg$FAILED) {\n                  s7 = [s7, s8];\n                  s6 = s7;\n                } else {\n                  peg$currPos = s6;\n                  s6 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s6;\n                s6 = peg$FAILED;\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c24(s1, s5, s6);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c19); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseSymbol() {\n    var s0, s1, s2, s3, s4, s5;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      if (peg$c26.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c27); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        if (peg$c28.test(input.charAt(peg$currPos))) {\n          s5 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c29); }\n        }\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          if (peg$c28.test(input.charAt(peg$currPos))) {\n            s5 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c29); }\n          }\n        }\n        if (s4 !== peg$FAILED) {\n          s3 = [s3, s4];\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c30(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c25); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseTypedNumber() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseNumber();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c32.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c33); }\n      }\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c32.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c33); }\n          }\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseUnits();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c34(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c31); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnits() {\n    var s0, s1, s2, s3, s4, s5;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseUngroupedUnits();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseGroupedUnits();\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      if (peg$c36.test(input.charAt(peg$currPos))) {\n        s4 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c37); }\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseUngroupedUnits();\n        if (s5 === peg$FAILED) {\n          s5 = peg$parseGroupedUnits();\n        }\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        if (peg$c36.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c37); }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseUngroupedUnits();\n          if (s5 === peg$FAILED) {\n            s5 = peg$parseGroupedUnits();\n          }\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c38(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c35); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUngroupedUnits() {\n    var s0, s1, s2, s3, s4, s5;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseUnit();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      if (peg$c36.test(input.charAt(peg$currPos))) {\n        s4 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c37); }\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseUnit();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        if (peg$c36.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c37); }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseUnit();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c40(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c39); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseGroupedUnits() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c14;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c15); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseUnits();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsews();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s5 = peg$c16;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c17); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$currPos;\n              if (peg$c42.test(input.charAt(peg$currPos))) {\n                s7 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c43); }\n              }\n              if (s7 !== peg$FAILED) {\n                if (peg$c44.test(input.charAt(peg$currPos))) {\n                  s8 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s8 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c45); }\n                }\n                if (s8 === peg$FAILED) {\n                  s8 = null;\n                }\n                if (s8 !== peg$FAILED) {\n                  s9 = [];\n                  if (peg$c46.test(input.charAt(peg$currPos))) {\n                    s10 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s10 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c47); }\n                  }\n                  if (s10 !== peg$FAILED) {\n                    while (s10 !== peg$FAILED) {\n                      s9.push(s10);\n                      if (peg$c46.test(input.charAt(peg$currPos))) {\n                        s10 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                      } else {\n                        s10 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c47); }\n                      }\n                    }\n                  } else {\n                    s9 = peg$FAILED;\n                  }\n                  if (s9 !== peg$FAILED) {\n                    s7 = [s7, s8, s9];\n                    s6 = s7;\n                  } else {\n                    peg$currPos = s6;\n                    s6 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s6;\n                  s6 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s6;\n                s6 = peg$FAILED;\n              }\n              if (s6 === peg$FAILED) {\n                s6 = null;\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c48();\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c41); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnit() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = [];\n    if (peg$c26.test(input.charAt(peg$currPos))) {\n      s3 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s3 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c27); }\n    }\n    if (s3 !== peg$FAILED) {\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$c26.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c27); }\n        }\n      }\n    } else {\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$currPos;\n      if (peg$c42.test(input.charAt(peg$currPos))) {\n        s4 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c43); }\n      }\n      if (s4 !== peg$FAILED) {\n        if (peg$c44.test(input.charAt(peg$currPos))) {\n          s5 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c45); }\n        }\n        if (s5 === peg$FAILED) {\n          s5 = null;\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = [];\n          if (peg$c46.test(input.charAt(peg$currPos))) {\n            s7 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c47); }\n          }\n          if (s7 !== peg$FAILED) {\n            while (s7 !== peg$FAILED) {\n              s6.push(s7);\n              if (peg$c46.test(input.charAt(peg$currPos))) {\n                s7 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c47); }\n              }\n            }\n          } else {\n            s6 = peg$FAILED;\n          }\n          if (s6 !== peg$FAILED) {\n            s4 = [s4, s5, s6];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c50(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c49); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUntypedNumber() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseNumber();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c52(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c51); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseNumber() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = peg$parseSci();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseFloat();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseInteger();\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c53); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseInteger() {\n    var s0, s1, s2, s3, s4;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    if (s1 !== peg$FAILED) {\n      if (peg$c55.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c56); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (peg$c46.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c47); }\n        }\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            if (peg$c46.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c47); }\n            }\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c57();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c54); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseFloat() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    if (s1 !== peg$FAILED) {\n      if (peg$c55.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c56); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (peg$c46.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c47); }\n        }\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            if (peg$c46.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c47); }\n            }\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s4 = peg$c59;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c60); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            if (peg$c46.test(input.charAt(peg$currPos))) {\n              s6 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c47); }\n            }\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              if (peg$c46.test(input.charAt(peg$currPos))) {\n                s6 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c47); }\n              }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c61();\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c58); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseSci() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    if (s1 !== peg$FAILED) {\n      if (peg$c55.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c56); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (peg$c46.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c47); }\n        }\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            if (peg$c46.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c47); }\n            }\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s5 = peg$c59;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c60); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = [];\n            if (peg$c46.test(input.charAt(peg$currPos))) {\n              s7 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c47); }\n            }\n            while (s7 !== peg$FAILED) {\n              s6.push(s7);\n              if (peg$c46.test(input.charAt(peg$currPos))) {\n                s7 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c47); }\n              }\n            }\n            if (s6 !== peg$FAILED) {\n              s5 = [s5, s6];\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 101) {\n              s5 = peg$c63;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c64); }\n            }\n            if (s5 !== peg$FAILED) {\n              if (peg$c55.test(input.charAt(peg$currPos))) {\n                s6 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c56); }\n              }\n              if (s6 === peg$FAILED) {\n                s6 = null;\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = [];\n                if (peg$c46.test(input.charAt(peg$currPos))) {\n                  s8 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s8 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c47); }\n                }\n                if (s8 !== peg$FAILED) {\n                  while (s8 !== peg$FAILED) {\n                    s7.push(s8);\n                    if (peg$c46.test(input.charAt(peg$currPos))) {\n                      s8 = input.charAt(peg$currPos);\n                      peg$currPos++;\n                    } else {\n                      s8 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c47); }\n                    }\n                  }\n                } else {\n                  s7 = peg$FAILED;\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c65();\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c62); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsews() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    if (peg$c67.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c68); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c67.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c68); }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c66); }\n    }\n\n    return s0;\n  }\n\n\r\n    const UNTYPED = \"untyped\";\r\n\r\n    function log() {\r\n      //console.log(...arguments);\r\n    }\r\n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n","/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { Term: peg$parseTerm },\n      peg$startRuleFunction  = peg$parseTerm,\n\n      peg$c0 = \"*\",\n      peg$c1 = peg$literalExpectation(\"*\", false),\n      peg$c2 = \" \",\n      peg$c3 = peg$literalExpectation(\" \", false),\n      peg$c4 = \"\\u22C5\",\n      peg$c5 = peg$literalExpectation(\"\\u22C5\", false),\n      peg$c6 = \"/\",\n      peg$c7 = peg$literalExpectation(\"/\", false),\n      peg$c8 = function(head, tail) {\r\n            log(\"In UnitsGrammar multiply/divide processing, head is \", head, \", tail is \", tail);\r\n            return tail.reduce(function(result, element) {\r\n              log(\"In UnitsGrammar multiply/divide processing, result is \", result, \", element is \", element);\r\n              const operator = element[0];\r\n              const leftUnits = result;\r\n              const rightUnits = element[2];\r\n              log(\"In UnitsGrammar multiply/divide processing, operator is \", operator, \", leftUnits is \", leftUnits, \", rightUnits is \", rightUnits);\r\n              if (operator === \"*\" || operator === \" \" || operator === \"⋅\") {\r\n                log(\"In UnitsGrammar multiply/divide, multiplying\");\r\n                const concatted = leftUnits.concat(rightUnits);\r\n                log(\"In UnitsGrammar multiply/divide, returning reduction of \", concatted);\r\n                const retval = reduceUnits(concatted);\r\n                log(\"In UnitsGrammar multiply/divide processing, returning \", retval);\r\n                return retval;\r\n              } else {\r\n                // division\r\n                for (let i = 0; i < rightUnits.length; i++) {\r\n                  const rightUnit = rightUnits[i];\r\n                  rightUnit.exponent = -1 * rightUnit.exponent;\r\n                }\r\n                log(\"In UnitsGrammar multiply/divide processing, concatenating \", leftUnits, \" with \", rightUnits);\r\n                const concatenated = leftUnits.concat(rightUnits);\r\n                log(\"In UnitsGrammar multiply/divide processing, concatenated is \", concatenated);\r\n                const retval = reduceUnits(concatenated);\r\n                log(\"In UnitsGrammar multiply/divide processing, returning \", retval);\r\n                return reduceUnits(retval);\r\n              }\r\n            }, head);\r\n          },\n      peg$c9 = \"^\",\n      peg$c10 = peg$literalExpectation(\"^\", false),\n      peg$c11 = function(head, tail) {\r\n            log(\"In UnitsGrammar exponent processing, head is \", head, \", tail is \", tail);\r\n            return tail.reduce(function(result, element) {\r\n              log(\"In UnitsGrammar exponent processing, result is \", result, \", element is \", element, \", type: \", typeof(element[3]));\r\n              const power = element[3];\r\n              for (let i = 0; i < result.length; i++) {\r\n                const resultItem = result[i];\r\n                resultItem.exponent = resultItem.exponent * power;\r\n              }\r\n              log(\"In UnitsGrammar exponent processing, returning \", result);\r\n              return result;\r\n            }, head);\r\n          },\n      peg$c12 = \"1/\",\n      peg$c13 = peg$literalExpectation(\"1/\", false),\n      peg$c14 = function(groupedOrUnits) {\r\n          for (var i = 0; i < groupedOrUnits.length; i++) {\r\n            const groupOrUnit = groupedOrUnits[i];\r\n            groupOrUnit.exponent = -1 * groupOrUnit.exponent;\r\n          }\r\n          return groupedOrUnits;\r\n        },\n      peg$c15 = peg$otherExpectation(\"grouped\"),\n      peg$c16 = \"(\",\n      peg$c17 = peg$literalExpectation(\"(\", false),\n      peg$c18 = \")\",\n      peg$c19 = peg$literalExpectation(\")\", false),\n      peg$c20 = function(expr) {\r\n          log(\"In UnitsGrammar group processing, expr is \", expr);\r\n          return expr;\r\n        },\n      peg$c21 = peg$otherExpectation(\"units\"),\n      peg$c22 = /^[a-zA-Z]/,\n      peg$c23 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"]], false, false),\n      peg$c24 = function(units) {\r\n          log(\"In UnitsGrammar Units processing, text: \", text());\r\n          //const joinedUnits = units[0] + units[1].join('');\r\n          //log(\"In UnitsGrammar Units, joinedUnits: \", joinedUnits);\r\n          const ret = [{units: text(), exponent: 1}];\r\n          log(\"In UnitsGrammar Units processing, returning: \", ret);\r\n          return ret;\r\n        },\n      peg$c25 = peg$otherExpectation(\"integer\"),\n      peg$c26 = /^[\\-+]/,\n      peg$c27 = peg$classExpectation([\"-\", \"+\"], false, false),\n      peg$c28 = /^[0-9]/,\n      peg$c29 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c30 = function() {\r\n          log(\"In UnitsGrammar Integer processing, text is \", text());\r\n          return parseInt(text(), 10);\r\n        },\n      peg$c31 = peg$otherExpectation(\"whitespace\"),\n      peg$c32 = /^[ \\t]/,\n      peg$c33 = peg$classExpectation([\" \", \"\\t\"], false, false),\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parseTerm() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    s1 = peg$parseExponent();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 42) {\n        s4 = peg$c0;\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c1); }\n      }\n      if (s4 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 32) {\n          s4 = peg$c2;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c3); }\n        }\n        if (s4 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 8901) {\n            s4 = peg$c4;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c5); }\n          }\n          if (s4 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 47) {\n              s4 = peg$c6;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c7); }\n            }\n          }\n        }\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parsews();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parseExponent();\n          if (s6 !== peg$FAILED) {\n            s4 = [s4, s5, s6];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 42) {\n          s4 = peg$c0;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c1); }\n        }\n        if (s4 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 32) {\n            s4 = peg$c2;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c3); }\n          }\n          if (s4 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 8901) {\n              s4 = peg$c4;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c5); }\n            }\n            if (s4 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 47) {\n                s4 = peg$c6;\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c7); }\n              }\n            }\n          }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsews();\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parseExponent();\n            if (s6 !== peg$FAILED) {\n              s4 = [s4, s5, s6];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c8(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExponent() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseFactor();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parsews();\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 94) {\n          s5 = peg$c9;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c10); }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsews();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseInteger();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parsews();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 94) {\n            s5 = peg$c9;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c10); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsews();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseInteger();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c11(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseFactor() {\n    var s0;\n\n    s0 = peg$parseGrouped();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseUnits();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseReciprocal();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseReciprocal() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c12) {\n      s1 = peg$c12;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c13); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseGrouped();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parseUnits();\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c14(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseGrouped() {\n    var s0, s1, s2, s3, s4, s5;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c16;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c17); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseTerm();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsews();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s5 = peg$c18;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c19); }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c20(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c15); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnits() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c22.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c23); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c22.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c23); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c24(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c21); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseInteger() {\n    var s0, s1, s2, s3, s4;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    if (s1 !== peg$FAILED) {\n      if (peg$c26.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c27); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (peg$c28.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c29); }\n        }\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            if (peg$c28.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c29); }\n            }\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c30();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c25); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsews() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    if (peg$c32.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c33); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c32.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c33); }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c31); }\n    }\n\n    return s0;\n  }\n\n\r\n    function log() {\r\n      // This is for development/testing.  For prod, comment this line out.\r\n      //console.log(...arguments);\r\n    }\r\n\r\n    function reduceUnits(unitsArray) {\r\n      // We accept an array with units and powers, like [{units: 'm', exponent: 2}, {units: 's', exponent: 1}, {units: 'm', exponent: 2}].\r\n      // We combine any redundant units, to return something like [{units: 'm', exponent: 4}, {units: 's', exponent: 1}].\r\n      log(\"In reduceUnits, unitsArray is \", unitsArray);\r\n      const combined = new Map();\r\n\r\n      // Find duplicate units, combine them\r\n      for (let i = 0; i < unitsArray.length; ++i) {\r\n        const unit = unitsArray[i];\r\n        log(\"In reduceUnits, unit is \", unit);\r\n        if (combined.has(unit.units)) {\r\n          combined.set(unit.units, combined.get(unit.units) + unit.exponent);\r\n        } else {\r\n          combined.set(unit.units, unit.exponent);\r\n        }\r\n      }\r\n      const res = Array.from(combined, function (item) {\r\n        const exponent = item[1];\r\n        if (exponent !== 0) {\r\n          return { units: item[0], exponent: exponent };\r\n        } else {\r\n          return null;\r\n        }\r\n      }).filter(Boolean);\r\n\r\n      res.sort(function(x, y) {\r\n        if (x.exponent !== y.exponent) {\r\n          return y.exponent - x.exponent;\r\n        }\r\n        return x.units.localeCompare(y.units)\r\n      });\r\n      log(\"In reduceUnits, returning \", res);\r\n\r\n      return res;\r\n    }\r\n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n","import React from 'react';\r\nimport './FormulaInput.css';\r\n\r\nclass FormulaInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      onChange: props.onChange\r\n    };\r\n\r\n    this.resultsRef= React.createRef();\r\n    this.formulaRef= React.createRef();\r\n  }\r\n\r\n  onTextChange(event) {\r\n    this.state.onChange(event.target.value);\r\n  }\r\n\r\n  onScrollChange() {\r\n    this.resultsRef.current.scrollTop = this.formulaRef.current.scrollTop;\r\n  }\r\n\r\n  componentDidMount() {\r\n    // const formulaInput = this;\r\n    const resultsRef = this.resultsRef;\r\n    // Observe resize events on the input textarea, and resize the output\r\n    // textarea to match.\r\n    // Test env doesn't have a ResizeObserver :(\r\n    if (typeof(ResizeObserver) !== 'undefined') {\r\n      const resizeOb = new ResizeObserver(function(entries) {\r\n        // We're observing one element, but entries is an array- grab the first\r\n        // item\r\n        resultsRef.current.style.height = entries[0].contentRect.height + 'px';\r\n      });\r\n\r\n      // start observing for resize of the formula input\r\n      resizeOb.observe(this.formulaRef.current);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let results = [];\r\n    for (let i = 0; i < this.props.results.length; i++) {\r\n      results.push(this.props.results[i][0] + ' ' + this.props.results[i][1]);\r\n    }\r\n    let countsText = results.join('\\n');\r\n\r\n    return (\r\n        <div className=\"InputAndResults\" data-testid=\"formula-input\">\r\n          <textarea\r\n            value={this.props.formula}\r\n            onChange={e => this.onTextChange(e)}\r\n            onScroll={e => this.onScrollChange(e)}\r\n            className=\"FormulaInput\"\r\n            placeholder=\"Enter formula here, e.g.&#10;mass = 3 kg&#10;velocity = 4 m/s&#10;jouleConv = 1 (kg*(m/s)^2)/joule&#10;energy = 1/2 * mass * velocity^2 / jouleConv\"\r\n            rows=\"10\"\r\n            nowrap=\"nowrap\"\r\n            autoComplete=\"off\"\r\n            autoCorrect=\"off\"\r\n            autoCapitalize=\"off\"\r\n            spellCheck=\"false\"\r\n            wrap=\"off\"\r\n            data-testid=\"formula-text-area\"\r\n            ref={this.formulaRef} />\r\n          <textarea\r\n            value={countsText}\r\n            className=\"Results\"\r\n            rows=\"10\"\r\n            wrap=\"off\"\r\n            readOnly\r\n            ref={this.resultsRef} />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormulaInput;","import React from 'react';\r\nimport './ResultsDisplay.css';\r\n\r\nclass ResultsDisplay extends React.Component {\r\n  render() {\r\n    const results = this.props.results;\r\n\r\n    let result = null;\r\n    // Display the last result- either a calculated value or\r\n    // an error.  Do not display blank lines, comments, etc.\r\n    for (let i = results.length - 1; i >= 0; i--) {\r\n      if (typeof(results[i][0]) =='number' || results[i][2] !== null) {\r\n        result = results[i];\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (result === null) {\r\n      return (<span />);\r\n    }\r\n\r\n    let valueClass = 'value';\r\n    if (result[2] !== null) {\r\n      // There is an error\r\n      valueClass = 'error';\r\n    }\r\n    return (\r\n      <div id='results' data-testid='results-display-area'>\r\n        <span className={valueClass}>{result[0]} {result[1]}</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResultsDisplay;","import { parse as UnitsParse } from './UnitsGrammar'\r\n\r\nclass TypeSimplifier {\r\n  static simplify(text) {\r\n    const parsed = UnitsParse(text);\r\n    let numerator = [];\r\n    let denominator = [];\r\n    let inNumerator = true;\r\n    for (let i = 0; i < parsed.length; ++i) {\r\n      let parsedItem = parsed[i];\r\n\r\n      if (parsedItem.exponent < 0 && inNumerator && i === 0) {\r\n        numerator = ['1'];\r\n      }\r\n\r\n      if (parsedItem.exponent < 0 && inNumerator) {\r\n        inNumerator = false;\r\n      }\r\n\r\n      let destination = numerator;\r\n      if (!inNumerator) {\r\n        destination = denominator;\r\n      }\r\n\r\n      const absoluteExponent = Math.abs(parsedItem.exponent);\r\n      if (1 === absoluteExponent) {\r\n        destination.push(parsedItem.units);\r\n      } else {\r\n        destination.push(parsedItem.units + '^' + absoluteExponent);\r\n      }\r\n    }\r\n\r\n    let retval;\r\n    if (inNumerator) {\r\n      retval = numerator.join('⋅');\r\n    } else {\r\n      let numeratorStr = numerator.join('⋅');\r\n      if (1 < numerator.length) {\r\n        numeratorStr = '(' + numeratorStr + ')';\r\n      }\r\n      let denominatorStr = denominator.join('⋅');\r\n      if (1 < denominator.length) {\r\n        denominatorStr = '(' + denominatorStr + ')';\r\n      }\r\n      retval = numeratorStr + '/' + denominatorStr;\r\n    }\r\n    \r\n    return retval;\r\n  }\r\n}\r\n\r\nexport default TypeSimplifier\r\n","import { parse as SciParse } from './SciGrammar'\r\nimport TypeSimplifier from './TypeSimplifier'\r\n\r\n// A global used in SciGrammar.pegjs.  We can't pass in\r\n// arguments, but we share a global environment.\r\n// We can also dynamically modify this map, e.g.\r\n// by adding new constants at runtime.\r\nconst SCIPARSER_CONSTANTS = [\r\n  [\"Pi\", [Math.PI, \"untyped\"], \"Pi\"],\r\n  [\"E\", [Math.E, \"untyped\"], \"Euler's Constant\"],\r\n  [\"c\", [2.99792e8, \"m/s\"], \"Speed of Light\"],\r\n  [\"e\", [1.60218e-19, \"C\"], \"Elementary Charge\"],\r\n  [\"Me\", [9.10938e-31, \"kg\"], \"Electron Mass\"],\r\n  [\"Mp\", [1.67262e-27, \"kg\"], \"Proton Mass\"],\r\n  [\"Mn\", [1.67493e-27, \"kg\"], \"Neutron Mass\"],\r\n  [\"h\", [6.62607e-34, \"J⋅s\"], \"Planck's Constant\"],\r\n  [\"Na\", [6.02214e23, \"1/mol\"], \"Avogadro's Number\"],\r\n  [\"R\", [8.31446, \"J/(K⋅mol)\"], \"Gas Constant\"],\r\n  [\"kB\", [1.38065e-23, \"J/K\"], \"Boltzmann's Constant\"],\r\n  [\"a0\", [5.29177e-11, \"m\"], \"Bohr Radius\"],\r\n  [\"e0\", [8.85419e-12, \"C^2/(J⋅m)\"], \"Vacuum Permittivity\"],\r\n  [\"Rh\", [13.6057, \"eV\"], \"Rydberg Constant\"],\r\n  [\"amu\", [1.66054e-27, \"kg/amu\"], \"Atomic Mass\"],\r\n  [\"eV\", [1.60218e-19, \"J/eV\"], \"Electron Volt\"],\r\n  [\"D\", [3.336e-30, \"C⋅m/D\"], \"Debye\"]\r\n];\r\n\r\nconst SETTER_LINE_REGEXP = /([a-zA-Z][a-zA-Z0-9]*) *= *(.*)/;\r\n\r\nclass Calculator {\r\n  static calculate(text) {\r\n    // Copy the constant set of constants into a map that we\r\n    // may modify. We do NOT want to modify the original.\r\n    // We're setting it on \"window\" so that the parser\r\n    // code can read it.\r\n    window.SCIPARSER_SYMBOLS_MAP = new Map(SCIPARSER_CONSTANTS);\r\n    window.SCIPARSER_UNITS_MATCHER = Calculator.unitsMatch;\r\n    const variables = [];\r\n    let result = [];\r\n    const lines = text.split('\\n');\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const line = lines[i].trim();\r\n      if (line === '') {\r\n        result.push(['', '', null]);\r\n      } else if (line.startsWith('//')) {\r\n        result.push([line, '', null]);\r\n      } else {\r\n        try {\r\n          const setterMatch = SETTER_LINE_REGEXP.exec(line);\r\n          let parsedLine = [];\r\n          if (setterMatch) {\r\n            // We found a line that's a \"setter\"\r\n            parsedLine = SciParse(setterMatch[2]);\r\n            // Copy the value of the line to the global set of symbols,\r\n            // overwriting any existing value.\r\n            // Also keep an array of ONLY the updated symbols, to display\r\n            // to users.\r\n            const variableName = setterMatch[1];\r\n            window.SCIPARSER_SYMBOLS_MAP.set(variableName, parsedLine);\r\n            const variable = [variableName, parsedLine];\r\n            // If we've seen this variable before, replace the value\r\n            const matchesVariable = (element) => element[0] === variableName;\r\n            const idx = variables.findIndex(matchesVariable);\r\n            if (-1 === idx) {\r\n              // Variable not seen, record it\r\n              variables.push(variable);\r\n            } else {\r\n              // Variable previously seen, replace it\r\n              variables[idx] = variable;\r\n            }\r\n          } else {\r\n            parsedLine = SciParse(line);\r\n          }\r\n\r\n          parsedLine[1] = TypeSimplifier.simplify(parsedLine[1]);\r\n          parsedLine[2] = null;\r\n          result.push(parsedLine);\r\n        } catch (error) {\r\n          var errorMessage = error.message;\r\n          if (error.location && error.location.start && error.location.start.column) {\r\n            errorMessage = errorMessage + ' (column ' + error.location.start.column + ')';\r\n          }\r\n          result.push([errorMessage, '', error]);\r\n        }\r\n      }\r\n    }\r\n    return [result, variables];\r\n  }\r\n\r\n  static unitsMatch(left, right) {\r\n    const leftUnits = TypeSimplifier.simplify(left);\r\n    const rightUnits = TypeSimplifier.simplify(right);\r\n    return ([leftUnits === rightUnits, leftUnits, rightUnits]);\r\n  }\r\n}\r\n\r\nexport default Calculator\r\nexport {SCIPARSER_CONSTANTS}\r\n","import React from 'react';\r\nimport './ConstantsDisplay.css';\r\nimport {SCIPARSER_CONSTANTS} from './Calculator';\r\n\r\nclass ConstantDisplay extends React.Component {\r\n  render() {\r\n    return (\r\n        <tr className=\"Constant\">\r\n          <td>{this.props.symbol}</td><td>{this.props.value}</td><td>{this.props.units}</td><td>{this.props.name}</td>\r\n        </tr>\r\n    );\r\n  }\r\n}\r\n\r\nclass ConstantsDisplay extends React.Component {\r\n  render() {\r\n    const constants = [];\r\n    for (let i = 0; i < SCIPARSER_CONSTANTS.length; i++) {\r\n      const constantInfo = SCIPARSER_CONSTANTS[i];\r\n      const constantSymbol = constantInfo[0];\r\n      const constantValue = constantInfo[1][0];\r\n      const constantUnits = constantInfo[1][1];\r\n      const constantName = constantInfo[2];\r\n      constants.push(<ConstantDisplay symbol={constantSymbol} value={constantValue} units={constantUnits} name={constantName} key={constantSymbol}/>);\r\n    }\r\n\r\n    return (\r\n      <span id='constants'>\r\n        <h1>Constants</h1>\r\n        <table data-testid=\"constants-display-area\">\r\n          <thead><tr>\r\n            <th>constant</th><th>value</th><th>units</th><th>description</th>\r\n          </tr></thead>\r\n          <tbody>\r\n            {constants}\r\n          </tbody>\r\n        </table>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ConstantsDisplay;","import React from 'react';\r\nimport './VariablesDisplay.css';\r\n\r\nclass VariableDisplay extends React.Component {\r\n  render() {\r\n    return (\r\n        <tr className=\"Variable\">\r\n          <td>{this.props.symbol}</td><td>{this.props.value}</td><td>{this.props.units}</td>\r\n        </tr>\r\n    );\r\n  }\r\n}\r\n\r\nclass VariablesDisplay extends React.Component {\r\n  render() {\r\n    const variables = this.props.variables;\r\n\r\n    if (0 === variables.length) {\r\n      return (<span />);\r\n    }\r\n\r\n    const variableDisplays = [];\r\n    for (let i = 0; i < variables.length; i++) {\r\n      const variable = variables[i];\r\n      const variableKey = variable[0];\r\n      const variableInfo = variable[1];\r\n      const variableValue = variableInfo[0];\r\n      const variableUnits = variableInfo[1];\r\n      variableDisplays.push(<VariableDisplay symbol={variableKey} value={variableValue} units={variableUnits} key={variableKey}/>);\r\n    }\r\n\r\n    return (\r\n      <span id='variables'>\r\n        <h1>Variables</h1>\r\n        <table data-testid=\"variables-display-area\">\r\n          <thead><tr>\r\n            <th>name</th><th>value</th><th>units</th>\r\n          </tr></thead>\r\n          <tbody>\r\n            {variableDisplays}\r\n          </tbody>\r\n        </table>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VariablesDisplay;","import React from 'react';\r\nimport './Footer.css';\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <div id='footer' data-testid='footer-display-area'>\r\n        <a href='https://github.com/smedberg/sci-calc'>Source</a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport FormulaInput from './FormulaInput';\r\nimport ResultsDisplay from './ResultsDisplay';\r\nimport ConstantsDisplay from './ConstantsDisplay';\r\nimport VariablesDisplay from './VariablesDisplay';\r\nimport Footer from './Footer';\r\nimport Calculator from './Calculator';\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    // If there was a formula in the hash when we were instantiated, use it.\r\n    // This supports sharing of formula via sharing URL.\r\n    const formulaFromHash = decodeURIComponent((new URL(document.URL).hash).substring(1));\r\n    this.state = {\r\n      formula: formulaFromHash || ''\r\n    };\r\n\r\n    this.onHashChange = this.onHashChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('hashchange', this.onHashChange);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('hashchange', this.onHashChange, false);\r\n  }\r\n\r\n  onHashChange() {\r\n    const changedFormula = decodeURIComponent((new URL(document.URL).hash).substring(1));\r\n    this.setState({formula: changedFormula })\r\n  }\r\n\r\n  render() {\r\n    let results = [];\r\n    let variables = [];\r\n    if (this.state.formula !== '') {\r\n\r\n      // Store the formula into the URL hash, so that it can be shared, etc.\r\n      const url_ob = new URL(document.URL);\r\n      url_ob.hash = '#' + encodeURIComponent(this.state.formula);\r\n      document.location.href = url_ob.href;\r\n\r\n      const calculated = Calculator.calculate(this.state.formula);\r\n      results = calculated[0];\r\n      variables = calculated[1];\r\n    }\r\n    return (\r\n      <span>\r\n        <FormulaInput formula={this.state.formula} results={results} onChange={ changedFormula => { this.setState({formula: changedFormula }) } } />\r\n        <ResultsDisplay results={results} />\r\n        <VariablesDisplay variables={variables} />\r\n        <ConstantsDisplay/>\r\n        <Footer/>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\nroot.render(<App />);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}