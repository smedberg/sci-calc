{"version":3,"sources":["FormulaInput.js","ResultDisplay.js","App.js","reportWebVitals.js","index.js","SciGrammer.js"],"names":["FormulaInput","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","onChange","_this2","react_default","a","createElement","value","body","e","target","className","placeholder","rows","data-testid","React","Component","ResultDisplay","resultText","units","App","formula","parsed","parse","error","console","log","message","src_FormulaInput_0","changedFormula","setState","src_ResultDisplay_0","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","container","document","getElementById","createRoot","render","src_App_0","peg$SyntaxError","expected","found","location","name","Error","captureStackTrace","child","parent","ctor","constructor","prototype","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","class","i","escapedParts","parts","length","Array","classEscape","inverted","any","end","other","description","hex","ch","charCodeAt","toString","toUpperCase","s","replace","j","descriptions","type","sort","slice","join","describeExpected","describeFound","module","exports","SyntaxError","input","options","peg$result","peg$FAILED","peg$startRuleFunctions","Expression","peg$parseExpression","peg$startRuleFunction","peg$c0","peg$c1","peg$literalExpectation","peg$c2","peg$c3","peg$c4","head","tail","reduce","result","element","numLeft","numRight","unitLeft","UNTYPED","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","unitRight","peg$c10","peg$c11","peg$c12","peg$c13","peg$c14","expr","peg$c15","peg$otherExpectation","peg$c16","peg$c17","peg$classExpectation","peg$c18","chars","constName","CONSTANTS","has","constValue","get","peg$computeLocation","peg$savedPos","peg$currPos","peg$buildStructuredError","substring","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","num","joinedUnits","peg$c26","peg$c27","peg$c28","peg$c29","peg$c30","digits","parseInt","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","parseFloat","peg$c36","peg$c37","peg$c38","peg$c39","m","exec","Math","pow","peg$c40","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","ignoreCase","peg$computePosDetails","pos","p","details","startPos","endPos","startPosDetails","endPosDetails","start","offset","peg$fail","push","s0","s1","s2","s3","s4","s5","s6","s7","peg$parseTerm","peg$parse_","peg$parseFactor","peg$parseNumber","test","charAt","peg$parseTypedNumber","peg$parseUntypedNumber","peg$parseConstant","s8","substr","toLowerCase","peg$parseSci","peg$parseFloat","peg$parseInteger","Map"],"mappings":"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","file":"static/js/main.71c67241.chunk.js","sourcesContent":["import React from 'react';\r\nimport './FormulaInput.css';\r\n\r\nclass FormulaInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      onChange: props.onChange\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <textarea\r\n          value={this.state.body}\r\n          onChange={e => this.state.onChange(e.target.value)}\r\n          className=\"FormulaInput\"\r\n          placeholder=\"Enter formula here\"\r\n          rows=\"10\"\r\n          data-testid=\"formula-text-area\">\r\n        </textarea>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormulaInput;","import React from 'react';\r\nimport './ResultDisplay.css';\r\n\r\nclass ResultDisplay extends React.Component {\r\n  render() {\r\n    return (\r\n        <p className=\"Result\" data-testid=\"result-display-area\">\r\n          {this.props.resultText} {this.props.units}\r\n        </p>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResultDisplay;","import React from 'react';\r\nimport './App.css';\r\nimport FormulaInput from './FormulaInput';\r\nimport ResultDisplay from './ResultDisplay';\r\nimport parse from './SciGrammer'\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      formula: ''\r\n    };\r\n  }\r\n\r\n  render() {\r\n    var resultText, units;\r\n    try {\r\n      const parsed = parse.parse(this.state.formula);\r\n      resultText = parsed[0];\r\n      units = parsed[1];\r\n    } catch(error) {\r\n      console.log(error);\r\n      resultText = error.message;\r\n      units = '';\r\n    }\r\n    return (\r\n      <span>\r\n        <FormulaInput onChange={ changedFormula => { this.setState({formula: changedFormula }) } } />\r\n        <ResultDisplay resultText={resultText} units={units} />\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\nroot.render(<App />);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { Expression: peg$parseExpression },\n      peg$startRuleFunction  = peg$parseExpression,\n\n      peg$c0 = \"+\",\n      peg$c1 = peg$literalExpectation(\"+\", false),\n      peg$c2 = \"-\",\n      peg$c3 = peg$literalExpectation(\"-\", false),\n      peg$c4 = function(head, tail) {\r\n            return tail.reduce(function(result, element) {\r\n              const numLeft = result[0];\r\n              const numRight = element[3][0];\r\n              const unitLeft = result[1];\r\n              // TODO: Check if units of result[1] match units of element[3][1]\r\n              console.log(\"Handling addition, assuming that type \", result[1], \" matches type \", element[3][1]);\r\n              var units = unitLeft;\r\n              if (unitLeft == UNTYPED) {\r\n              \tunits = element[3][1];\r\n              }\r\n              if (element[1] === \"+\") {\r\n              \treturn [numLeft + numRight, units];\r\n              }\r\n              if (element[1] === \"-\") {\r\n              \treturn [numLeft - numRight, units];\r\n              }\r\n            }, head);\r\n          },\n      peg$c5 = \"*\",\n      peg$c6 = peg$literalExpectation(\"*\", false),\n      peg$c7 = \"/\",\n      peg$c8 = peg$literalExpectation(\"/\", false),\n      peg$c9 = function(head, tail) {\r\n            return tail.reduce(function(result, element) {\r\n              const numLeft = result[0];\r\n              const numRight = element[3][0];\r\n              const unitLeft = result[1];\r\n              const unitRight = element[3][1];\r\n              if (element[1] === \"*\") {\r\n              \tvar units;\r\n              \tif (unitLeft == UNTYPED) {\r\n                  \tunits = unitRight;\r\n                  } else if (unitRight == UNTYPED) {\r\n                  \tunits = unitLeft;\r\n                  } else {\r\n                  \tunits = unitLeft + '⋅(' + unitRight + ')';\r\n                  }\r\n              \treturn [numLeft * numRight, units];\r\n              }\r\n              if (element[1] === \"/\") {\r\n              \tvar units;\r\n              \tif (unitLeft == UNTYPED) {\r\n                  \tunits = '1/(' + unitRight + ')';\r\n                  } else if (unitRight == UNTYPED) {\r\n                  \tunits = unitLeft;\r\n                  } else {\r\n                  \tunits = '(' + unitLeft + ')/(' + unitRight + ')';\r\n                  }\r\n              \treturn [numLeft / numRight, units];\r\n              }\r\n            }, head);\r\n          },\n      peg$c10 = \"(\",\n      peg$c11 = peg$literalExpectation(\"(\", false),\n      peg$c12 = \")\",\n      peg$c13 = peg$literalExpectation(\")\", false),\n      peg$c14 = function(expr) { return expr; },\n      peg$c15 = peg$otherExpectation(\"constant\"),\n      peg$c16 = /^[A-Za-z]/,\n      peg$c17 = peg$classExpectation([[\"A\", \"Z\"], [\"a\", \"z\"]], false, false),\n      peg$c18 = function(chars) {\r\n        \tconst constName = chars.join('');\r\n        \tconsole.log(\"In Constant, constName: \", constName);\r\n          if (CONSTANTS.has(constName)) {\r\n          \tconst constValue = CONSTANTS.get(constName)\r\n        \t\tconsole.log(\"In Constant, found value: \", constValue);\r\n          \treturn constValue;\r\n          }\r\n          expected(\"predefined constant\");\r\n        },\n      peg$c19 = /^[ \\t\\n\\r]/,\n      peg$c20 = peg$classExpectation([\" \", \"\\t\", \"\\n\", \"\\r\"], false, false),\n      peg$c21 = /^[a-zA-Z]/,\n      peg$c22 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"]], false, false),\n      peg$c23 = /^[a-zA-Z\\/0-9\\-\\^]/,\n      peg$c24 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], \"/\", [\"0\", \"9\"], \"-\", \"^\"], false, false),\n      peg$c25 = function(num, units) {\r\n          const joinedUnits = units[0] + units[1].join('');\r\n        \tconsole.log(\"In TypedNumber, number: \", num, \", units: \", joinedUnits);\r\n          return [num, joinedUnits];\r\n        },\n      peg$c26 = function(num) {\r\n          return [num, UNTYPED];\r\n        },\n      peg$c27 = peg$otherExpectation(\"integer\"),\n      peg$c28 = /^[0-9]/,\n      peg$c29 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c30 = function(digits) { return parseInt(digits, 10); },\n      peg$c31 = peg$otherExpectation(\"float\"),\n      peg$c32 = /^[\\-+]/,\n      peg$c33 = peg$classExpectation([\"-\", \"+\"], false, false),\n      peg$c34 = peg$anyExpectation(),\n      peg$c35 = function() { return parseFloat(text(), 10); },\n      peg$c36 = peg$otherExpectation(\"scientific notation\"),\n      peg$c37 = \"e\",\n      peg$c38 = peg$literalExpectation(\"e\", true),\n      peg$c39 = function() { \r\n        \t//console.log(text());\r\n        \tconst m = /([-+]?[0-9]+(.[0-9]+)?)[eE]([-+]?[0-9]+)/.exec(text());\r\n          //console.log(m[1], m[2], m[3], m);\r\n          return parseFloat(m[1], 10) * Math.pow(10, parseInt(m[3]));\r\n         },\n      peg$c40 = peg$otherExpectation(\"whitespace\"),\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parseExpression() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseTerm();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 43) {\n          s5 = peg$c0;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c1); }\n        }\n        if (s5 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 45) {\n            s5 = peg$c2;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c3); }\n          }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseTerm();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 43) {\n            s5 = peg$c0;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c1); }\n          }\n          if (s5 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 45) {\n              s5 = peg$c2;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c3); }\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseTerm();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c4(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTerm() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseFactor();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 42) {\n          s5 = peg$c5;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c6); }\n        }\n        if (s5 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 47) {\n            s5 = peg$c7;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c8); }\n          }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseFactor();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 42) {\n            s5 = peg$c5;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c6); }\n          }\n          if (s5 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 47) {\n              s5 = peg$c7;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c8); }\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseFactor();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c9(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseFactor() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c10;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c11); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseExpression();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s5 = peg$c12;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c13); }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c14(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseTypedNumber();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseUntypedNumber();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseConstant();\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseConstant() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c16.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c17); }\n      }\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c16.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c17); }\n          }\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c18(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c15); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseTypedNumber() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    s1 = peg$parseNumber();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c19.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c20); }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$c19.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c20); }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        if (peg$c21.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c22); }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = [];\n          if (peg$c23.test(input.charAt(peg$currPos))) {\n            s6 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c24); }\n          }\n          while (s6 !== peg$FAILED) {\n            s5.push(s6);\n            if (peg$c23.test(input.charAt(peg$currPos))) {\n              s6 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c24); }\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c25(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseUntypedNumber() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parseNumber();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c26(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseNumber() {\n    var s0;\n\n    s0 = peg$parseSci();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseFloat();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseInteger();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseInteger() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c28.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c29); }\n      }\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c28.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c29); }\n          }\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c30(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c27); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseFloat() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      if (peg$c32.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c33); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (peg$c28.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c29); }\n        }\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            if (peg$c28.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c29); }\n            }\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$currPos;\n          if (input.length > peg$currPos) {\n            s5 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c34); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = [];\n            if (peg$c28.test(input.charAt(peg$currPos))) {\n              s7 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c29); }\n            }\n            while (s7 !== peg$FAILED) {\n              s6.push(s7);\n              if (peg$c28.test(input.charAt(peg$currPos))) {\n                s7 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c29); }\n              }\n            }\n            if (s6 !== peg$FAILED) {\n              s5 = [s5, s6];\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c35();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c31); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseSci() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      if (peg$c32.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c33); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (peg$c28.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c29); }\n        }\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            if (peg$c28.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c29); }\n            }\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$currPos;\n          if (input.length > peg$currPos) {\n            s5 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c34); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = [];\n            if (peg$c28.test(input.charAt(peg$currPos))) {\n              s7 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c29); }\n            }\n            if (s7 !== peg$FAILED) {\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                if (peg$c28.test(input.charAt(peg$currPos))) {\n                  s7 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c29); }\n                }\n              }\n            } else {\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s5 = [s5, s6];\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.substr(peg$currPos, 1).toLowerCase() === peg$c37) {\n              s5 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c38); }\n            }\n            if (s5 !== peg$FAILED) {\n              if (peg$c32.test(input.charAt(peg$currPos))) {\n                s6 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c33); }\n              }\n              if (s6 === peg$FAILED) {\n                s6 = null;\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = [];\n                if (peg$c28.test(input.charAt(peg$currPos))) {\n                  s8 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s8 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c29); }\n                }\n                if (s8 !== peg$FAILED) {\n                  while (s8 !== peg$FAILED) {\n                    s7.push(s8);\n                    if (peg$c28.test(input.charAt(peg$currPos))) {\n                      s8 = input.charAt(peg$currPos);\n                      peg$currPos++;\n                    } else {\n                      s8 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c29); }\n                    }\n                  }\n                } else {\n                  s7 = peg$FAILED;\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c39();\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c36); }\n    }\n\n    return s0;\n  }\n\n  function peg$parse_() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    if (peg$c19.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c20); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c19.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c20); }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c40); }\n    }\n\n    return s0;\n  }\n\n\r\n  \tconst UNTYPED = \"untyped\";\r\n      var CONSTANTS =  new Map([\r\n      \t[\"C\", [2.99792e8, \"M/S\"]],\r\n          [\"Pi\", [3.14159, UNTYPED]],\r\n          [\"E\", [1.60218e-19, \"C\"]]\r\n      ]);\r\n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n"],"sourceRoot":""}