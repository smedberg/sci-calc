{"version":3,"sources":["SciGrammar.js","FormulaInput.js","ResultsDisplay.js","ConstantsDisplay.js","Calculator.js","App.js","reportWebVitals.js","index.js"],"names":["peg$SyntaxError","message","expected","found","location","this","name","Error","captureStackTrace","child","parent","ctor","constructor","prototype","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","class","i","escapedParts","parts","length","Array","classEscape","inverted","any","end","other","description","hex","ch","charCodeAt","toString","toUpperCase","s","replace","j","descriptions","type","sort","slice","join","describeExpected","describeFound","module","exports","SyntaxError","parse","input","options","peg$result","peg$FAILED","peg$startRuleFunctions","Expression","peg$parseExpression","peg$startRuleFunction","peg$c0","peg$c1","peg$literalExpectation","peg$c2","peg$c3","peg$c4","head","tail","reduce","result","element","numLeft","numRight","unitLeft","console","log","units","UNTYPED","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","unitRight","peg$c10","peg$otherExpectation","peg$c11","peg$c12","peg$c13","peg$c14","peg$c15","expr","peg$c16","peg$c17","peg$c18","peg$classExpectation","peg$c19","peg$c20","peg$c21","func","close","funcName","value","Math","sin","cos","tan","abs","acos","acosh","asin","asinh","atan","atanh","cbrt","ceil","clz32","cosh","exp","expm1","floor","fround","log1p","log10","log2","round","sinh","sqrt","tanh","trunc","peg$c22","peg$c23","peg$c24","peg$c25","chars","undefined","window","SCIPARSER_CONSTANTS","constName","has","get","peg$c26","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","num","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","parseInt","peg$c43","peg$c44","peg$c45","peg$c46","parseFloat","peg$c47","peg$c48","peg$c49","peg$c50","m","exec","pow","peg$c51","peg$c52","peg$c53","peg$currPos","peg$savedPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","substring","peg$computeLocation","peg$buildStructuredError","ignoreCase","peg$computePosDetails","pos","p","details","startPos","endPos","startPosDetails","endPosDetails","start","offset","peg$fail","push","s0","s1","s2","s3","s4","s5","s6","s7","peg$parseTerm","peg$parsews","peg$parseFactor","s8","test","charAt","peg$parseUnaryFunc","peg$parseGrouped","peg$parseNumber","peg$parseTypedNumber","peg$parseUntypedNumber","peg$parseConstant","peg$parseSci","peg$parseFloat","peg$parseInteger","FormulaInput","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","onChange","_this2","react_default","a","createElement","formula","e","target","className","placeholder","rows","data-testid","React","Component","ResultDisplay","resultValue","isNaN","toExponential","ResultsDisplay","display","results","ResultsDisplay_ResultDisplay","key","ConstantDisplay","symbol","ConstantsDisplay","constants","currentConstants","currentConstantNames","toConsumableArray","keys","constantKey","constantInfo","constantValue","constantUnits","ConstantsDisplay_ConstantDisplay","colSpan","Map","PI","E","SETTER_LINE_REGEXP","Calculator","lines","split","trim","match","parsedLine","SciParse","set","error","errorMessage","FORMULA_STORAGE_KEY","App","localStorage","getItem","setItem","calculated","calculate","src_FormulaInput_0","changedFormula","setState","src_ResultsDisplay_0","src_ConstantsDisplay_0","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","container","document","getElementById","createRoot","render","src_App_0"],"mappings":"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","file":"static/js/main.a5eefcd7.chunk.js","sourcesContent":["/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { Expression: peg$parseExpression },\n      peg$startRuleFunction  = peg$parseExpression,\n\n      peg$c0 = \"+\",\n      peg$c1 = peg$literalExpectation(\"+\", false),\n      peg$c2 = \"-\",\n      peg$c3 = peg$literalExpectation(\"-\", false),\n      peg$c4 = function(head, tail) {\r\n            return tail.reduce(function(result, element) {\r\n              const numLeft = result[0];\r\n              const numRight = element[3][0];\r\n              const unitLeft = result[1];\r\n              // TODO: Check if units of result[1] match units of element[3][1]\r\n              console.log(\"Handling addition, assuming that type \", result[1], \" matches type \", element[3][1]);\r\n              var units = unitLeft;\r\n              if (unitLeft == UNTYPED) {\r\n              \tunits = element[3][1];\r\n              }\r\n              if (element[1] === \"+\") {\r\n              \treturn [numLeft + numRight, units];\r\n              }\r\n              if (element[1] === \"-\") {\r\n              \treturn [numLeft - numRight, units];\r\n              }\r\n            }, head);\r\n          },\n      peg$c5 = \"*\",\n      peg$c6 = peg$literalExpectation(\"*\", false),\n      peg$c7 = \"/\",\n      peg$c8 = peg$literalExpectation(\"/\", false),\n      peg$c9 = function(head, tail) {\r\n            return tail.reduce(function(result, element) {\r\n              const numLeft = result[0];\r\n              const numRight = element[3][0];\r\n              const unitLeft = result[1];\r\n              const unitRight = element[3][1];\r\n              if (element[1] === \"*\") {\r\n              \tvar units;\r\n              \tif (unitLeft == UNTYPED) {\r\n                  \tunits = unitRight;\r\n                  } else if (unitRight == UNTYPED) {\r\n                  \tunits = unitLeft;\r\n                  } else {\r\n                  \tunits = unitLeft + '⋅(' + unitRight + ')';\r\n                  }\r\n              \treturn [numLeft * numRight, units];\r\n              }\r\n              if (element[1] === \"/\") {\r\n              \tvar units;\r\n              \tif (unitLeft == UNTYPED) {\r\n                  \tunits = '1/(' + unitRight + ')';\r\n                  } else if (unitRight == UNTYPED) {\r\n                  \tunits = unitLeft;\r\n                  } else {\r\n                  \tunits = '(' + unitLeft + ')/(' + unitRight + ')';\r\n                  }\r\n              \treturn [numLeft / numRight, units];\r\n              }\r\n            }, head);\r\n          },\n      peg$c10 = peg$otherExpectation(\"grouped\"),\n      peg$c11 = \"(\",\n      peg$c12 = peg$literalExpectation(\"(\", false),\n      peg$c13 = \")\",\n      peg$c14 = peg$literalExpectation(\")\", false),\n      peg$c15 = function(expr) {\r\n          return expr;\r\n        },\n      peg$c16 = peg$otherExpectation(\"unaryfunc\"),\n      peg$c17 = /^[a-z]/,\n      peg$c18 = peg$classExpectation([[\"a\", \"z\"]], false, false),\n      peg$c19 = /^[a-z0-9]/,\n      peg$c20 = peg$classExpectation([[\"a\", \"z\"], [\"0\", \"9\"]], false, false),\n      peg$c21 = function(func, expr, close) {\r\n          const funcName = func[0] + func[1].join('');\r\n          const value = expr[0];\r\n\r\n          switch (funcName) {\r\n            case \"sin\":\r\n              return [Math.sin(value), UNTYPED];\r\n            case \"cos\":\r\n              return [Math.cos(value), UNTYPED];\r\n            case \"tan\":\r\n              return [Math.tan(value), UNTYPED];\r\n            case \"abs\":\r\n              return [Math.abs(value), UNTYPED];\r\n            case \"acos\":\r\n              return [Math.acos(value), UNTYPED];\r\n            case \"acosh\":\r\n              return [Math.acosh(value), UNTYPED];\r\n            case \"asin\":\r\n              return [Math.asin(value), UNTYPED];\r\n            case \"asinh\":\r\n              return [Math.asinh(value), UNTYPED];\r\n            case \"atan\":\r\n              return [Math.atan(value), UNTYPED];\r\n            case \"atanh\":\r\n              return [Math.atanh(value), UNTYPED];\r\n            case \"cbrt\":\r\n              return [Math.cbrt(value), UNTYPED];\r\n            case \"ceil\":\r\n              return [Math.ceil(value), UNTYPED];\r\n            case \"clz32\":\r\n              return [Math.clz32(value), UNTYPED];\r\n            case \"cos\":\r\n              return [Math.cos(value), UNTYPED];\r\n            case \"cosh\":\r\n              return [Math.cosh(value), UNTYPED];\r\n            case \"exp\":\r\n              return [Math.exp(value), UNTYPED];\r\n            case \"expm1\":\r\n              return [Math.expm1(value), UNTYPED];\r\n            case \"floor\":\r\n              return [Math.floor(value), UNTYPED];\r\n            case \"fround\":\r\n              return [Math.fround(value), UNTYPED];\r\n            case \"log\":\r\n              return [Math.log(value), UNTYPED];\r\n            case \"log1p\":\r\n              return [Math.log1p(value), UNTYPED];\r\n            case \"log10\":\r\n              return [Math.log10(value), UNTYPED];\r\n            case \"log2\":\r\n              return [Math.log2(value), UNTYPED];\r\n            case \"round\":\r\n              return [Math.round(value), UNTYPED];\r\n            case \"sin\":\r\n              return [Math.sin(value), UNTYPED];\r\n            case \"sinh\":\r\n              return [Math.sinh(value), UNTYPED];\r\n            case \"sqrt\":\r\n              return [Math.sqrt(value), UNTYPED];\r\n            case \"tan\":\r\n              return [Math.tan(value), UNTYPED];\r\n            case \"tanh\":\r\n              return [Math.tanh(value), UNTYPED];\r\n            case \"trunc\":\r\n              return [Math.trunc(value), UNTYPED];\r\n            default:\r\n              expected(\"unrecognized unary function '\" + funcName + \"'\");\r\n          }\r\n        },\n      peg$c22 = peg$otherExpectation(\"constant\"),\n      peg$c23 = /^[A-Za-z]/,\n      peg$c24 = peg$classExpectation([[\"A\", \"Z\"], [\"a\", \"z\"]], false, false),\n      peg$c25 = function(chars) {\r\n          if (window.SCIPARSER_CONSTANTS  == undefined) {\r\n            expected(\"predefined constant\");\r\n          } else {\r\n            const constName = chars.join('');\r\n\r\n            if (window.SCIPARSER_CONSTANTS.has(constName)) {\r\n              const constValue = window.SCIPARSER_CONSTANTS.get(constName)\r\n              return constValue;\r\n            }\r\n            expected(\"predefined constant\");\r\n          }\r\n        },\n      peg$c26 = peg$otherExpectation(\"typednumber\"),\n      peg$c27 = /^[ \\t\\n\\r]/,\n      peg$c28 = peg$classExpectation([\" \", \"\\t\", \"\\n\", \"\\r\"], false, false),\n      peg$c29 = /^[a-zA-Z]/,\n      peg$c30 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"]], false, false),\n      peg$c31 = /^[a-zA-Z\\/0-9\\-\\^]/,\n      peg$c32 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], \"/\", [\"0\", \"9\"], \"-\", \"^\"], false, false),\n      peg$c33 = function(num, units) {\r\n          const joinedUnits = units[0] + units[1].join('');\r\n          return [num, joinedUnits];\r\n        },\n      peg$c34 = peg$otherExpectation(\"untypednumber\"),\n      peg$c35 = function(num) {\r\n          return [num, UNTYPED];\r\n        },\n      peg$c36 = peg$otherExpectation(\"number\"),\n      peg$c37 = peg$otherExpectation(\"integer\"),\n      peg$c38 = /^[\\-+]/,\n      peg$c39 = peg$classExpectation([\"-\", \"+\"], false, false),\n      peg$c40 = /^[0-9]/,\n      peg$c41 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c42 = function() {\r\n          return parseInt(text(), 10);\r\n        },\n      peg$c43 = peg$otherExpectation(\"float\"),\n      peg$c44 = \".\",\n      peg$c45 = peg$literalExpectation(\".\", false),\n      peg$c46 = function() {\r\n          return parseFloat(text(), 10);\r\n        },\n      peg$c47 = peg$otherExpectation(\"scientific notation\"),\n      peg$c48 = \"e\",\n      peg$c49 = peg$literalExpectation(\"e\", false),\n      peg$c50 = function() {\r\n        \tconst m = /([-+]?[0-9]+(.[0-9]+)?)[eE]([-+]?[0-9]+)/.exec(text());\r\n          return parseFloat(m[1], 10) * Math.pow(10, parseInt(m[3]));\r\n         },\n      peg$c51 = peg$otherExpectation(\"whitespace\"),\n      peg$c52 = /^[ \\t]/,\n      peg$c53 = peg$classExpectation([\" \", \"\\t\"], false, false),\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parseExpression() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseTerm();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parsews();\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 43) {\n          s5 = peg$c0;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c1); }\n        }\n        if (s5 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 45) {\n            s5 = peg$c2;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c3); }\n          }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsews();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseTerm();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parsews();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 43) {\n            s5 = peg$c0;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c1); }\n          }\n          if (s5 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 45) {\n              s5 = peg$c2;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c3); }\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsews();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseTerm();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c4(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTerm() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseFactor();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parsews();\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 42) {\n          s5 = peg$c5;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c6); }\n        }\n        if (s5 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 47) {\n            s5 = peg$c7;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c8); }\n          }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsews();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseFactor();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parsews();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 42) {\n            s5 = peg$c5;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c6); }\n          }\n          if (s5 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 47) {\n              s5 = peg$c7;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c8); }\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsews();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseFactor();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c9(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseFactor() {\n    var s0;\n\n    s0 = peg$parseUnaryFunc();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseGrouped();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseTypedNumber();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseUntypedNumber();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseConstant();\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseGrouped() {\n    var s0, s1, s2, s3, s4, s5;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c11;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c12); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseExpression();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsews();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s5 = peg$c13;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c14); }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c15(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c10); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnaryFunc() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (peg$c17.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c18); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = [];\n      if (peg$c19.test(input.charAt(peg$currPos))) {\n        s4 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c20); }\n      }\n      if (s4 !== peg$FAILED) {\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          if (peg$c19.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c20); }\n          }\n        }\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s3 = peg$c11;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c12); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsews();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseExpression();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$currPos;\n              s7 = peg$parsews();\n              if (s7 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s8 = peg$c13;\n                  peg$currPos++;\n                } else {\n                  s8 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c14); }\n                }\n                if (s8 !== peg$FAILED) {\n                  s7 = [s7, s8];\n                  s6 = s7;\n                } else {\n                  peg$currPos = s6;\n                  s6 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s6;\n                s6 = peg$FAILED;\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c21(s1, s5, s6);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c16); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseConstant() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c23.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c24); }\n      }\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c23.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c24); }\n          }\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c25(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c22); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseTypedNumber() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseNumber();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c27.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c28); }\n      }\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c27.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c28); }\n          }\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        if (peg$c29.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c30); }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = [];\n          if (peg$c31.test(input.charAt(peg$currPos))) {\n            s6 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c32); }\n          }\n          while (s6 !== peg$FAILED) {\n            s5.push(s6);\n            if (peg$c31.test(input.charAt(peg$currPos))) {\n              s6 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c32); }\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c33(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c26); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUntypedNumber() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseNumber();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c35(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c34); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseNumber() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = peg$parseSci();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseFloat();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseInteger();\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c36); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseInteger() {\n    var s0, s1, s2, s3, s4;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    if (s1 !== peg$FAILED) {\n      if (peg$c38.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c39); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (peg$c40.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c41); }\n        }\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            if (peg$c40.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c41); }\n            }\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c42();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c37); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseFloat() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    if (s1 !== peg$FAILED) {\n      if (peg$c38.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c39); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (peg$c40.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c41); }\n        }\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            if (peg$c40.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c41); }\n            }\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s4 = peg$c44;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c45); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            if (peg$c40.test(input.charAt(peg$currPos))) {\n              s6 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c41); }\n            }\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              if (peg$c40.test(input.charAt(peg$currPos))) {\n                s6 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c41); }\n              }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c46();\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c43); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseSci() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    if (s1 !== peg$FAILED) {\n      if (peg$c38.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c39); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (peg$c40.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c41); }\n        }\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            if (peg$c40.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c41); }\n            }\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s5 = peg$c44;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c45); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = [];\n            if (peg$c40.test(input.charAt(peg$currPos))) {\n              s7 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c41); }\n            }\n            while (s7 !== peg$FAILED) {\n              s6.push(s7);\n              if (peg$c40.test(input.charAt(peg$currPos))) {\n                s7 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c41); }\n              }\n            }\n            if (s6 !== peg$FAILED) {\n              s5 = [s5, s6];\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 101) {\n              s5 = peg$c48;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c49); }\n            }\n            if (s5 !== peg$FAILED) {\n              if (peg$c38.test(input.charAt(peg$currPos))) {\n                s6 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c39); }\n              }\n              if (s6 === peg$FAILED) {\n                s6 = null;\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = [];\n                if (peg$c40.test(input.charAt(peg$currPos))) {\n                  s8 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s8 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                }\n                if (s8 !== peg$FAILED) {\n                  while (s8 !== peg$FAILED) {\n                    s7.push(s8);\n                    if (peg$c40.test(input.charAt(peg$currPos))) {\n                      s8 = input.charAt(peg$currPos);\n                      peg$currPos++;\n                    } else {\n                      s8 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c41); }\n                    }\n                  }\n                } else {\n                  s7 = peg$FAILED;\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c50();\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c47); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsews() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    if (peg$c52.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c53); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c52.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c53); }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c51); }\n    }\n\n    return s0;\n  }\n\n\r\n    const UNTYPED = \"untyped\";\r\n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n","import React from 'react';\r\nimport './FormulaInput.css';\r\n\r\nclass FormulaInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      onChange: props.onChange\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <textarea\r\n          value={this.props.formula}\r\n          onChange={e => this.state.onChange(e.target.value)}\r\n          className=\"FormulaInput\"\r\n          placeholder=\"Enter formula here, e.g.&#10;mass = 3 kg&#10;velocity = 0.5 * c&#10;momentum = mass * velocity\"\r\n          rows=\"10\"\r\n          data-testid=\"formula-text-area\">\r\n        </textarea>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormulaInput;","import React from 'react';\r\nimport './ResultsDisplay.css';\r\n\r\nclass ResultDisplay extends React.Component {\r\n  render() {\r\n    let resultValue = this.props.resultValue;\r\n    if (!isNaN(resultValue) && '' !== resultValue) {\r\n      resultValue = resultValue.toExponential();\r\n    }\r\n    return (\r\n        <p className=\"Result\" data-testid=\"result-display-area\">\r\n          {resultValue} {this.props.units}\r\n        </p>\r\n    );\r\n  }\r\n}\r\n\r\nclass ResultsDisplay extends React.Component {\r\n  render() {\r\n\r\n    const display = [];\r\n\r\n    const results = this.props.results;\r\n    for (let i = 0; i < results.length; i++) {\r\n      display.push(<ResultDisplay resultValue={results[i][0]} units={results[i][1]} key={i}/>);\r\n    }\r\n\r\n\r\n    return (\r\n      <div data-testid=\"results-display-area\">\r\n        Results:\r\n        {display}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResultsDisplay;","import React from 'react';\r\nimport './ConstantsDisplay.css';\r\n\r\nclass ConstantDisplay extends React.Component {\r\n  render() {\r\n    return (\r\n        <tr className=\"Constant\">\r\n          <td>{this.props.symbol}</td><td>=</td><td>{this.props.value}</td><td>{this.props.units}</td>\r\n        </tr>\r\n    );\r\n  }\r\n}\r\n\r\nclass ConstantsDisplay extends React.Component {\r\n  render() {\r\n    const constants = [];\r\n    const currentConstants = this.props.constants;\r\n    const currentConstantNames = [...currentConstants.keys()].sort();\r\n    for (let i = 0; i < currentConstantNames.length; i++) {\r\n      const constantKey = currentConstantNames[i];\r\n      const constantInfo = currentConstants.get(constantKey);\r\n      const constantValue = constantInfo[0];\r\n      const constantUnits = constantInfo[1];\r\n      constants.push(<ConstantDisplay symbol={constantKey} value={constantValue} units={constantUnits} key={i}/>);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        Constants:\r\n        <table data-testid=\"constants-display-area\">\r\n          <thead><tr>\r\n            <th colSpan=\"2\">Symbol</th><th>value</th><th>units</th>\r\n          </tr></thead>\r\n          <tbody>\r\n            {constants}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ConstantsDisplay;","import { parse as SciParse } from './SciGrammar'\r\n\r\n// A global used in SciGrammar.pegjs.  We can't pass in\r\n// arguments, but we share a global environment.\r\n// We can also dynamically modify this map, e.g.\r\n// by adding new constants at runtime.\r\nconst SCIPARSER_CONSTANTS =  new Map([\r\n  [\"Pi\", [Math.PI, \"untyped\"], \"Pi\"],\r\n  [\"E\", [Math.E, \"untyped\"], \"Euler's Constant\"],\r\n  [\"c\", [2.99792e8, \"m/s\"], \"Speed of Light\"],\r\n  [\"e\", [1.60218e-19, \"C\"], \"Elementary Charge\"],\r\n  [\"Me\", [9.10938e-31, \"kg\"], \"Electron Mass\"],\r\n  [\"Mp\", [1.67262e-27, \"kg\"], \"Proton Mass\"],\r\n  [\"Mn\", [1.67493e-27, \"kg\"], \"Neutron Mass\"],\r\n  [\"h\", [6.62607e-34, \"Js\"], \"Planck's Constant\"],\r\n  [\"Na\", [6.02214e23, \"1/mol\"], \"Avogadro's Number\"],\r\n  [\"R\", [8.31446, \"J/Kmol\"], \"Gas Constant\"],\r\n  [\"kB\", [1.38065e-23, \"J/K\"], \"Boltzmann's Constant\"],\r\n  [\"a0\", [5.29177e-11, \"m\"], \"Bohr Radius\"],\r\n  [\"e0\", [8.85419e-12, \"C^2/Jm\"], \"Vacuum Permittivity\"],\r\n  [\"Rh\", [13.6057, \"eV\"], \"Rydberg Constant\"],\r\n  [\"amu\", [1.66054e-27, \"kg/amu\"], \"Atomic Mass\"],\r\n  [\"eV\", [1.60218e-19, \"J/eV\"], \"Electron Volt\"],\r\n  [\"D\", [3.336e-30, \"Cm\"], \"Debye\"]\r\n]);\r\n\r\nconst SETTER_LINE_REGEXP = /([a-zA-Z]+) *= *(.*)/;\r\n\r\nclass Calculator {\r\n  static calculate(text) {\r\n    // Copy the constant set of constants into a map that we\r\n    // may modify. We do NOT want to modify the original.\r\n    // We're setting it on \"window\" so that the parser\r\n    // code can read it.\r\n    window.SCIPARSER_CONSTANTS = new Map(SCIPARSER_CONSTANTS);\r\n    let result = [];\r\n    const lines = text.split('\\n');\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const line = lines[i];\r\n      if (line.trim() === '') {\r\n        result.push(['(blank)', '']);\r\n      } else {\r\n        try {\r\n          const match = SETTER_LINE_REGEXP.exec(line);\r\n          let parsedLine = [];\r\n          if (match) {\r\n            // We found a line that's a \"setter\"\r\n            parsedLine = SciParse(match[2]);\r\n            // Copy the value of the line to the global set of constants,\r\n            // overwriting any existing value\r\n            window.SCIPARSER_CONSTANTS.set(match[1], parsedLine);\r\n          } else {\r\n            parsedLine = SciParse(line);\r\n          }\r\n          result.push(parsedLine);\r\n        } catch (error) {\r\n          var errorMessage = error.message;\r\n          if (error.location && error.location.start && error.location.start.column) {\r\n            errorMessage = errorMessage + ' (column ' + error.location.start.column + ')';\r\n          }\r\n          result.push([errorMessage, '']);\r\n        }\r\n      }\r\n    }\r\n    return [result, window.SCIPARSER_CONSTANTS];\r\n  }\r\n}\r\n\r\nexport {SCIPARSER_CONSTANTS, Calculator}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport FormulaInput from './FormulaInput';\r\nimport ResultsDisplay from './ResultsDisplay';\r\nimport ConstantsDisplay from './ConstantsDisplay';\r\nimport {Calculator, SCIPARSER_CONSTANTS} from './Calculator';\r\n\r\nconst FORMULA_STORAGE_KEY = 'SciCalcFormula';\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      formula: localStorage.getItem(FORMULA_STORAGE_KEY) || ''\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let results = [];\r\n    let constants = SCIPARSER_CONSTANTS;\r\n    if (this.state.formula !== '') {\r\n      localStorage.setItem(FORMULA_STORAGE_KEY, this.state.formula );\r\n      const calculated = Calculator.calculate(this.state.formula);\r\n      results = calculated[0];\r\n      constants = calculated[1];\r\n    }\r\n    return (\r\n      <span>\r\n        <FormulaInput formula={this.state.formula} onChange={ changedFormula => { this.setState({formula: changedFormula }) } } />\r\n        <ResultsDisplay results={results} />\r\n        <ConstantsDisplay constants={constants} />\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\nroot.render(<App />);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}